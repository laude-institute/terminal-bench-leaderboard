{
    "id": "dc627093-3f90-4f71-9b60-650e2f0b1365",
    "trial_name": "lcbpro-2091g.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2091g",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2091G)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nProgrammer Gleb frequently visits the IT Campus \"NEIMARK\" to participate in programming training sessions.\n\nNot only is Gleb a programmer, but he is also a renowned rower, so he covers part of his journey from home to the campus by kayaking along a river. Assume that Gleb starts at point $0$ and must reach point $s$ (i.e., travel $s$ meters along a straight line). To make the challenge tougher, Gleb has decided not to go outside the segment $[0, s]$. The dimensions of the kayak can be neglected.\n\nGleb is a strong programmer! Initially, his power is $k$. Gleb's power directly affects the movement of his kayak. If his current power is $x$, then with one paddle stroke the kayak moves $x$ meters in the current direction. Gleb can turn around and continue moving in the opposite direction, but such a maneuver is quite challenging, and after each turn, his power decreases by $1$. The power can never become $0$ -- if his current power is $1$, then even after turning it remains $1$. Moreover, Gleb cannot make two turns in a row -- after each turn, he must move at least once before making another turn. Similarly, Gleb cannot make a turn immediately after the start -- he must first perform a paddle stroke.\n\nGleb wants to reach point $s$ from point $0$ without leaving the segment $[0, s]$ and while preserving as much power as possible. Help him -- given the value $s$ and his initial power $k$, determine the maximum possible power he can have upon reaching point $s$.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\leq t \\leq 100$). The description of the test cases follows.\n\nA single line of each test case contains two integers $s$ and $k$ ($1 \\leq s \\leq 10^9$, $1 \\leq k \\leq 1000$, $k \\leq s$).\n\nIt is guaranteed that the sum of $k$ over all test cases does not exceed $2000$.\n\n### Output\n\nFor each test case, output the maximum possible power Gleb can have at the end of his journey.\n\n### Example\n\n#### Input #1\n\n```\n\n8\n\n9 6\n\n10 7\n\n24 2\n\n123456 777\n\n6 4\n\n99 6\n\n10 4\n\n99 4\n\n```\n\n#### Output #1\n\n```\n4\n1\n2\n775\n1\n4\n2\n2\n```\n\n### Note\n\nOne of the variants of Gleb's movement in the first example:\n\n![](https://espresso.codeforces.com/4e41b69eb4b8149b5fb4530e5f1e6eede1c4d340.png)",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2091g/lcbpro-2091g.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:28:22.189759+00:00",
    "trial_ended_at": "2025-09-05T23:28:49.002772+00:00",
    "agent_started_at": "2025-09-05T23:28:27.380631+00:00",
    "agent_ended_at": "2025-09-05T23:28:27.662642+00:00",
    "test_started_at": "2025-09-05T23:28:29.364611+00:00",
    "test_ended_at": "2025-09-05T23:28:35.294187+00:00"
}