{
    "id": "9a422ca4-4d04-4253-8c68-7e96d9deecb9",
    "trial_name": "lcbpro-2042d.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2042d",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2042D)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nSuppose you are working in some audio streaming service. The service has $n$ active users and $10^9$ tracks users can listen to. Users can like tracks and, based on likes, the service should recommend them new tracks.\n\nTracks are numbered from $1$ to $10^9$. It turned out that tracks the $i$-th user likes form a segment $[l_i, r_i]$.\n\nLet's say that the user $j$ is a predictor for user $i$ ($j \\neq i$) if user $j$ likes all tracks the $i$-th user likes (and, possibly, some other tracks too).\n\nAlso, let's say that a track is strongly recommended for user $i$ if the track is not liked by the $i$-th user yet, but it is liked by every predictor for the $i$-th user.\n\nCalculate the number of strongly recommended tracks for each user $i$. If a user doesn't have any predictors, then print $0$ for that user.\n\n### Input\n\nThe first line contains one integer $t$ ($1 \\le t \\le 10^4$) -- the number of test cases. Next, $t$ cases follow.\n\nThe first line of each test case contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) -- the number of users.\n\nThe next $n$ lines contain two integers $l_i$ and $r_i$ per line ($1 \\le l_i \\le r_i \\le 10^9$) -- the segment of tracks the $i$-th user likes.\n\nAdditional constraint on the input: the sum of $n$ over all test cases doesn't exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, print $n$ integers, where the $i$-th integer is the number of strongly recommended tracks for the $i$-th user (or $0$, if that user doesn't have any predictors).\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n3\n\n3 8\n\n2 5\n\n4 5\n\n2\n\n42 42\n\n1 1000000000\n\n3\n\n42 42\n\n1 1000000000\n\n42 42\n\n6\n\n1 10\n\n3 10\n\n3 7\n\n5 7\n\n4 4\n\n1 2\n\n```\n\n#### Output #1\n\n```\n0\n0\n1\n999999999\n0\n0\n0\n0\n0\n2\n3\n2\n4\n8\n```\n\n### Note\n\nIn the first test case:\n\n- the first user has no predictors;\n- the second user has no predictors;\n- the third user has two predictors: users $1$ and $2$; only track $3$ is liked by both of them and not liked by the third user.\n\nIn the second test case, the second user is a predictor for the first user. Therefore, all tracks, except $42$, are strongly recommended for the first user.\n\nIn the third test case, the first user has two predictors: users $2$ and $3$, but there is no track that is liked by them and not liked by the first user himself.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2042d/lcbpro-2042d.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:48:52.183216+00:00",
    "trial_ended_at": "2025-09-05T23:49:27.624579+00:00",
    "agent_started_at": "2025-09-05T23:49:00.074361+00:00",
    "agent_ended_at": "2025-09-05T23:49:00.971781+00:00",
    "test_started_at": "2025-09-05T23:49:04.838124+00:00",
    "test_ended_at": "2025-09-05T23:49:08.868466+00:00"
}