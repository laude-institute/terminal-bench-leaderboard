{
    "id": "b6223693-2db9-42ab-8ef4-83d05278026f",
    "trial_name": "lcbpro-2108f.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2108f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2108F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nPizano built an array $a$ of $n$ towers, each consisting of $a_i \\ge 0$ blocks.\n\nPizano can knock down a tower so that the next $a_i$ towers grow by $1$. In other words, he can take the element $a_i$, increase the next $a_i$ elements by one, and then set $a_i$ to $0$. The blocks that fall outside the array of towers disappear. If Pizano knocks down a tower with $0$ blocks, nothing happens.\n\nPizano wants to knock down all $n$ towers in any order, each exactly once. That is, for each $i$ from $1$ to $n$, he will knock down the tower at position $i$ exactly once.\n\nMoreover, the resulting array of tower heights must be non-decreasing. This means that after he knocks down all $n$ towers, for any $i < j$, the tower at position $i$ must not be taller than the tower at position $j$.\n\nYou are required to output the maximum $\\text{MEX}$ of the resulting array of tower heights.\n\nThe $\\text{MEX}$ of an array is the smallest non-negative integer that is not present in the array.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains an integer $n$ ($1 \\leq n \\leq 10^5$) -- the number of towers.\n\nThe second line of each test case contains $n$ integers -- the initial heights of the towers $a_1, \\ldots, a_n$ ($0 \\leq a_i \\leq 10^9$).\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n### Output\n\nFor each test case, output a single integer -- the maximum $\\text{MEX}$ of the final array.\n\n### Example\n\n#### Input #1\n\n```\n\n8\n\n2\n\n1 2\n\n4\n\n2 1 0 0\n\n10\n\n5 9 3 7 1 5 1 5 4 3\n\n10\n\n1 1 1 1 1 1 1 1 1 1\n\n10\n\n3 2 1 0 3 2 1 0 3 2\n\n5\n\n5 2 0 5 5\n\n1\n\n1000000000\n\n7\n\n4 0 1 0 2 7 7\n\n```\n\n#### Output #1\n\n```\n2\n3\n7\n4\n5\n4\n1\n3\n```\n\n### Note\n\nExplanation for the first test case.\n\n![](https://espresso.codeforces.com/b27f3ad036c335f58fe3b07c11f325fd39450091.png)\n\nExplanation for the second test case. Note that all towers were knocked down exactly once, and the final array of heights is non-decreasing.\n\n![](https://espresso.codeforces.com/5d8740d0c655899ee758c6d450d7dca858b1f65d.png)",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2108f/lcbpro-2108f.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:51:48.943809+00:00",
    "trial_ended_at": "2025-09-05T23:52:23.223006+00:00",
    "agent_started_at": "2025-09-05T23:51:58.682956+00:00",
    "agent_ended_at": "2025-09-05T23:51:59.703778+00:00",
    "test_started_at": "2025-09-05T23:52:02.589159+00:00",
    "test_ended_at": "2025-09-05T23:52:06.909866+00:00"
}