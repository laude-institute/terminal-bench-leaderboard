{
    "id": "2e67a2a7-2cbb-40c5-a976-68ea9074d803",
    "trial_name": "lcbpro-2064b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2064b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2064B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nDefine the score of an arbitrary array $b$ to be the length of $b$ minus the number of distinct elements in $b$. For example:\n\n- The score of $[1, 2, 2, 4]$ is $1$, as it has length $4$ and only $3$ distinct elements ($1$, $2$, $4$).\n- The score of $[1, 1, 1]$ is $2$, as it has length $3$ and only $1$ distinct element ($1$).\n- The empty array has a score of $0$.\n\nYou have an array $a$. You need to remove some non-empty contiguous subarray from $a$ at most once.\n\nMore formally, you can do the following at most once:\n\n- pick two integers $l$, $r$ where $1 \\le l \\le r \\le n$, and\n- delete the contiguous subarray $[a_l,\\ldots,a_r]$ from $a$ (that is, replace $a$ with $[a_1,\\ldots,a_{l - 1},a_{r + 1},\\ldots,a_n]$).\n\nOutput an operation such that the score of $a$ is maximum; if there are multiple answers, output one that minimises the final length of $a$ after the operation. If there are still multiple answers, you may output any of them.\n\n### Input\n\nThe first line contains an integer $t$ ($1 \\le t \\le 10^4$) -- the number of testcases.\n\nThe first line of each testcase contains an integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) -- the length of the array $a$.\n\nThe second line of each testcase contains $n$ integers $a_1,a_2,\\ldots,a_n$ ($1 \\le a_i \\le n$).\n\nThe sum of $n$ across all testcases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each testcase, if you wish to not make a move, output $0$.\n\nOtherwise, output two integers $l$ and $r$ ($1 \\le l \\le r \\le n$), representing the left and right bound of the removed subarray.\n\nThe removed subarray should be chosen such that the score is maximized, and over all such answers choose any of them that minimises the final length of the array.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n1\n\n1\n\n5\n\n1 1 1 1 1\n\n4\n\n2 1 3 2\n\n```\n\n#### Output #1\n\n```\n1 1\n0\n2 3\n```\n\n### Note\n\nIn the first testcase, we have two options:\n\n- do nothing: the score of $[1]$ is $1-1=0$.\n- remove the subarray with $l=1$, $r=1$: we remove the only element, and we get an empty array with score $0$.\n\nTherefore, the maximum score possible is $0$. However, since we need to additionally minimise the final length of the array, we must output the second option with $l=r=1$. Note that the first option of doing nothing is incorrect, since it has a longer final length.\n\nIn the second testcase, no subarray is selected, so after which $a$ is still $[1, 1, 1, 1, 1]$. This has length $5$ and $1$ distinct element, so it has a score of $5 - 1 = 4$. This can be proven to be a shortest array which maximises the score.\n\nIn the third testcase, the subarray selected is $[2, \\color{red}1, \\color{red}3, 2]$, after which $a$ becomes $[2, 2]$. This has length $2$ and $1$ distinct element, so it has a score of $2 - 1 = 1$. This can be proven to be a shortest array which maximises the score.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2064b/lcbpro-2064b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:56:25.684491+00:00",
    "trial_ended_at": "2025-09-05T23:57:02.748958+00:00",
    "agent_started_at": "2025-09-05T23:56:36.046929+00:00",
    "agent_ended_at": "2025-09-05T23:56:36.443394+00:00",
    "test_started_at": "2025-09-05T23:56:39.323946+00:00",
    "test_ended_at": "2025-09-05T23:56:43.342565+00:00"
}