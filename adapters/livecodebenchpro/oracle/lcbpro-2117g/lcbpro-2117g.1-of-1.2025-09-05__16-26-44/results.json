{
    "id": "bf386a71-75fc-401e-a351-796b930ae174",
    "trial_name": "lcbpro-2117g.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2117g",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2117G)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given an undirected connected weighted graph. Define the cost of a path of length $k$ to be as follows:\n\n- Let the weights of all the edges on the path be $w_1,...,w_k$.\n- The cost of the path is $(\\min_{i = 1}^{k}{w_i}) + (\\max_{i=1}^{k}{w_i})$, or in other words, the maximum edge weight + the minimum edge weight.\n\nAcross all paths from vertex $1$ to $n$, report the cost of the path with minimum cost. Note that the path is not necessarily simple.\n\n### Input\n\nThe first line contains an integer $t$ ($1 \\le t \\le 10^4$)Â -- the number of test cases.\n\nThe first line of each test case contains two integers $n$ and $m$ ($2 \\le n \\le 2 \\cdot 10^5, n - 1 \\le m \\le \\min(2 \\cdot 10^5, \\frac{n(n - 1)}{2})$).\n\nThe next $m$ lines each contain integers $u, v$ and $w$ ($1 \\le u, v \\le n, 1 \\le w \\le 10^9$) representing an edge from vertex $u$ to $v$ with weight $w$. It is guaranteed that the graph does not contain self-loops or multiple edges and the resulting graph is connected.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$ and that the sum of $m$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output a single integer, the minimum cost path from vertex $1$ to $n$.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n3 2\n\n1 2 1\n\n2 3 1\n\n3 2\n\n1 3 13\n\n1 2 5\n\n8 9\n\n1 2 6\n\n2 3 5\n\n3 8 6\n\n1 4 7\n\n4 5 4\n\n5 8 7\n\n1 6 5\n\n6 7 5\n\n7 8 5\n\n3 3\n\n1 3 9\n\n1 2 8\n\n2 3 3\n\n```\n\n#### Output #1\n\n```\n2\n18\n10\n11\n```\n\n### Note\n\nFor the second test case, the optimal path is $1 \\rightarrow 2 \\rightarrow 1 \\rightarrow 3$, the edge weights are $5, 5, 13$ so the cost is $\\min(5, 5, 13) + \\max(5, 5, 13) = 5 + 13 = 18$. It can be proven that there is no path with lower cost.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2117g/lcbpro-2117g.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:39:45.048926+00:00",
    "trial_ended_at": "2025-09-05T23:40:25.587851+00:00",
    "agent_started_at": "2025-09-05T23:39:57.456337+00:00",
    "agent_ended_at": "2025-09-05T23:39:58.113757+00:00",
    "test_started_at": "2025-09-05T23:40:01.621265+00:00",
    "test_ended_at": "2025-09-05T23:40:11.538302+00:00"
}