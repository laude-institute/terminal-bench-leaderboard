{
    "id": "385fb45a-3cc4-4f7b-949b-4df98c0bde35",
    "trial_name": "lcbpro-1999f.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-1999f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1999F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nArul has a binary array$^{\\text{∗}}$ $a$ of length $n$.\n\nHe will take all subsequences$^{\\text{†}}$ of length $k$ ($k$ is odd) of this array and find their median.$^{\\text{‡}}$\n\nWhat is the sum of all these values?\n\nAs this sum can be very large, output it modulo $10^9 + 7$. In other words, print the remainder of this sum when divided by $10^9 + 7$.\n\n$^{\\text{∗}}$A binary array is an array consisting only of zeros and ones.\n\n$^{\\text{†}}$An array $b$ is a subsequence of an array $a$ if $b$ can be obtained from $a$ by the deletion of several (possibly, zero or all) elements. Subsequences don't have to be contiguous.\n\n$^{\\text{‡}}$The median of an array of odd length $k$ is the $\\frac{k+1}{2}$-th element when sorted.\n\n### Input\n\nThe first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) -- the number of test cases.\n\nThe first line of each test case contains two integers $n$ and $k$ ($1 \\leq k \\leq n \\leq 2 \\cdot 10^5$, $k$ is odd) -- the length of the array and the length of the subsequence, respectively.\n\nThe second line of each test case contains $n$ integers $a_i$ ($0 \\leq a_i \\leq 1$) -- the elements of the array.\n\nIt is guaranteed that sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, print the sum modulo $10^9 + 7$.\n\n### Example\n\n#### Input #1\n\n```\n\n8\n\n4 3\n\n1 0 0 1\n\n5 1\n\n1 1 1 1 1\n\n5 5\n\n0 1 0 1 0\n\n6 3\n\n1 0 1 0 1 1\n\n4 3\n\n1 0 1 1\n\n5 3\n\n1 0 1 1 0\n\n2 1\n\n0 0\n\n34 17\n\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\n```\n\n#### Output #1\n\n```\n2\n5\n0\n16\n4\n7\n0\n333606206\n```\n\n### Note\n\nIn the first test case, there are four subsequences of $[1,0,0,1]$ with length $k=3$:\n\n- $[1,0,0]$: median $= 0$.\n- $[1,0,1]$: median $= 1$.\n- $[1,0,1]$: median $= 1$.\n- $[0,0,1]$: median $= 0$.\n\nThe sum of the results is $0+1+1+0=2$.\n\nIn the second test case, all subsequences of length $1$ have median $1$, so the answer is $5$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-1999f/lcbpro-1999f.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:53:18.383214+00:00",
    "trial_ended_at": "2025-09-05T23:53:52.684718+00:00",
    "agent_started_at": "2025-09-05T23:53:26.730393+00:00",
    "agent_ended_at": "2025-09-05T23:53:27.477775+00:00",
    "test_started_at": "2025-09-05T23:53:30.541240+00:00",
    "test_ended_at": "2025-09-05T23:53:34.631893+00:00"
}