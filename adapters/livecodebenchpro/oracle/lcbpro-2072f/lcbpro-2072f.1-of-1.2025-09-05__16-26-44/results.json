{
    "id": "31c606c1-ae89-44f1-8c1e-5365bfd75ee0",
    "trial_name": "lcbpro-2072f.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2072f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2072F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nMonsters are approaching the city, and to protect it, Akito must create a protective field around the city. As everyone knows, protective fields come in various levels. Akito has chosen the field of level $n$. To construct the field, a special phrase is required, which is the $n$-th row of the Great Magical Triangle, represented as a two-dimensional array. We will call this array $T$.\n\nThe triangle is defined as follows:\n\n- In the $i$-th row, there are $i$ integers.\n- The single integer in the first row is $k$.\n- Let the $j$-th element of the $i$-th row be denoted as $T\\_{i,j}$. Then\n\n$$T_{i,j} = \\begin{cases} T_{i-1,j-1} \\oplus T_{i-1,j}, &\\textrm{if } 1 < j < i \\\\ T_{i-1,j}, &\\textrm{if } j = 1 \\\\ T_{i-1,j-1}, &\\textrm{if } j = i \\end{cases}$$\n\nwhere $a \\oplus b$ is the bitwise [exclusive \"OR\"](https://en.wikipedia.org/wiki/Bitwise_operation#XOR)(XOR) of the integers $a$ and $b$.\n\nHelp Akito find the integers in the $n$-th row of the infinite triangle before the monsters reach the city.\n\n### Input\n\nThe first line contains the integer $t$ ($1 \\le t \\le 10^4$) -- the number of test cases.\n\nIn the only line of each test case, there are two integers $n$ and $k$ ($1 \\le n \\le 10^6,\\ 1 \\le k < 2^{31}$) -- the row index that Akito needs and the integer in the first row of the Great Magical Triangle, respectively.\n\nIt is guaranteed that the sum of $n$ across all test cases does not exceed $10^6$.\n\n### Output\n\nFor each test case, output $n$ integers -- the elements of the $n$-th row of the Great Magical Triangle.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n1 5\n\n2 10\n\n3 16\n\n9 1\n\n1 52\n\n```\n\n#### Output #1\n\n```\n5\n10 10\n16 0 16\n1 0 0 0 0 0 0 0 1\n52\n```\n\n### Note\n\nIn the first example, the first row of the Great Magical Triangle is $[5]$ by definition.\n\nIn the second example, $T_{2,1} = T_{1,1} = 10$ and $T_{2,2} = T_{1, 1} = 10$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2072f/lcbpro-2072f.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:44:50.179732+00:00",
    "trial_ended_at": "2025-09-05T23:45:41.501528+00:00",
    "agent_started_at": "2025-09-05T23:45:04.625392+00:00",
    "agent_ended_at": "2025-09-05T23:45:05.573660+00:00",
    "test_started_at": "2025-09-05T23:45:07.765133+00:00",
    "test_ended_at": "2025-09-05T23:45:24.373530+00:00"
}