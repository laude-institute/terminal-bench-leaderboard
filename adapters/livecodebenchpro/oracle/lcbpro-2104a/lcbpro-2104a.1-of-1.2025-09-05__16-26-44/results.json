{
    "id": "3ac636ea-8c02-4f6f-930c-b24438ca7517",
    "trial_name": "lcbpro-2104a.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2104a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2104A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nMonocarp placed three decks of cards in a row on the table. The first deck consists of $a$ cards, the second deck consists of $b$ cards, and the third deck consists of $c$ cards, with the condition $a < b < c$.\n\nMonocarp wants to take some number of cards (at least one, but no more than $c$) from the third deck and distribute them between the first two decks so that each of the taken cards ends up in either the first or the second deck. It is possible that all the cards taken from the third deck will go into the same deck.\n\nYour task is to determine whether Monocarp can make the number of cards in all three decks equal using the described operation.\n\n### Input\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$) -- the number of test cases.\n\nThe only line of each test case contains three integers $a, b$, and $c$ ($1 \\le a, b, c \\le 10^8$) -- the number of cards in the first, second, and third decks, respectively.\n\nAdditional constraint on the input: $a < b < c$.\n\n### Output\n\nFor each test case, output \"YES\" (without quotes) if Monocarp can make the number of cards in all three decks equal using the described operation. Otherwise, output \"NO\" (without quotes).\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n3 5 10\n\n12 20 30\n\n3 5 7\n\n1 5 6\n\n```\n\n#### Output #1\n\n```\nYES\nNO\nYES\nNO\n```\n\n### Note\n\nIn the first test case, Monocarp has to take $4$ cards from the third deck, put $3$ cards in the first deck, and $1$ card in the second deck. Thus, there will be $6$ cards in all three decks.\n\nIn the second test case, it is impossible to make the number of cards in all three decks equal.\n\nIn the third test case, Monocarp has to take $2$ cards from the third deck and put both in the first deck. Thus, there will be $5$ cards in all three decks.\n\nIn the fourth test case, it is also impossible to make the number of cards in all three decks equal.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2104a/lcbpro-2104a.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:44:45.355548+00:00",
    "trial_ended_at": "2025-09-05T23:45:23.767168+00:00",
    "agent_started_at": "2025-09-05T23:45:00.439280+00:00",
    "agent_ended_at": "2025-09-05T23:45:00.877597+00:00",
    "test_started_at": "2025-09-05T23:45:03.046828+00:00",
    "test_ended_at": "2025-09-05T23:45:09.838879+00:00"
}