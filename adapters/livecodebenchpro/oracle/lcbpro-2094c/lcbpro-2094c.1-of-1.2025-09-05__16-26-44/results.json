{
    "id": "deba7afa-6e06-4e52-a626-53224f4a1d5e",
    "trial_name": "lcbpro-2094c.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2094c",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2094C)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nBrr Brrr Patapim is trying to learn of Tiramisù's secret passcode, which is a permutation$^{\\text{∗}}$ of $2\\cdot n$ elements. To help Patapim guess, Tiramisù gave him an $n\\times n$ grid $G$, in which $G_{i,j}$ (or the element in the $i$-th row and $j$-th column of the grid) contains $p_{i+j}$, or the $(i+j)$-th element in the permutation.\n\nGiven this grid, please help Patapim crack the forgotten code. It is guaranteed that the permutation exists, and it can be shown that the permutation can be determined uniquely.\n\n$^{\\text{∗}}$A permutation of $m$ integers is a sequence of $m$ integers which contains each of $1,2,\\ldots,m$ exactly once. For example, $[1, 3, 2]$ and $[2, 1]$ are permutations, while $[1, 2, 4]$ and $[1, 3, 2, 3]$ are not.\n\n### Input\n\nThe first line contains an integer $t$ -- the number of test cases ($1 \\leq t \\leq 200$).\n\nThe first line of each test case contains an integer $n$ ($1 \\leq n \\leq 800$).\n\nEach of the following $n$ lines contains $n$ integers, giving the grid $G$. The first of these lines contains $G_{1,1}, G_{1,2},\\ldots,G_{1,n}$; the second of these lines contains $G_{2,1}, G_{2,2},\\ldots,G_{2,n}$, and so on. ($1 \\leq G_{i,j} \\leq 2\\cdot n$).\n\nIt is guaranteed that the grid encodes a valid permutation, and the sum of $n$ over all test cases does not exceed $800$.\n\n### Output\n\nFor each test case, please output $2n$ numbers on a new line: $p_1,p_2,\\ldots,p_{2n}$.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n3\n\n1 6 2\n\n6 2 4\n\n2 4 3\n\n1\n\n1\n\n2\n\n2 3\n\n3 4\n\n```\n\n#### Output #1\n\n```\n5 1 6 2 4 3\n2 1\n1 2 3 4\n```",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2094c/lcbpro-2094c.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:59:35.643558+00:00",
    "trial_ended_at": "2025-09-06T00:00:10.218101+00:00",
    "agent_started_at": "2025-09-05T23:59:45.889629+00:00",
    "agent_ended_at": "2025-09-05T23:59:46.677553+00:00",
    "test_started_at": "2025-09-05T23:59:49.588969+00:00",
    "test_ended_at": "2025-09-05T23:59:53.605551+00:00"
}