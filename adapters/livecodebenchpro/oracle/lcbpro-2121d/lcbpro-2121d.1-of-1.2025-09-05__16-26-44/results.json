{
    "id": "78086ce1-5074-4071-8cf1-a9cc00c2699a",
    "trial_name": "lcbpro-2121d.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2121d",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2121D)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given two arrays of integers $a_1, a_2, \\ldots, a_n$ and $b_1, b_2, \\ldots, b_n$. It is guaranteed that each integer from $1$ to $2 \\cdot n$ appears in exactly one of the arrays.\n\nYou need to perform a certain number of operations (possibly zero) so that both of the following conditions are satisfied:\n\n- For each $1 \\leq i < n$, it holds that $a_i < a_{i + 1}$ and $b_i < b_{i + 1}$.\n- For each $1 \\leq i \\leq n$, it holds that $a_i < b_i$.\n\nDuring each operation, you can perform exactly one of the following three actions:\n\n1. Choose an index $1 \\leq i < n$ and swap the values $a_i$ and $a_{i + 1}$.\n2. Choose an index $1 \\leq i < n$ and swap the values $b_i$ and $b_{i + 1}$.\n3. Choose an index $1 \\leq i \\leq n$ and swap the values $a_i$ and $b_i$.\n\nYou do not need to minimize the number of operations, but the total number must not exceed $1709$. Find any sequence of operations that satisfies both conditions.\n\n### Input\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 100$) -- the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \\leq n \\leq 40$) -- the length of the arrays $a$ and $b$.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 2 \\cdot n$).\n\nThe third line of each test case contains $n$ integers $b_1, b_2, \\ldots, b_n$ ($1 \\leq b_i \\leq 2 \\cdot n$).\n\nIt is guaranteed that each integer from $1$ to $2 \\cdot n$ appears either in array $a$ or in array $b$.\n\n### Output\n\nFor each test case, output the sequence of operations.\n\nIn the first line for each test case, output the number of operations $k$. Note that $0 \\leq k \\leq 1709$.\n\nIn the following $k$ lines for each test case, output the operations themselves:\n\n- If you want to swap the values $a_i$ and $a_{i + 1}$, output two integers $1$ and $i$. Note that $1 \\leq i < n$.\n- If you want to swap the values $b_i$ and $b_{i + 1}$, output two integers $2$ and $i$. Note that $1 \\leq i < n$.\n- If you want to swap the values $a_i$ and $b_i$, output two integers $3$ and $i$. Note that $1 \\leq i \\leq n$.\n\nIt can be shown that under the given constraints, a solution always exists.\n\n### Example\n\n#### Input #1\n\n```\n\n6\n\n1\n\n1\n\n2\n\n1\n\n2\n\n1\n\n2\n\n1 3\n\n4 2\n\n2\n\n1 4\n\n3 2\n\n3\n\n6 5 4\n\n3 2 1\n\n3\n\n5 3 4\n\n2 6 1\n\n```\n\n#### Output #1\n\n```\n0\n1\n3 1\n1\n2 1\n1\n3 2\n9\n3 1\n3 2\n3 3\n1 1\n2 1\n2 2\n1 2\n1 1\n2 1\n6\n2 2\n1 1\n1 2\n2 1\n3 1\n3 2\n```\n\n### Note\n\nIn the first test case, $a_1 < b_1$, so no operations need to be applied.\n\nIn the second test case, $a_1 > b_1$. After applying the operation, these values will be swapped.\n\nIn the third test case, after applying the operation, $a = [1, 3]$ and $b = [2, 4]$.\n\nIn the fourth test case, after applying the operation, $a = [1, 2]$ and $b = [3, 4]$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2121d/lcbpro-2121d.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:28:43.316714+00:00",
    "trial_ended_at": "2025-09-05T23:29:13.829749+00:00",
    "agent_started_at": "2025-09-05T23:28:51.746979+00:00",
    "agent_ended_at": "2025-09-05T23:28:52.896247+00:00",
    "test_started_at": "2025-09-05T23:28:55.117125+00:00",
    "test_ended_at": "2025-09-05T23:29:00.732493+00:00"
}