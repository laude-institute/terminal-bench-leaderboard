{
    "id": "0d0df409-3021-4a09-82a7-7a99104e3f60",
    "trial_name": "lcbpro-1994c.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-1994c",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1994C)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYaroslav is playing a computer game, and at one of the levels, he encountered $n$ mushrooms arranged in a row. Each mushroom has its own level of toxicity; the $i$-th mushroom from the beginning has a toxicity level of $a_i$. Yaroslav can choose two integers $1 \\le l \\le r \\le n$, and then his character will take turns from left to right to eat mushrooms from this subsegment one by one, i.e., the mushrooms with numbers $l, l+1, l+2, \\ldots, r$.\n\nThe character has a toxicity level $g$, initially equal to $0$. The computer game is defined by the number $x$ -- the maximum toxicity level at any given time. When eating a mushroom with toxicity level $k$, the following happens:\n\n1. The toxicity level of the character is increased by $k$.\n2. If $g \\leq x$, the process continues; otherwise, $g$ becomes zero and the process continues.\n\nYaroslav became interested in how many ways there are to choose the values of $l$ and $r$ such that the final value of $g$ is not zero. Help Yaroslav find this number!\n\n### Input\n\nEach test consists of multiple test cases. The first line contains an integer $t$ ($1 \\le t \\le 10^{4}$) -- the number of test cases. Then follows the description of the test cases.\n\nThe first line of each test case contains two integers $n$, $x$ ($1 \\leq n \\leq 2 \\cdot 10^5, 1 \\le x \\le 10^9$) -- the number of mushrooms and the maximum toxicity level.\n\nThe second line of each test case contains $n$ numbers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^9$).\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output a single number -- the number of subsegments such that the final value of $g$ will not be zero.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n4 2\n\n1 1 1 1\n\n3 2\n\n1 2 3\n\n1 6\n\n10\n\n6 3\n\n1 2 1 4 3 8\n\n5 999999999\n\n999999999 999999998 1000000000 1000000000 500000000\n\n```\n\n#### Output #1\n\n```\n8\n2\n0\n10\n7\n```\n\n### Note\n\nIn the first test case, the subsegments $(1, 1)$, $(1, 2)$, $(1, 4)$, $(2, 2)$, $(2, 3)$, $(3, 3)$, $(3, 4)$ and $(4, 4)$ are suitable.\n\nIn the second test case, non-zero $g$ will remain only on the subsegments $(1, 1)$ and $(2, 2)$.\n\nIn the third test case, on the only possible subsegment, $g$ will be zero.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-1994c/lcbpro-1994c.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:46:34.620803+00:00",
    "trial_ended_at": "2025-09-05T23:47:09.800374+00:00",
    "agent_started_at": "2025-09-05T23:46:43.282892+00:00",
    "agent_ended_at": "2025-09-05T23:46:43.789283+00:00",
    "test_started_at": "2025-09-05T23:46:46.937602+00:00",
    "test_ended_at": "2025-09-05T23:46:54.494682+00:00"
}