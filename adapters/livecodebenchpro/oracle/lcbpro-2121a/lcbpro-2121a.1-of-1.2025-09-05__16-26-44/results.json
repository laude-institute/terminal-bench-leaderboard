{
    "id": "8aab0418-7887-4cab-aa47-d7b968bf3083",
    "trial_name": "lcbpro-2121a.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2121a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2121A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given an array of distinct integers $x_1, x_2, \\ldots, x_n$ and an integer $s$.\n\nInitially, you are at position $pos = s$ on the $X$ axis. In one step, you can perform exactly one of the following two actions:\n\n- Move from position $pos$ to position $pos + 1$.\n- Move from position $pos$ to position $pos - 1$.\n\nA sequence of steps will be considered successful if, during the entire journey, you visit each position $x_i$ on the $X$ axis at least once. Note that the initial position $pos = s$ is also considered visited.\n\nYour task is to determine the minimum number of steps in any successful sequence of steps.\n\n### Input\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 1000$) -- the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $s$ ($1 \\leq n \\leq 10$, $1 \\leq s \\leq 100$) -- the number of positions to visit and the starting position.\n\nThe second line of each test case contains $n$ integers $x_1, x_2, \\ldots, x_n$ ($1 \\leq x_i \\leq 100$). It is guaranteed that for all $1 \\leq i < n$, it holds that $x_i < x_{i + 1}$.\n\n### Output\n\nFor each test case, output the minimum number of steps in any successful sequence of steps.\n\n### Example\n\n#### Input #1\n\n```\n\n12\n\n1 1\n\n1\n\n1 2\n\n1\n\n1 1\n\n2\n\n2 1\n\n2 3\n\n2 2\n\n1 3\n\n2 3\n\n1 2\n\n3 1\n\n1 2 3\n\n3 2\n\n1 3 4\n\n3 3\n\n1 2 3\n\n4 3\n\n1 2 3 10\n\n5 5\n\n1 2 3 6 7\n\n6 6\n\n1 2 3 9 10 11\n\n```\n\n#### Output #1\n\n```\n0\n1\n1\n2\n3\n2\n2\n4\n2\n11\n8\n15\n```\n\n### Note\n\nIn the first test case, no steps need to be taken, so the only visited position will be $1$.\n\nIn the second test case, the following path can be taken: $2 \\rightarrow 1$. The number of steps is $1$.\n\nIn the third test case, the following path can be taken: $1 \\rightarrow 2$. The number of steps is $1$.\n\nIn the fifth test case, the following path can be taken: $2 \\rightarrow 1 \\rightarrow 2 \\rightarrow 3$. The number of steps is $3$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2121a/lcbpro-2121a.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:46:52.035126+00:00",
    "trial_ended_at": "2025-09-05T23:47:25.256047+00:00",
    "agent_started_at": "2025-09-05T23:47:04.771064+00:00",
    "agent_ended_at": "2025-09-05T23:47:05.743412+00:00",
    "test_started_at": "2025-09-05T23:47:07.767622+00:00",
    "test_ended_at": "2025-09-05T23:47:10.795093+00:00"
}