{
    "id": "831d5b2f-3ed5-43cf-aa65-1c4a6860e038",
    "trial_name": "lcbpro-2064c.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2064c",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2064C)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou have an array $a$ of length $n$ consisting of non-zero integers. Initially, you have $0$ coins, and you will do the following until $a$ is empty:\n\n- Let $m$ be the current size of $a$. Select an integer $i$ where $1 \\\\le i \\\\le m$, gain $\\|a\\_i\\|$$^{\\\\text{∗}}$ coins, and then:\n- if $a_i < 0$, then replace $a$ with $[a_1,a_2,\\ldots,a_{i - 1}]$ (that is, delete the suffix beginning with $a_i$);\n- otherwise, replace $a$ with $[a_{i + 1},a_{i + 2},\\ldots,a_m]$ (that is, delete the prefix ending with $a_i$).\n\nFind the maximum number of coins you can have at the end of the process.\n\n$^{\\text{∗}}$Here $|a_i|$ represents the absolute value of $a_i$: it equals $a_i$ when $a_i > 0$ and $-a_i$ when $a_i < 0$.\n\n### Input\n\nThe first line contains an integer $t$ ($1 \\le t \\le 10^4$) -- the number of testcases.\n\nThe first line of each testcase contains an integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) -- the length of $a$.\n\nThe second line of each testcase contains $n$ integers $a_1,a_2,\\ldots,a_n$ ($-10^9 \\le a_i \\le 10^9$, $a_i \\ne 0$).\n\nThe sum of $n$ across all testcases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output the maximum number of coins you can have at the end of the process.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n6\n\n3 1 4 -1 -5 -9\n\n6\n\n-10 -3 -17 1 19 20\n\n1\n\n1\n\n```\n\n#### Output #1\n\n```\n23\n40\n1\n```\n\n### Note\n\nAn example of how to get $23$ coins in the first testcase is as follows:\n\n- $a = [3, 1, 4, -1, -5, \\color{red}{-9}] \\xrightarrow{i = 6} a = [3, 1, 4, -1, -5] $, and get $9$ coins.\n- $a = [\\color{red}{3}, 1, 4, -1, -5] \\xrightarrow{i = 1} a = [1, 4, -1, -5] $, and get $3$ coins.\n- $a = [\\color{red}{1}, 4, -1, -5] \\xrightarrow{i = 1} a = [4, -1, -5] $, and get $1$ coin.\n- $a = [4, -1, \\color{red}{-5}] \\xrightarrow{i = 3} a = [4, -1] $, and get $5$ coins.\n- $a = [4, \\color{red}{-1}] \\xrightarrow{i = 2} a = [4] $, and get $1$ coin.\n- $a = [\\color{red}{4}] \\xrightarrow{i = 1} a = [] $, and get $4$ coins.\n\nAfter all the operations, you have $23$ coins.\n\nAn example of how to get $40$ coins in the second testcase is as follows:\n\n- $a = [-10, -3, -17, \\color{red}{1}, 19, 20] \\xrightarrow{i = 4} a = [19, 20] $, and get $1$ coin.\n- $a = [\\color{red}{19}, 20] \\xrightarrow{i = 1} a = [20] $, and get $19$ coins.\n- $a = [\\color{red}{20}] \\xrightarrow{i = 1} a = [] $, and get $20$ coins.\n\nAfter all the operations, you have $40$ coins.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2064c/lcbpro-2064c.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:57:56.878037+00:00",
    "trial_ended_at": "2025-09-05T23:58:34.491205+00:00",
    "agent_started_at": "2025-09-05T23:58:09.453810+00:00",
    "agent_ended_at": "2025-09-05T23:58:10.421784+00:00",
    "test_started_at": "2025-09-05T23:58:13.072456+00:00",
    "test_ended_at": "2025-09-05T23:58:17.541164+00:00"
}