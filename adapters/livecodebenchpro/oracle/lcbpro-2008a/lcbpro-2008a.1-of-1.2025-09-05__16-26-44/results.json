{
    "id": "91f9d216-3b4b-4004-8eac-dee9ca83e158",
    "trial_name": "lcbpro-2008a.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2008a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2008A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nToday, Sakurako has a math exam. The teacher gave the array, consisting of $a$ ones and $b$ twos.\n\nIn an array, Sakurako must place either a '+' or a '-' in front of each element so that the sum of all elements in the array equals $0$.\n\nSakurako is not sure if it is possible to solve this problem, so determine whether there is a way to assign signs such that the sum of all elements in the array equals $0$.\n\n### Input\n\nThe first line contains a single integer $t$ ($1\\le t\\le 100$)  -- the number of test cases.\n\nThe only line of each test case contains two integers $a$ and $b$ ($0\\le a,b<10$)  -- the number of '1's and the number of '2's in the array.\n\n### Output\n\nFor each test case, output \"Yes\" if you can make the sum of the entire array equal to $0$, and \"No\" otherwise.\n\nYou can output each letter in any case (lowercase or uppercase). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be accepted as a positive answer.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n0 1\n\n0 3\n\n2 0\n\n2 3\n\n3 1\n\n```\n\n#### Output #1\n\n```\nNO\nNO\nYES\nYES\nNO\n```\n\n### Note\n\n1. $a=0$, $b=1$: This means the array is $[2]$ -- it is impossible to add the signs '+' or '-' to get $0$ as a result;\n2. $a=0$, $b=3$: This means the array is $[2, 2, 2]$ -- it is impossible to add the signs '+' or '-' to get $0$ as a result;\n3. $a=2$, $b=0$: This means the array is $[1, 1]$ -- it is possible to add the signs '+' or '-' to get $0$ as a result ($+1-1=0$);\n4. $a=2$, $b=3$: This means the array is $[1, 1, 2, 2, 2]$ -- it is possible to add the signs '+' or '-' to get $0$ as a result ($+1+1-2-2+2=0$);",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2008a/lcbpro-2008a.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:46:50.739799+00:00",
    "trial_ended_at": "2025-09-05T23:47:22.969295+00:00",
    "agent_started_at": "2025-09-05T23:47:00.923900+00:00",
    "agent_ended_at": "2025-09-05T23:47:02.362124+00:00",
    "test_started_at": "2025-09-05T23:47:06.514048+00:00",
    "test_ended_at": "2025-09-05T23:47:09.884892+00:00"
}