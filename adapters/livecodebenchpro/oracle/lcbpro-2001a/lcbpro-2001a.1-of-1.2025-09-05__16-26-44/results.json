{
    "id": "21563fb0-31a1-4754-9908-0c91d1943b43",
    "trial_name": "lcbpro-2001a.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2001a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2001A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given a cyclic array $a_1, a_2, \\ldots, a_n$.\n\nYou can perform the following operation on $a$ at most $n - 1$ times:\n\n- Let $m$ be the current size of $a$, you can choose any two adjacent elements where the previous one is no greater than the latter one (In particular, $a_m$ and $a_1$ are adjacent and $a_m$ is the previous one), and delete exactly one of them. In other words, choose an integer $i$ ($1 \\leq i \\leq m$) where $a_i \\leq a_{(i \\bmod m) + 1}$ holds, and delete exactly one of $a_i$ or $a_{(i \\bmod m) + 1}$ from $a$.\n\nYour goal is to find the minimum number of operations needed to make all elements in $a$ equal.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 500$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 100$) -- the length of the array $a$.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\le a_i \\le n$) -- the elements of array $a$.\n\n### Output\n\nFor each test case, output a single line containing an integer: the minimum number of operations needed to make all elements in $a$ equal.\n\n### Example\n\n#### Input #1\n\n```\n\n7\n\n1\n\n1\n\n3\n\n1 2 3\n\n3\n\n1 2 2\n\n5\n\n5 4 3 2 1\n\n6\n\n1 1 2 2 3 3\n\n8\n\n8 7 6 3 8 7 6 3\n\n6\n\n1 1 4 5 1 4\n\n```\n\n#### Output #1\n\n```\n0\n2\n1\n4\n4\n6\n3\n```\n\n### Note\n\nIn the first test case, there is only one element in $a$, so we can't do any operation.\n\nIn the second test case, we can perform the following operations to make all elements in $a$ equal:\n\n- choose $i = 2$, delete $a_3$, then $a$ would become $[1, 2]$.\n- choose $i = 1$, delete $a_1$, then $a$ would become $[2]$.\n\nIt can be proven that we can't make all elements in $a$ equal using fewer than $2$ operations, so the answer is $2$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2001a/lcbpro-2001a.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:38:42.415038+00:00",
    "trial_ended_at": "2025-09-05T23:39:17.976228+00:00",
    "agent_started_at": "2025-09-05T23:38:53.383970+00:00",
    "agent_ended_at": "2025-09-05T23:38:53.721583+00:00",
    "test_started_at": "2025-09-05T23:38:55.723275+00:00",
    "test_ended_at": "2025-09-05T23:39:03.036188+00:00"
}