{
    "id": "b8fa2fb1-87ee-4f93-8a54-e0c9bfdd58f1",
    "trial_name": "lcbpro-1983b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-1983b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1983B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given two grids of numbers $a$ and $b$, with $n$ rows and $m$ columns. All the values in the grid are $0$, $1$ or $2$.\n\nYou can perform the following operation on $a$ any number of times:\n\n- Pick any subrectangle in the grid with length and width $\\ge 2$. You are allowed to choose the entire grid as a subrectangle.\n- The subrectangle has four corners. Take any pair of diagonally opposite corners of the chosen subrectangle and add $1$ to their values modulo $3$.\n- For the pair of corners not picked, add $2$ to their values modulo $3$.\n\nNote that the operation only changes the values of the corners of the picked subrectangle.\n\nIs it possible to convert the grid $a$ into grid $b$ by applying the above operation any number of times (possibly zero)?\n\n### Input\n\nThe first line contains an integer $t$, the number of testcases ($1 \\le t \\le 250$).\n\nFor each testcase:\n\nThe first line contains two integers $n$ and $m$, the number of rows and columns in the grid ($2 \\le n,m \\le 500$).\n\nEach of the next n lines contain m characters -- the $j$-th character of the $i$-th line represents $a_{i,j}$.\n\nEach of the next n lines contain m characters -- the $j$-th character of the $i$-th line represents $b_{i,j}$ ($0 \\le a_{i,j}, b_{i,j} \\le 2$).\n\nIt is guaranteed that the sum of $n$ over all test cases and the sum of $m$ over all test cases do not exceed $500$.\n\n### Output\n\nFor each test case print \"YES\" (without quotes) if it is possible to convert grid $a$ into grid $b$ and \"NO\" (without quotes) otherwise.\n\nYou can output the answer in any case (upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive responses.\n\n### Example\n\n#### Input #1\n\n```\n\n7\n\n3 3\n\n000\n\n000\n\n000\n\n111\n\n111\n\n111\n\n4 4\n\n0000\n\n0000\n\n0000\n\n0000\n\n2100\n\n1200\n\n0012\n\n0021\n\n4 4\n\n1020\n\n1200\n\n1210\n\n0000\n\n0000\n\n1200\n\n2200\n\n0000\n\n3 3\n\n012\n\n012\n\n012\n\n010\n\n111\n\n011\n\n8 8\n\n00000000\n\n00000000\n\n00000000\n\n00000000\n\n00000000\n\n00000000\n\n00000000\n\n10000000\n\n00000000\n\n01200000\n\n02010000\n\n00102000\n\n00020100\n\n00001020\n\n00000210\n\n10000000\n\n2 7\n\n0000000\n\n0000000\n\n2220111\n\n0111222\n\n2 7\n\n0000000\n\n0100010\n\n2220111\n\n1210202\n\n```\n\n#### Output #1\n\n```\nYES\nYES\nYES\nNO\nYES\nNO\nYES\n```\n\n### Note\n\nIn the first testcase, grid $a$ can be converted into $b$ in the following manner:\n\n$\\begin{matrix}\\fbox{0} & 0 & \\fbox{0}\\\\ 0 & 0 & 0\\\\ \\fbox{0} & 0 & \\fbox{0}\\end{matrix} \\Rightarrow \\begin{matrix}1 & 0 & 2\\\\ 0 & \\fbox{0} & \\fbox{0}\\\\ 2 & \\fbox{0} & \\fbox{1}\\end{matrix} \\Rightarrow \\begin{matrix}1 & 0 & 2\\\\ \\fbox{0} & \\fbox{1} & 2\\\\ \\fbox{2} & \\fbox{2} & 2\\end{matrix} \\Rightarrow \\begin{matrix}1 & \\fbox{0} & \\fbox{2}\\\\ 1 & 0 & 2\\\\ 1 & \\fbox{0} & \\fbox{2}\\end{matrix} \\Rightarrow \\begin{matrix}1 & 1 & 1\\\\ 1 & \\fbox{0} & \\fbox{2}\\\\ 1 & \\fbox{2} & \\fbox{0}\\end{matrix} \\Rightarrow \\begin{matrix}1 & 1 & 1\\\\ 1 & 1 & 1\\\\ 1 & 1 & 1\\end{matrix}$\n\nHere, in each operation, the top-right and bottom-left corners highlighted by a box are incremented by $2$ modulo $3$, while the top-left and bottom-right corners are incremented by $1$ modulo $3$.\n\nIn the fourth testcase, it can be proven that it is not possible to convert grid $a$ into grid $b$ using the above-mentioned operations any number of times.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-1983b/lcbpro-1983b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:47:23.971467+00:00",
    "trial_ended_at": "2025-09-05T23:47:53.767288+00:00",
    "agent_started_at": "2025-09-05T23:47:31.009362+00:00",
    "agent_ended_at": "2025-09-05T23:47:31.387711+00:00",
    "test_started_at": "2025-09-05T23:47:33.936227+00:00",
    "test_ended_at": "2025-09-05T23:47:39.334304+00:00"
}