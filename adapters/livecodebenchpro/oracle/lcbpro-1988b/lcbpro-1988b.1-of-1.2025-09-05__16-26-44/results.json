{
    "id": "fa669645-598a-469f-b658-16a5c42243fc",
    "trial_name": "lcbpro-1988b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-1988b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1988B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given a sequence $[a_1,\\ldots,a_n]$ where each element $a_i$ is either $0$ or $1$. You can apply several (possibly zero) operations to the sequence. In each operation, you select two integers $1\\le l\\le r\\le |a|$ (where $|a|$ is the current length of $a$) and replace $[a_l,\\ldots,a_r]$ with a single element $x$, where $x$ is the majority of $[a_l,\\ldots,a_r]$.\n\nHere, the majority of a sequence consisting of $0$ and $1$ is defined as follows: suppose there are $c_0$ zeros and $c_1$ ones in the sequence, respectively.\n\n- If $c_0\\ge c_1$, the majority is $0$.\n- If $c_0<c_1$, the majority is $1$.\n\nFor example, suppose $a=[1,0,0,0,1,1]$. If we select $l=1,r=2$, the resulting sequence will be $[0,0,0,1,1]$. If we select $l=4,r=6$, the resulting sequence will be $[1,0,0,1]$.\n\nDetermine if you can make $a=[1]$ with a finite number of operations.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 4\\cdot 10^4$). Description of the test cases follows.\n\nThe first line of each testcase contains one integer $n$ ($1\\le n\\le 2\\cdot 10^5$).\n\nThe second line of each testcase contains a string consisting of $0$ and $1$, describing the sequence $a$.\n\nIt's guaranteed that the sum of $n$ over all testcases does not exceed $2\\cdot 10^5$.\n\n### Output\n\nFor each testcase, if it's possible to make $a=[1]$, print YES. Otherwise, print NO. You can output the answer in any case (upper or lower). For example, the strings yEs, yes, Yes, and YES will be recognized as positive responses.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n1\n\n0\n\n1\n\n1\n\n2\n\n01\n\n9\n\n100000001\n\n9\n\n000011000\n\n```\n\n#### Output #1\n\n```\nNo\nYes\nNo\nYes\nNo\n```\n\n### Note\n\nIn the fourth testcase of the example, initially $a=[1,0,0,0,0,0,0,0,1]$. A valid sequence of operations is:\n\n1. Select $l=2,r=8$ and apply the operation. $a$ becomes $[1,0,1]$.\n2. Select $l=1,r=3$ and apply the operation. $a$ becomes $[1]$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-1988b/lcbpro-1988b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:36:03.690893+00:00",
    "trial_ended_at": "2025-09-05T23:36:46.435012+00:00",
    "agent_started_at": "2025-09-05T23:36:17.811794+00:00",
    "agent_ended_at": "2025-09-05T23:36:18.356302+00:00",
    "test_started_at": "2025-09-05T23:36:22.516858+00:00",
    "test_ended_at": "2025-09-05T23:36:31.212645+00:00"
}