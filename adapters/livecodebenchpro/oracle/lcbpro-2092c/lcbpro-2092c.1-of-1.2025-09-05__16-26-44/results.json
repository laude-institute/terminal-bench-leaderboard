{
    "id": "88fe0fde-ae9a-43e2-87b7-b66332319454",
    "trial_name": "lcbpro-2092c.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2092c",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2092C)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nFor her birthday, each of Asuna's $n$ admirers gifted her a tower. The height of the tower from the $i$-th admirer is equal to $a_i$.\n\nAsuna evaluates the beauty of the received gifts as $\\max(a_1, a_2, \\ldots, a_n)$. She can perform the following operation an arbitrary number of times (possibly, zero).\n\n- Take such $1 \\le i \\neq j \\le n$ that $a_i + a_j$ is odd and $a_i > 0$, then decrease $a_i$ by $1$ and increase $a_j$ by $1$.\n\nIt is easy to see that the heights of the towers remain non-negative during the operations.\n\nHelp Asuna find the maximum possible beauty of the gifts after any number of operations!\n\n### Input\n\nEach test consists of several test cases. The first line of the input data contains one integer $t$ ($1 \\le t \\le 10^4$) -- the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \\leq n \\leq 2 \\cdot 10^5$) -- the number of admirers of Asuna.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n \\ (1 \\le a_i \\le 10^9)$ -- the heights of the towers.\n\nIt is guaranteed that the sum of $n$ across all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output a single integer: the maximum value of the beauty of the gifts that Asuna can achieve.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n3\n\n5 3 9\n\n2\n\n3 2\n\n4\n\n1 2 2 1\n\n5\n\n5 4 3 2 9\n\n```\n\n#### Output #1\n\n```\n9\n5\n5\n21\n```\n\n### Note\n\nIn the first test case, no pair of towers satisfies the required condition for applying the operation, so no operations can be performed. In this case, the answer is $\\max(5, \\ 3, \\ 9) = 9$.\n\nIn the second test case, the operation with $i = 2$ and $j = 1$ can be applied twice. After that, the array becomes: $a \\ = \\ [5, \\ 0]$. Thus, the answer is 5.\n\nIn the third test case, the following sequence of operations can be applied:\n\n1. Operation with $i=1$ and $j=2$.\n$[1, \\ 2, \\ 2, \\ 1] \\quad \\rightarrow \\quad [0, \\ 3, \\ 2, \\ 1]$\n\n2. Operation with $i=3$ and $j=2$.\n$[0, \\ 3, \\ 2, \\ 1] \\quad \\rightarrow \\quad [0, \\ 4, \\ 1, \\ 1]$\n\n3. Operation with $i=3$ and $j=2$.\n$[0, \\ 4, \\ 1, \\ 1] \\quad \\rightarrow \\quad [0, \\ 5, \\ 0, \\ 1]$\n\n\n$\\max(0, \\ 5, \\ 0, \\ 1) \\ = \\ 5$.\n\nTherefore, the answer is 5.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2092c/lcbpro-2092c.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:54:07.776878+00:00",
    "trial_ended_at": "2025-09-05T23:54:44.854114+00:00",
    "agent_started_at": "2025-09-05T23:54:19.227221+00:00",
    "agent_ended_at": "2025-09-05T23:54:19.894581+00:00",
    "test_started_at": "2025-09-05T23:54:22.918844+00:00",
    "test_ended_at": "2025-09-05T23:54:26.706324+00:00"
}