{
    "id": "05b44b77-3a44-4871-8518-464c398cb5dd",
    "trial_name": "lcbpro-2007b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2007b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2007B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nAfter receiving yet another integer array $a_1, a_2, \\ldots, a_n$ at her birthday party, Index decides to perform some operations on it.\n\nFormally, there are $m$ operations that she is going to perform in order. Each of them belongs to one of the two types:\n\n- $\\texttt{+ l r}$. Given two integers $l$ and $r$, for all $1 \\leq i \\leq n$ such that $l \\leq a_i \\leq r$, set $a_i := a_i + 1$.\n- $\\texttt{- l r}$. Given two integers $l$ and $r$, for all $1 \\leq i \\leq n$ such that $l \\leq a_i \\leq r$, set $a_i := a_i - 1$.\n\nFor example, if the initial array $a = [7, 1, 3, 4, 3]$, after performing the operation $\\texttt{+} \\space 2 \\space 4$, the array $a = [7, 1, 4, 5, 4]$. Then, after performing the operation $\\texttt{-} \\space 1 \\space 10$, the array $a = [6, 0, 3, 4, 3]$.\n\nIndex is curious about the maximum value in the array $a$. Please help her find it after each of the $m$ operations.\n\n### Input\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 2 \\cdot 10^4$) -- the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $m$ ($1 \\leq n \\leq 10^5$, $1 \\leq m \\leq 10^5$) -- the length of the array and the number of operations.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^9$) -- the initial array $a$.\n\nThen $m$ lines follow, each line corresponds to the operation, in the following format: $\\texttt{c l r}$ ($c \\in \\{\\texttt +, \\texttt -\\}$, $l$ and $r$ are integers, $1 \\leq l \\leq r \\leq 10^9$) -- the description of the operation.\n\nNote that the elements $a_i$ may not satisfy $1\\le a_i\\le 10^9$ after some operations, as it is shown in the example.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$, and the sum of $m$ over all test cases does not exceed $10^5$.\n\n### Output\n\nFor each test case, output one single line containing $m$ integers, with the $i$-th of them describing the maximum value of the array after the $i$-th operation.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n5 5\n\n1 2 3 2 1\n\n\\+ 1 3\n\n\\- 2 3\n\n\\+ 1 2\n\n\\+ 2 4\n\n\\- 6 8\n\n5 5\n\n1 3 3 4 5\n\n\\+ 1 4\n\n\\+ 2 3\n\n\\- 4 5\n\n\\- 3 3\n\n\\- 2 6\n\n5 5\n\n1 1 1 1 1\n\n\\+ 2 3\n\n\\- 4 5\n\n\\+ 1 6\n\n\\- 2 5\n\n\\+ 1 8\n\n1 1\n\n1\n\n\\- 1 1\n\n1 1\n\n1000000000\n\n\\+ 1000000000 1000000000\n\n```\n\n#### Output #1\n\n```\n4 4 4 5 5\n5 5 4 4 3\n1 1 2 1 2\n0\n1000000001\n```\n\n### Note\n\nIn the first test case, the process of the operations is listed below:\n\n- After the first operation, the array becomes equal $[2,3,4,3,2]$. The maximum value is $4$.\n- After the second operation, the array becomes equal $[1,2,4,2,1]$. The maximum value is $4$.\n- After the third operation, the array becomes equal $[2,3,4,3,2]$. The maximum value is $4$.\n- After the fourth operation, the array becomes equal $[3,4,5,4,3]$. The maximum value is $5$.\n- After the fifth operation, the array becomes equal $[3,4,5,4,3]$. The maximum value is $5$.\n\nIn the second test case, the process of the operations is listed below:\n\n- After the first operation, the array becomes equal $[2,4,4,5,5]$. The maximum value is $5$.\n- After the second operation, the array becomes equal $[3,4,4,5,5]$. The maximum value is $5$.\n- After the third operation, the array becomes equal $[3,3,3,4,4]$. The maximum value is $4$.\n- After the fourth operation, the array becomes equal $[2,2,2,4,4]$. The maximum value is $4$.\n- After the fifth operation, the array becomes equal $[1,1,1,3,3]$. The maximum value is $3$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2007b/lcbpro-2007b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:33:08.981747+00:00",
    "trial_ended_at": "2025-09-05T23:33:58.429451+00:00",
    "agent_started_at": "2025-09-05T23:33:21.916409+00:00",
    "agent_ended_at": "2025-09-05T23:33:22.766951+00:00",
    "test_started_at": "2025-09-05T23:33:26.190358+00:00",
    "test_ended_at": "2025-09-05T23:33:42.794356+00:00"
}