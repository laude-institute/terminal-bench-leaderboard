{
    "id": "37ce7c08-f28c-40ce-a78b-f5528c1e0394",
    "trial_name": "lcbpro-2004d.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2004d",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2004D)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nThere are $n$ cities located on a straight line. The cities are numbered from $1$ to $n$.\n\nPortals are used to move between cities. There are $4$ colors of portals: blue, green, red, and yellow. Each city has portals of two different colors. You can move from city $i$ to city $j$ if they have portals of the same color (for example, you can move between a \"blue-red\" city and a \"blue-green\" city). This movement costs $|i-j|$ coins.\n\nYour task is to answer $q$ independent queries: calculate the minimum cost to move from city $x$ to city $y$.\n\n### Input\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$) -- the number of test cases.\n\nThe first line of each test case contains two integers $n$ and $q$ ($1 \\le n, q \\le 2 \\cdot 10^5$) -- the number of cities and the number of queries, respectively.\n\nThe second line contains $n$ strings of the following types: BG, BR, BY, GR, GY, or RY; the $i$-th of them describes the portals located in the $i$-th city; the symbol B indicates that there is a blue portal in the city, G -- green, R -- red, and Y -- yellow.\n\nThe $j$-th of the next $q$ lines contains two integers $x_j$ and $y_j$ ($1 \\le x_j, y_j \\le n$) -- the description of the $j$-th query.\n\nAdditional constraints on the input:\n\n- the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$;\n- the sum of $q$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each query, print a single integer -- the minimum cost to move from city $x$ to city $y$ (or $-1$ if it is impossible).\n\n### Example\n\n#### Input #1\n\n```\n\n2\n\n4 5\n\nBR BR GY GR\n\n1 2\n\n3 1\n\n4 4\n\n1 4\n\n4 2\n\n2 1\n\nBG RY\n\n1 2\n\n```\n\n#### Output #1\n\n```\n1\n4\n0\n3\n2\n-1\n```",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2004d/lcbpro-2004d.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:52:25.617658+00:00",
    "trial_ended_at": "2025-09-05T23:53:02.558384+00:00",
    "agent_started_at": "2025-09-05T23:52:34.329509+00:00",
    "agent_ended_at": "2025-09-05T23:52:34.935027+00:00",
    "test_started_at": "2025-09-05T23:52:39.164971+00:00",
    "test_ended_at": "2025-09-05T23:52:43.786978+00:00"
}