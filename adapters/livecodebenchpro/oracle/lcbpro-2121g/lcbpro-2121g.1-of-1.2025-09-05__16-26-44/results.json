{
    "id": "2a4d1f0e-a5cc-42e8-803f-23248ed60cd6",
    "trial_name": "lcbpro-2121g.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2121g",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2121G)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given a binary string $s_1s_2 \\ldots s_n$ of length $n$. A string $s$ is called binary if it consists only of zeros and ones.\n\nFor a string $p$, we define the function $f(p)$ as the maximum number of occurrences of any character in the string $p$. For example, $f(00110) = 3$, $f(01) = 1$.\n\nYou need to find the sum $f(s_ls_{l+1} \\ldots s_r)$ for all pairs $1 \\leq l \\leq r \\leq n$.\n\n### Input\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\le t \\le 10^4$) -- the number of test cases. Then follows their descriptions.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) -- the length of the binary string.\n\nThe second line of each test case contains a string of length $n$, consisting of $0$s and $1$s -- the binary string $s$.\n\nIt is guaranteed that the sum of $n$ across all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output the sum $f(s_ls_{l+1} \\ldots s_r)$ for all pairs $1 \\leq l \\leq r \\leq n$.\n\n### Example\n\n#### Input #1\n\n```\n\n6\n\n1\n\n0\n\n2\n\n01\n\n4\n\n0110\n\n6\n\n110001\n\n8\n\n10011100\n\n11\n\n01011011100\n\n```\n\n#### Output #1\n\n```\n1\n3\n14\n40\n78\n190\n```\n\n### Note\n\nIn the first test case, the string $s$ has one substring, and the value $f(0) = 1$.\n\nIn the second test case, all substrings of the string $s$ are $0$, $01$, $1$. And the answer is $1 + 1 + 1 = 3$, respectively.\n\nIn the third test case, all substrings of the string $s$ are $0$, $01$, $011$, $0110$, $1$, $11$, $110$, $1$, $10$, $0$. And the answer is $1 + 1 + 2 + 2 + 1 + 2 + 2 + 1 + 1 + 1 = 14$, respectively.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2121g/lcbpro-2121g.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:57:22.315658+00:00",
    "trial_ended_at": "2025-09-05T23:57:56.850400+00:00",
    "agent_started_at": "2025-09-05T23:57:31.821386+00:00",
    "agent_ended_at": "2025-09-05T23:57:32.538082+00:00",
    "test_started_at": "2025-09-05T23:57:35.577065+00:00",
    "test_ended_at": "2025-09-05T23:57:39.741267+00:00"
}