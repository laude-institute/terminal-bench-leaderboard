{
    "id": "fb838b00-bbd7-40f6-b90a-b41c7fc978f0",
    "trial_name": "lcbpro-2116b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2116b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2116B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nFlower gives Gellyfish two permutations$^{\\text{∗}}$ of $[0, 1, \\ldots, n-1]$: $p_0, p_1, \\ldots, p_{n-1}$ and $q_0, q_1, \\ldots, q_{n-1}$.\n\nNow Gellyfish wants to calculate an array $r_0,r_1,\\ldots,r_{n-1}$ through the following method:\n\n- For all $i$ ($0 \\leq i \\leq n-1$), $r_i = \\max\\limits_{j=0}^{i} \\left(2^{p_j} + 2^{q_{i-j}} \\right)$\n\nBut since Gellyfish is very lazy, you have to help her figure out the elements of $r$.\n\nSince the elements of $r$ are very large, you are only required to output the elements of $r$ modulo $998\\,244\\,353$.\n\n$^{\\text{∗}}$An array $b$ is a permutation of an array $a$ if $b$ consists of the elements of $a$ in arbitrary order. For example, $[4,2,3,4]$ is a permutation of $[3,2,4,4]$ while $[1,2,2]$ is not a permutation of $[1,2,3]$.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \\leq n \\leq 10^5$).\n\nThe second line of each test case contains $n$ integers $p_0, p_1, \\ldots,p_{n-1}$ ($0 \\leq p_i < n$).\n\nThe third line of each test case contains $n$ integers $q_0, q_1, \\ldots,q_{n-1}$ ($0 \\leq q_i < n$).\n\nIt is guaranteed that both $p$ and $q$ are permutations of $[0, 1, \\ldots, n-1]$.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n### Output\n\nFor each test case, output $n$ integers $r_0, r_1, \\ldots, r_{n-1}$ in a single line, modulo $998\\,244\\,353$.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n3\n\n0 2 1\n\n1 2 0\n\n5\n\n0 1 2 3 4\n\n4 3 2 1 0\n\n10\n\n5 8 9 3 4 0 2 7 1 6\n\n9 5 1 4 0 3 2 8 7 6\n\n```\n\n#### Output #1\n\n```\n3 6 8\n17 18 20 24 32\n544 768 1024 544 528 528 516 640 516 768\n```\n\n### Note\n\nIn the first test case:\n\n- $r_0 = 2^{p_0} + 2^{q_0} = 1+2=3$\n- $r_1 = \\max(2^{p_0} + 2^{q_1}, 2^{p_1} + 2^{q_0}) = \\max(1+4, 4+2) = 6$\n- $r_2 = \\max(2^{p_0} + 2^{q_2}, 2^{p_1}+2^{q_1}, 2^{p_2}+2^{q_0}) = (1+1, 4+4, 2+2) = 8$",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2116b/lcbpro-2116b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:30:09.229180+00:00",
    "trial_ended_at": "2025-09-05T23:30:46.045525+00:00",
    "agent_started_at": "2025-09-05T23:30:18.025751+00:00",
    "agent_ended_at": "2025-09-05T23:30:18.751682+00:00",
    "test_started_at": "2025-09-05T23:30:20.976640+00:00",
    "test_ended_at": "2025-09-05T23:30:31.331649+00:00"
}