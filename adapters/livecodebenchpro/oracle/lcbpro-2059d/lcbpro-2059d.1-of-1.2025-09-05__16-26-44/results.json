{
    "id": "63df43ad-ddd7-4d04-9c6a-fb3bd37a7ebd",
    "trial_name": "lcbpro-2059d.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2059d",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2059D)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given two connected undirected graphs with the same number of vertices. In both graphs, there is a token located at some vertex. In the first graph, the token is initially at vertex $s_1$, and in the second graph, the token is initially at vertex $s_2$. The following operation is repeated an infinite number of times:\n\n- Let the token currently be at vertex $v_1$ in the first graph and at vertex $v_2$ in the second graph.\n- A vertex $u_1$, adjacent to $v_1$, is chosen in the first graph.\n- A vertex $u_2$, adjacent to $v_2$, is chosen in the second graph.\n- The tokens are moved to the chosen vertices: in the first graph, the token moves from $v_1$ to $u_1$, and in the second graph, from $v_2$ to $u_2$.\n- The cost of such an operation is equal to $|u_1 - u_2|$.\n\nDetermine the minimum possible total cost of all operations or report that this value will be infinitely large.\n\n### Input\n\nEach test consists of multiple test cases. The first line contains one integer $t$ ($1 \\le t \\le 500$) -- the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains three integers $n$, $s_1$, and $s_2$ ($2 \\le n \\le 1000$, $1 \\le s_1, s_2 \\le n$) -- the number of vertices in each graph, the number of the vertex in the first graph where the token is initially located, and the number of the vertex in the second graph where the token is initially located.\n\nThe second line of each test case contains one integer $m_1$ ($1 \\le m_1 \\le 1000$) -- the number of edges in the first graph.\n\nThe $i$-th of the following $m_1$ lines contains two integers $a_i$ and $b_i$ ($1 \\le a_i, b_i \\le n$, $a_i \\ne b_i$) -- the numbers of the endpoints of the $i$-th edge in the first graph.\n\nThe next line of each test case contains one integer $m_2$ ($1 \\le m_2 \\le 1000$) -- the number of edges in the second graph.\n\nThe $j$-th of the following $m_2$ lines contains two integers $c_j$ and $d_j$ ($1 \\le c_j, d_j \\le n$, $c_j \\ne d_j$) -- the numbers of the endpoints of the $j$-th edge in the second graph.\n\nIt is guaranteed that the sum of $n$, the sum of $m_1$, and the sum of $m_2$ over all test cases do not exceed $1000$.\n\nIt is guaranteed that both graphs are connected.\n\n### Output\n\nFor each test case, output one integer -- the minimum total cost of all operations or $-1$, if this value will be infinitely large.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n4 1 1\n\n4\n\n1 2\n\n2 3\n\n3 4\n\n4 1\n\n4\n\n1 2\n\n2 3\n\n3 4\n\n4 1\n\n4 1 2\n\n4\n\n1 2\n\n2 3\n\n3 4\n\n4 1\n\n4\n\n1 2\n\n2 3\n\n3 4\n\n4 1\n\n7 7 2\n\n7\n\n1 6\n\n2 1\n\n3 2\n\n3 4\n\n5 1\n\n7 3\n\n7 5\n\n6\n\n5 1\n\n5 6\n\n5 7\n\n6 3\n\n7 2\n\n7 4\n\n```\n\n#### Output #1\n\n```\n0\n-1\n7\n```\n\n### Note\n\nIn the first test case, an infinite sequence of transitions can be constructed to the vertices $2, 3, 4, 1, 2, 3, 4, 1, \\ldots$, along which the token can move in both the first and the second graphs.\n\nIn the second test case, it can be proven that the cost of any operation will be greater than $0$; therefore, the total cost of all operations will be infinitely large.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2059d/lcbpro-2059d.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:34:48.886001+00:00",
    "trial_ended_at": "2025-09-05T23:35:25.177895+00:00",
    "agent_started_at": "2025-09-05T23:35:01.310465+00:00",
    "agent_ended_at": "2025-09-05T23:35:02.187570+00:00",
    "test_started_at": "2025-09-05T23:35:05.689523+00:00",
    "test_ended_at": "2025-09-05T23:35:11.171098+00:00"
}