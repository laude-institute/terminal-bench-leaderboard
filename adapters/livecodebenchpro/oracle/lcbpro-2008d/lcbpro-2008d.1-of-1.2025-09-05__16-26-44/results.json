{
    "id": "ef2f3603-1d55-4c5c-9188-d8eda1520c6f",
    "trial_name": "lcbpro-2008d.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2008d",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2008D)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nFor a certain permutation $p$$^{\\\\text{∗}}$ Sakurako calls an integer $j$ reachable from an integer $i$ if it is possible to make $i$ equal to $j$ by assigning $i=p\\_i$ a certain number of times.\n\nIf $p=[3,5,6,1,2,4]$, then, for example, $4$ is reachable from $1$, because: $i=1$ $\\rightarrow$ $i=p_1=3$ $\\rightarrow$ $i=p_3=6$ $\\rightarrow$ $i=p_6=4$. Now $i=4$, so $4$ is reachable from $1$.\n\nEach number in the permutation is colored either black or white.\n\nSakurako defines the function $F(i)$ as the number of black integers that are reachable from $i$.\n\nSakurako is interested in $F(i)$ for each $1\\le i\\le n$, but calculating all values becomes very difficult, so she asks you, as her good friend, to compute this.\n\n$^{\\text{∗}}$A permutation of length $n$ is an array consisting of $n$ distinct integers from $1$ to $n$ in arbitrary order. For example, $[2,3,1,5,4]$ is a permutation, but $[1,2,2]$ is not a permutation (the number $2$ appears twice in the array), and $[1,3,4]$ is also not a permutation ($n=3$, but the array contains $4$).\n\n### Input\n\nThe first line contains a single integer $t$ ($1\\le t\\le 10^4$)  -- the number of test cases.\n\nThe first line of each test case contains a single integer $n$ ($1\\le n\\le 2\\cdot 10^5$)  -- the number of elements in the array.\n\nThe second line of each test case contains $n$ integers $p_1, p_2, \\dots, p_n$ ($1\\le p_i\\le n$)  -- the elements of the permutation.\n\nThe third line of each test case contains a string $s$ of length $n$, consisting of '0' and '1'. If $s_i=0$, then the number $p_i$ is colored black; if $s_i=1$, then the number $p_i$ is colored white.\n\nIt is guaranteed that the sum of $n$ across all test cases does not exceed $2\\cdot 10^5$.\n\n### Output\n\nFor each test case, output $n$ integers $F(1), F(2), \\dots, F(n)$.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n1\n\n1\n\n0\n\n5\n\n1 2 4 5 3\n\n10101\n\n5\n\n5 4 1 3 2\n\n10011\n\n6\n\n3 5 6 1 2 4\n\n010000\n\n6\n\n1 2 3 4 5 6\n\n100110\n\n```\n\n#### Output #1\n\n```\n1\n0 1 1 1 1\n2 2 2 2 2\n4 1 4 4 1 4\n0 1 1 0 0 1\n```",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2008d/lcbpro-2008d.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:57:17.675224+00:00",
    "trial_ended_at": "2025-09-05T23:57:53.440494+00:00",
    "agent_started_at": "2025-09-05T23:57:30.157605+00:00",
    "agent_ended_at": "2025-09-05T23:57:30.860724+00:00",
    "test_started_at": "2025-09-05T23:57:33.087996+00:00",
    "test_ended_at": "2025-09-05T23:57:36.982386+00:00"
}