{
    "id": "bc4274e3-f18b-475f-86a5-070c6e211f1c",
    "trial_name": "lcbpro-2120a.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2120a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2120A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nAryan is an ardent lover of squares but a hater of rectangles (Yes, he knows all squares are rectangles). But Harshith likes to mess with Aryan. Harshith gives Aryan three rectangles of sizes $l_1\\times b_1$, $l_2\\times b_2$, and $l_3\\times b_3$ such that $l_3\\leq l_2\\leq l_1$ and $b_3\\leq b_2\\leq b_1$. Aryan, in order to defeat Harshith, decides to arrange these three rectangles to form a square such that no two rectangles overlap and the rectangles are aligned along edges. Rotating rectangles is not allowed. Help Aryan determine if he can defeat Harshith.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 100$). The description of the test cases follows.\n\nEach test case contains a single line with $6$ space-separated integers $l_1, b_1, l_2, b_2, l_3$, and $b_3$ ($1 \\leq l_3\\le l_2\\le l_1\\le 100$, $1\\le b_3\\le b_2\\le b_1 \\leq 100$) -- the dimensions of the three rectangles.\n\n### Output\n\nFor each testcase, print \"YES\" if the rectangles can be arranged to form a square; otherwise, \"NO\".\n\nYou can output the answer in any case (upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive responses.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n100 100 10 10 1 1\n\n5 3 5 1 5 1\n\n2 3 1 2 1 1\n\n8 5 3 5 3 3\n\n3 3 3 3 2 1\n\n```\n\n#### Output #1\n\n```\nNO\nYES\nYES\nNO\nNO\n```\n\n### Note\n\nIn the second test case, the three rectangles $5\\times 3$, $5\\times 1$, and $5\\times 1$ can be arranged as follows to form a square.\n\n![](https://espresso.codeforces.com/fbd9b47dd2b494552b66f9254bd5f01de239c196.png)\n\nIn the fourth test case, it can be proven that the rectangles can't be arranged to form a square with the given constraints.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2120a/lcbpro-2120a.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:38:11.117507+00:00",
    "trial_ended_at": "2025-09-05T23:38:40.019470+00:00",
    "agent_started_at": "2025-09-05T23:38:18.065078+00:00",
    "agent_ended_at": "2025-09-05T23:38:18.828745+00:00",
    "test_started_at": "2025-09-05T23:38:21.373474+00:00",
    "test_ended_at": "2025-09-05T23:38:24.502117+00:00"
}