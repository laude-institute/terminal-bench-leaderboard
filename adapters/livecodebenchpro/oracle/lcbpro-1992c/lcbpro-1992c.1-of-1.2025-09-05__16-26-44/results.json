{
    "id": "1f6f9339-5547-40a4-928f-8d783fb0a50c",
    "trial_name": "lcbpro-1992c.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-1992c",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1992C)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nGorilla and Noobish\\_Monk found three numbers $n$, $m$, and $k$ ($m < k$). They decided to construct a permutation$^{\\dagger}$ of length $n$.\n\nFor the permutation, Noobish\\_Monk came up with the following function: $g(i)$ is the sum of all the numbers in the permutation on a prefix of length $i$ that are not greater than $m$. Similarly, Gorilla came up with the function $f$, where $f(i)$ is the sum of all the numbers in the permutation on a prefix of length $i$ that are not less than $k$. A prefix of length $i$ is a subarray consisting of the first $i$ elements of the original array.\n\nFor example, if $n = 5$, $m = 2$, $k = 5$, and the permutation is $[5, 3, 4, 1, 2]$, then:\n\n- $f(1) = 5$, because $5 \\ge 5$; $g(1) = 0$, because $5 > 2$;\n- $f(2) = 5$, because $3 < 5$; $g(2) = 0$, because $3 > 2$;\n- $f(3) = 5$, because $4 < 5$; $g(3) = 0$, because $4 > 2$;\n- $f(4) = 5$, because $1 < 5$; $g(4) = 1$, because $1 \\le 2$;\n- $f(5) = 5$, because $2 < 5$; $g(5) = 1 + 2 = 3$, because $2 \\le 2$.\n\nHelp them find a permutation for which the value of $\\left(\\sum_{i=1}^n f(i) - \\sum_{i=1}^n g(i)\\right)$ is maximized.\n\n$^{\\dagger}$A permutation of length $n$ is an array consisting of $n$ distinct integers from $1$ to $n$ in any order. For example, $[2,3,1,5,4]$ is a permutation, but $[1,2,2]$ is not a permutation (as $2$ appears twice in the array) and $[1,3,4]$ is also not a permutation (as $n=3$, but $4$ appears in the array).\n\n### Input\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$)  -- the number of test cases.\n\nThe only line of each case contains three integers $n$, $m$, $k$ ($2\\le n \\le 10^5$; $1 \\le m < k \\le n$) -- the size of the permutation to be constructed and two integers.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output the permutation  -- a set of numbers that satisfies the conditions of the problem. If there are multiple solutions, output any of them.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n5 2 5\n\n3 1 3\n\n10 3 8\n\n```\n\n#### Output #1\n\n```\n5 3 4 1 2\n3 2 1\n10 9 8 4 7 5 6 1 2 3```\n\n### Note\n\nIn the first example, $\\left(\\sum_{i=1}^n f(i) - \\sum_{i=1}^n g(i)\\right) = 5 \\cdot 5 - (0 \\cdot 3 + 1 + 3) = 25 - 4 = 21$",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-1992c/lcbpro-1992c.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:51:10.414630+00:00",
    "trial_ended_at": "2025-09-05T23:51:44.212861+00:00",
    "agent_started_at": "2025-09-05T23:51:21.291625+00:00",
    "agent_ended_at": "2025-09-05T23:51:22.117442+00:00",
    "test_started_at": "2025-09-05T23:51:24.762152+00:00",
    "test_ended_at": "2025-09-05T23:51:28.538206+00:00"
}