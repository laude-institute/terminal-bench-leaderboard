{
    "id": "dba4156c-5cb0-443b-9806-5866cd4a75cb",
    "trial_name": "lcbpro-2074b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2074b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2074B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nThe pink soldiers have given you a sequence $a$ consisting of $n$ positive integers.\n\nYou must repeatedly perform the following operation until there is only $1$ element left.\n\n- Choose two distinct indices $i$ and $j$.\n- Then, choose a positive integer value $x$ such that there exists a non-degenerate triangle$^{\\text{∗}}$ with side lengths $a_i$, $a_j$, and $x$.\n- Finally, remove two elements $a_i$ and $a_j$, and append $x$ to the end of $a$.\n\nPlease find the maximum possible value of the only last element in the sequence $a$.\n\n$^{\\text{∗}}$A triangle with side lengths $a$, $b$, $c$ is non-degenerate when $a+b > c$, $a+c > b$, $b+c > a$.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$).\n\nThe second line of each test case contains $n$ integers $a_1,a_2,\\ldots,a_n$ ($1 \\le a_i \\le 1000$) -- the elements of the sequence $a$.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output the maximum possible value of the only last element on a separate line.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n1\n\n10\n\n3\n\n998 244 353\n\n5\n\n1 2 3 4 5\n\n9\n\n9 9 8 2 4 4 3 5 3\n\n```\n\n#### Output #1\n\n```\n10\n1593\n11\n39\n```\n\n### Note\n\nOn the first test case, there is already only one element. The value of the only last element is $10$.\n\nOn the second test case, $a$ is initially $[998,244,353]$. The following series of operations is valid:\n\n1. Erase $a_2=244$ and $a_3=353$, and append $596$ to the end of $a$. $a$ is now $[998,596]$.\n2. Erase $a_1=998$ and $a_2=596$, and append $1593$ to the end of $a$. $a$ is now $[1593]$.\n\nIt can be shown that the only last element cannot be greater than $1593$. Therefore, the answer is $1593$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2074b/lcbpro-2074b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:33:55.071998+00:00",
    "trial_ended_at": "2025-09-05T23:34:34.397171+00:00",
    "agent_started_at": "2025-09-05T23:34:11.136438+00:00",
    "agent_ended_at": "2025-09-05T23:34:11.609911+00:00",
    "test_started_at": "2025-09-05T23:34:15.050890+00:00",
    "test_ended_at": "2025-09-05T23:34:23.001783+00:00"
}