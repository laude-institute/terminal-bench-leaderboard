{
    "id": "510d9a63-623d-44d8-818f-ab5c7b71621f",
    "trial_name": "lcbpro-2078b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2078b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2078B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\n[Axium Crisis - ak+q](https://youtu.be/1HyuI8Bvnsg?si=6amlU5OPKnJiydZs)\n\nThere are $n$ cells in a labyrinth, and cell $i$ ($1 \\leq i \\leq n$) is $n - i$ kilometers away from the exit. In particular, cell $n$ is the exit. Note also that each cell is connected to the exit but is not accessible from any other cell in any way.\n\nIn each cell, there is initially exactly one person stuck in it. You want to help everyone get as close to the exit as possible by installing a teleporter in each cell $i$ ($1 \\leq i \\leq n$), which translocates the person in that cell to another cell $a_i$.\n\nThe labyrinth owner caught you in the act. Amused, she let you continue, but under some conditions:\n\n- Everyone must use the teleporter exactly $k$ times.\n- No teleporter in any cell can lead to the same cell it is in. Formally, $i \\neq a_i$ for all $1 \\leq i \\leq n$.\n\nYou must find a teleporter configuration that minimizes the sum of distances of all individuals from the exit after using the teleporter exactly $k$ times while still satisfying the restrictions of the labyrinth owner.\n\nIf there are many possible configurations, you can output any of them.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first and only line of each test case contains two integers $n$ and $k$ ($2 \\leq n \\leq 2 \\cdot 10^5$, $1 \\leq k \\leq 10^9$) -- the number of cells in the labyrinth and the value $k$.\n\nIt is guaranteed that the total sum of $n$ across all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output $n$ integers -- the destinations of the teleporters $a_1, a_2, \\ldots, a_n$ in order, satisfying the given conditions ($1 \\leq a_i \\leq n$, $a_i \\neq i$).\n\n### Example\n\n#### Input #1\n\n```\n\n2\n\n2 1\n\n3 2\n\n```\n\n#### Output #1\n\n```\n2 1\n2 3 2\n```\n\n### Note\n\nIn the first test case, the position of each person is as follows.\n\n- Before teleporting: $[1, 2]$.\n- First teleportation: $[2, 1]$.\n\nThe distance sum is $(2-2) + (2-1) = 1$, which is the minimum possible.\n\nIn the second test case, the position of each person is as follows.\n\n- Before teleporting: $[1, 2, 3]$.\n- First teleportation: $[2, 3, 2]$.\n- Second teleportation: $[3, 2, 3]$.\n\nThe distance sum is $(3-3) + (3-2) + (3-3) = 1$, which is the minimum possible.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2078b/lcbpro-2078b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:39:02.266028+00:00",
    "trial_ended_at": "2025-09-05T23:39:47.216484+00:00",
    "agent_started_at": "2025-09-05T23:39:15.990262+00:00",
    "agent_ended_at": "2025-09-05T23:39:16.881540+00:00",
    "test_started_at": "2025-09-05T23:39:20.156487+00:00",
    "test_ended_at": "2025-09-05T23:39:30.270308+00:00"
}