{
    "id": "49a268ee-3e40-4e8a-babe-ab5a104ba7f3",
    "trial_name": "lcbpro-2109f.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2109f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2109F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nMouf, the clever master of Darkness, and Fouad, the brave champion of Light, have entered the Grid Realm once more. This time, they have found the exit, but it is guarded by fierce monsters! They must fight with their bare hands instead of summoning monsters!\n\nMouf and Fouad are standing on an $n \\times n$ grid. Each cell $(i, j)$ has a value $a_{i,j}$ and a color. The color of a cell is white if $c_{i,j} = 0$ and black if $c_{i,j} = 1$.\n\nMouf starts at the top-left corner $(1, 1)$, and Fouad starts at the bottom-left corner $(n, 1)$. Both are trying to reach the exit cell at $(r, n)$.\n\nA path is defined as a sequence of adjacent cells (sharing a horizontal or vertical edge). The cost of a path is the maximum value of $a_{i, j}$ among all cells included in the path (including the first and last cells).\n\nLet:\n\n- $\\mathrm{dis}_M$ denote the minimum possible cost of a valid path from Mouf's starting position $(1, 1)$ to the exit $(r, n)$;\n- $\\mathrm{dis}_F$ denote the minimum possible cost of a valid path from Fouad's starting position $(n, 1)$ to the exit $(r, n)$.\n\nBefore moving, Mouf can perform up to $k$ operations. In each operation, he may select any black cell and increment its value by $1$ (possibly choosing the same cell multiple times).\n\nMouf wants to maximize $\\mathrm{dis}_F$ while ensuring that his own cost $\\mathrm{dis}_M$ remains unchanged (as if he performed no operations). If Mouf acts optimally, what are the values of $\\mathrm{dis}_M$ and $\\mathrm{dis}_F$?\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^3$). The description of the test cases follows.\n\nThe first line of each test case contains three integers $n$, $r$, and $k$ ($2 \\le n \\le 300$, $1 \\le r \\le n$, $0 \\le k \\le 10^6$) -- the length of the grid, the row number of the exit cell, and the number of allowed operations.\n\nThe $i$-th of the next $n$ lines contains $n$ integers $a_{i,1}, a_{i,2}, \\ldots, a_{i,n}$ ($1 \\le a_{ij} \\le 10^6$) -- the values of the cells in the $i$-th row.\n\nThe $i$-th of the next $n$ lines contains a binary string $c_i$ of length $n$ -- denoting the color of the cells in the $i$-th row (cell $(i,j)$ is white if $c_{i,j}=\\mathtt{0}$ and black if $c_{i,j} = \\mathtt{1}$).\n\nIt is guaranteed that the sum of $n^2$ over all test cases does not exceed $9 \\cdot 10^4$.\n\n### Output\n\nFor each test case, output two integers -- $\\mathrm{dis}_M$ and $\\mathrm{dis}_F$ if Mouf performs the operations optimally.\n\n### Examples\n\n#### Input #1\n\n```\n\n4\n\n2 1 30\n\n2 2\n\n1 1\n\n11\n\n01\n\n3 3 5\n\n9 2 2\n\n2 3 2\n\n2 2 2\n\n111\n\n111\n\n010\n\n7 3 12\n\n3 3 3 3 5 1 1\n\n9 4 8 3 3 5 5\n\n9 4 8 7 3 3 3\n\n4 4 4 4 9 4 9\n\n4 4 4 4 9 4 9\n\n1 4 4 4 4 4 9\n\n1 1 4 4 9 9 9\n\n1111111\n\n1011111\n\n1011111\n\n1111111\n\n1111101\n\n1110001\n\n0111111\n\n5 3 1419\n\n1219 678 1672 1858 1210\n\n535 732 1316 345 296\n\n1106 3060 507 216 1943\n\n194 2124 47 87 4818\n\n1007 329 1425 284 660\n\n00010\n\n10111\n\n00101\n\n10001\n\n10100\n\n```\n\n#### Output #1\n\n```\n2 2\n9 5\n3 8\n1943 2426\n```\n\n#### Input #2\n\n```\n\n1\n\n8 2 2216\n\n429 589 675 2022 259 452 733 967\n\n1097 2880 256 1894 259 1052 345 692\n\n911 831 513 1243 200 14 854 217\n\n611 882 681 279 54 719 1469 1885\n\n504 2524 1332 17 3113 34 1281 717\n\n498 1896 1800 2231 731 364 69 1247\n\n1397 399 68 448 1337 1076 166 3786\n\n16 857 91 475 106 102 1517 1949\n\n01010100\n\n00101100\n\n00001000\n\n10100110\n\n00001000\n\n00100000\n\n01100011\n\n00001000\n\n```\n\n#### Output #2\n\n```\n733 1671\n```\n\n### Note\n\nIn the first test case:\n\n- Although Mouf can perform up to $30$ operations, he can not increase $\\mathrm{dis}_F$ beyond $2$; he is restricted to applying operations only on $(2,2)$, because performing operations on $(1,1)$ or $(1,2)$ would change $\\mathrm{dis}_M$.\n- Mouf may apply all $30$ operations on cell $(2,2)$; however, Fouad can still follow the path $(2,1) \\rightarrow (1,1) \\rightarrow (1,2)$ with a cost of $2$.\n\nIn the second test case, Mouf can apply two operations on $(2,2)$ and three operations on $(3,2)$. It can be shown that Mouf can not increase $\\mathrm{dis}_F$ beyond $5$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2109f/lcbpro-2109f.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:58:53.082669+00:00",
    "trial_ended_at": "2025-09-05T23:59:37.661436+00:00",
    "agent_started_at": "2025-09-05T23:59:06.443335+00:00",
    "agent_ended_at": "2025-09-05T23:59:07.774229+00:00",
    "test_started_at": "2025-09-05T23:59:10.866636+00:00",
    "test_ended_at": "2025-09-05T23:59:21.473483+00:00"
}