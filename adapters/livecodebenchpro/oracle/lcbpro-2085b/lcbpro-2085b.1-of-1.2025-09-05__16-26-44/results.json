{
    "id": "ccc05900-b701-4a9f-b167-6e5e463f9a74",
    "trial_name": "lcbpro-2085b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2085b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2085B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given an array $a$ consisting of $n\\ge 4$ non-negative integers.\n\nYou need to perform the following operation on $a$ until its length becomes $1$:\n\n- Select two indices $l$ and $r$ ($1\\le {\\color{red}{ l < r }} \\le |a|$), and replace the subarray $[a_l,a_{l+1},\\ldots,a_r]$ with a single integer $\\operatorname{mex}([a_l,a_{l+1},\\ldots,a_r])$, where $\\operatorname{mex}(b)$ denotes the minimum excluded (MEX)$^{\\text{∗}}$ of the integers in $b$. In other words, let $x=\\operatorname{mex}([a_l,a_{l+1},\\ldots,a_r])$, the array $a$ will become $[a_1,a_2,\\ldots,a_{l-1},x,a_{r+1},a_{r+2},\\ldots,a_{|a|}]$. Note that the length of $a$ decreases by $(r-l)$ after this operation.\n\nServal wants the final element in $a$ to be $0$. Help him!\n\nMore formally, you have to find a sequence of operations, such that after performing these operations in order, the length of $a$ becomes $1$, and the final element in $a$ is $0$.\n\nIt can be shown that at least one valid operation sequence exists under the constraints of the problem, and the length of any valid operation sequence does not exceed $n$.\n\nNote that you do not need to minimize the number of operations.\n\n$^{\\text{∗}}$The minimum excluded (MEX) of a collection of integers $b_1, b_2, \\ldots, b_k$ is defined as the smallest non-negative integer $x$ which does not occur in the collection $b$.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 1000$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($4\\le n\\le 5000$) -- the length of the array $a$.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($0\\le a_i\\le n$) -- the elements of the array $a$.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $5000$.\n\n### Output\n\nFor each test case, output a single integer $k$ ($0\\le k\\le n$) in the first line of output -- the length of the operation sequence.\n\nThen, output $k$ lines, the $i$-th line containing two integers $l_i$ and $r_i$ ($1\\le l_i<r_i\\le |a|$) -- the two indices you choose in the $i$-th operation, where $|a|$ denotes the length of the array before this operation.\n\nIf there are multiple answers, you may print any of them.\n\n### Example\n\n#### Input #1\n\n```\n\n6\n\n4\n\n1 2 3 4\n\n5\n\n0 1 0 0 1\n\n6\n\n0 0 0 0 0 0\n\n6\n\n5 4 3 2 1 0\n\n4\n\n0 0 1 1\n\n4\n\n1 0 0 0\n\n```\n\n#### Output #1\n\n```\n1\n1 4\n4\n1 2\n1 2\n1 2\n1 2\n4\n5 6\n3 4\n1 2\n1 3\n3\n4 5\n4 5\n1 4\n2\n1 2\n1 3\n2\n2 4\n1 2\n```\n\n### Note\n\nIn the first test case, since $\\operatorname{mex}([1,2,3,4])=0$, after the only operation, the array becomes $[0]$.\n\nIn the second test case, the array $a$ changes as follows:\n\n$$ [\\underline{0,1},0,0,1]\\to [\\underline{2,0},0,1]\\to [\\underline{1,0},1]\\to [\\underline{2,1}]\\to [0]. $$\n\nIn the third test case, the array $a$ changes as follows:\n\n$$ [0,0,0,0,\\underline{0,0}]\\to [0,0,\\underline{0,0},1]\\to [\\underline{0,0},1,1]\\to [\\underline{1,1,1}]\\to [0]. $$",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2085b/lcbpro-2085b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:35:09.902783+00:00",
    "trial_ended_at": "2025-09-05T23:35:46.123222+00:00",
    "agent_started_at": "2025-09-05T23:35:23.758681+00:00",
    "agent_ended_at": "2025-09-05T23:35:24.310099+00:00",
    "test_started_at": "2025-09-05T23:35:27.922232+00:00",
    "test_ended_at": "2025-09-05T23:35:31.730617+00:00"
}