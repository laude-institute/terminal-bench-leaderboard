{
    "id": "7f241e26-7b91-4351-948a-b788ae36b8f5",
    "trial_name": "lcbpro-1999d.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-1999d",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1999D)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nSlavic has a very tough exam and needs your help in order to pass it. Here is the question he is struggling with:\n\nThere exists a string $s$, which consists of lowercase English letters and possibly zero or more \"?\".\n\nSlavic is asked to change each \"?\" to a lowercase English letter such that string $t$ becomes a subsequence (not necessarily continuous) of the string $s$.\n\nOutput any such string, or say that it is impossible in case no string that respects the conditions exists.\n\n### Input\n\nThe first line contains a single integer $T$ ($1 \\leq T \\leq 10^4$) -- the number of test cases.\n\nThe first line of each test case contains a single string $s$ ($1 \\leq |s| \\leq 2 \\cdot 10^5$, and $s$ consists only of lowercase English letters and \"?\"-s)  -- the original string you have.\n\nThe second line of each test case contains a single string $t$ ($1 \\leq |t| \\leq |s|$, and $t$ consists only of lowercase English letters)  -- the string that should be a subsequence of string $s$.\n\nThe sum of $|s|$ over all test cases doesn't exceed $2 \\cdot 10^5$, where $|x|$ denotes the length of the string $x$.\n\n### Output\n\nFor each test case, if no such string exists as described in the statement, output \"NO\" (without quotes).\n\nOtherwise, output \"YES\" (without quotes). Then, output one line -- the string that respects all conditions.\n\nYou can output \"YES\" and \"NO\" in any case (for example, strings \"yEs\", \"yes\", and \"Yes\" will be recognized as a positive response).\n\nIf multiple answers are possible, you can output any of them.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n?????\n\nxbx\n\nab??e\n\nabcde\n\nayy?x\n\na\n\nab??e\n\ndac\n\npaiu\n\nmom\n\n```\n\n#### Output #1\n\n```\nYES\nxabax\nYES\nabcde\nYES\nayyyx\nNO\nNO\n```",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-1999d/lcbpro-1999d.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:47:37.105135+00:00",
    "trial_ended_at": "2025-09-05T23:48:16.912138+00:00",
    "agent_started_at": "2025-09-05T23:47:51.531458+00:00",
    "agent_ended_at": "2025-09-05T23:47:52.523028+00:00",
    "test_started_at": "2025-09-05T23:47:55.872020+00:00",
    "test_ended_at": "2025-09-05T23:48:02.733956+00:00"
}