{
    "id": "ffb7fa5f-4ae2-4dee-a909-4583c99b2fc2",
    "trial_name": "lcbpro-2033c.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2033c",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2033C)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nEven in university, students need to relax. That is why Sakurakos teacher decided to go on a field trip. It is known that all of the students will be walking in one line. The student with index $i$ has some topic of interest which is described as $a_i$. As a teacher, you want to minimise the disturbance of the line of students.\n\nThe disturbance of the line is defined as the number of neighbouring people with the same topic of interest. In other words, disturbance is the number of indices $j$ ($1 \\le j < n$) such that $a_j = a_{j + 1}$.\n\nIn order to do this, you can choose index $i$ ($1\\le i\\le n$) and swap students at positions $i$ and $n-i+1$. You can perform any number of swaps.\n\nYour task is to determine the minimal amount of disturbance that you can achieve by doing the operation described above any number of times.\n\n### Input\n\nThe first line contains one integer $t$ ($1\\le t\\le 10^4$) -- the number of test cases.\n\nEach test case is described by two lines.\n\n- The first line contains one integer $n$ ($2 \\le n \\le 10^5$) -- the length of the line of students.\n- The second line contains $n$ integers $a_i$ ($1\\le a_i\\le n$) -- the topics of interest of students in line.\n\nIt is guaranteed that the sum of $n$ across all test cases does not exceed $2\\cdot 10^5$.\n\n### Output\n\nFor each test case, output the minimal possible disturbance of the line that you can achieve.\n\n### Example\n\n#### Input #1\n\n```\n\n9\n\n5\n\n1 1 1 2 3\n\n6\n\n2 1 2 2 1 1\n\n4\n\n1 2 1 1\n\n6\n\n2 1 1 2 2 4\n\n4\n\n2 1 2 3\n\n6\n\n1 2 2 1 2 1\n\n5\n\n4 5 5 1 5\n\n7\n\n1 4 3 5 1 1 3\n\n7\n\n3 1 3 2 2 3 3\n\n```\n\n#### Output #1\n\n```\n1\n2\n1\n0\n0\n1\n1\n0\n2\n```\n\n### Note\n\nIn the first example, it is necessary to apply the operation to $i=2$, thus the array will become $[1, \\textbf{2}, 1, \\textbf{1}, 3]$, with the bold elements indicating those that have swapped places. The disturbance of this array is equal to $1$.\n\nIn the fourth example, it is sufficient to apply the operation to $i=3$, thus the array will become $[2, 1, \\textbf{2}, \\textbf{1}, 2, 4]$. The disturbance of this array is equal to $0$.\n\nIn the eighth example, it is sufficient to apply the operation to $i=3$, thus the array will become $[1, 4, \\textbf{1}, 5, \\textbf{3}, 1, 3]$. The disturbance of this array is equal to $0$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2033c/lcbpro-2033c.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:27:21.681875+00:00",
    "trial_ended_at": "2025-09-05T23:28:01.674966+00:00",
    "agent_started_at": "2025-09-05T23:27:38.448911+00:00",
    "agent_ended_at": "2025-09-05T23:27:39.309321+00:00",
    "test_started_at": "2025-09-05T23:27:41.623947+00:00",
    "test_ended_at": "2025-09-05T23:27:48.463609+00:00"
}