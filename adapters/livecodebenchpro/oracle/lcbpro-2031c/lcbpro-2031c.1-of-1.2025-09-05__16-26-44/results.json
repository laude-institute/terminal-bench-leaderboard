{
    "id": "9439051f-b160-4e59-89ae-1515097be7e8",
    "trial_name": "lcbpro-2031c.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2031c",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2031C)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nPenchick loves two things: square numbers and Hong Kong-style BBQ buns! For his birthday, Kohane wants to combine them with a gift: $n$ BBQ buns arranged from left to right. There are $10^6$ available fillings of BBQ buns, numbered from $1$ to $10^6$. To ensure that Penchick would love this gift, Kohane has a few goals:\n\n- No filling is used exactly once; that is, each filling must either not appear at all or appear at least twice.\n- For any two buns $i$ and $j$ that have the same filling, the distance between them, which is $|i-j|$, must be a perfect square$^{\\text{∗}}$.\n\nHelp Kohane find a valid way to choose the filling of the buns, or determine if it is impossible to satisfy her goals! If there are multiple solutions, print any of them.\n\n$^{\\text{∗}}$A positive integer $x$ is a perfect square if there exists a positive integer $y$ such that $x = y^2$. For example, $49$ and $1$ are perfect squares because $49 = 7^2$ and $1 = 1^2$ respectively. On the other hand, $5$ is not a perfect square as no integer squared equals $5$\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 2\\cdot 10^5$). The description of the test cases follows.\n\nThe only line of each test case contains a single integer $n$ ($1\\le n\\le 2\\cdot 10^5$) -- the number of BBQ buns.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, if no valid choice of fillings exists, output $-1$. Otherwise, output $n$ integers, where the $i$-th integer represents the filling of the $i$-th BBQ bun. If there are multiple solutions, print any of them.\n\n### Example\n\n#### Input #1\n\n```\n\n2\n\n3\n\n12\n\n```\n\n#### Output #1\n\n```\n-1\n1 2 3 6 10 2 7 6 10 1 7 3\n```\n\n### Note\n\nIn the first test case, the choice of fillings \"1 1 1\" is not allowed because buns $1$ and $3$ have the same filling, but are distance $2$ apart, which is not a perfect square. The choice of fillings \"1 1 2\" is also not allowed as filling $2$ is only used once.\n\nIn the second test case, the solution is valid because no filling is used exactly once, and any two buns with the same filling are spaced at a distance equal to a perfect square. For example, buns $1$ and $10$ both have filling $1$ and are spaced at a distance of $9=3^2$. Similarly, buns $5$ and $9$ both have filling $10$ and are spaced at a distance of $4=2^2$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2031c/lcbpro-2031c.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:37:33.226593+00:00",
    "trial_ended_at": "2025-09-05T23:38:20.008756+00:00",
    "agent_started_at": "2025-09-05T23:37:48.068371+00:00",
    "agent_ended_at": "2025-09-05T23:37:48.821232+00:00",
    "test_started_at": "2025-09-05T23:37:52.585774+00:00",
    "test_ended_at": "2025-09-05T23:38:07.398236+00:00"
}