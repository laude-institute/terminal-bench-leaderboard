{
    "id": "01b0196c-5adb-47df-af9f-b3d7814de2ad",
    "trial_name": "lcbpro-1990c.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-1990c",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1990C)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nWe define the $\\operatorname{MAD}$ (Maximum Appearing Duplicate) in an array as the largest number that appears at least twice in the array. Specifically, if there is no number that appears at least twice, the $\\operatorname{MAD}$ value is $0$.\n\nFor example, $\\operatorname{MAD}([1, 2, 1]) = 1$, $\\operatorname{MAD}([2, 2, 3, 3]) = 3$, $\\operatorname{MAD}([1, 2, 3, 4]) = 0$.\n\nYou are given an array $a$ of size $n$. Initially, a variable $sum$ is set to $0$.\n\nThe following process will be executed in a sequential loop until all numbers in $a$ become $0$:\n\n1. Set $sum := sum + \\sum_{i=1}^{n} a_i$;\n2. Let $b$ be an array of size $n$. Set $b_i :=\\ \\operatorname{MAD}([a_1, a_2, \\ldots, a_i])$ for all $1 \\le i \\le n$, and then set $a_i := b_i$ for all $1 \\le i \\le n$.\n\nFind the value of $sum$ after the process.\n\n### Input\n\nThe first line contains an integer $t$ ($1 \\leq t \\leq 2 \\cdot 10^4$) -- the number of test cases.\n\nFor each test case:\n\n- The first line contains an integer $n$ ($1 \\leq n \\leq 2 \\cdot 10^5$) -- the size of the array $a$;\n- The second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq n$) -- the elements of the array.\n\nIt is guaranteed that the sum of $n$ over all test cases will not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output the value of $sum$ in a new line.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n1\n\n1\n\n3\n\n2 2 3\n\n4\n\n2 1 1 2\n\n4\n\n4 4 4 4\n\n```\n\n#### Output #1\n\n```\n1\n13\n9\n40\n```\n\n### Note\n\nIn the first test case, $a=[1]$ initially.\n\nIn the first loop:\n\n1. Set $sum := sum + a_1 = 0+1=1$;\n2. Set $b_1 :=\\ \\operatorname{MAD}([a_1])=\\ \\operatorname{MAD}([1])=0$, and then set $a_1 := b_1$.\n\nAfter the first loop, $a=[0]$ and the process ends. The value of $sum$ after the process is $1$.\n\nIn the second test case, $a=[2,2,3]$ initially.\n\nAfter the first loop, $a=[0,2,2]$ and $sum=7$.\n\nAfter the second loop, $a=[0,0,2]$ and $sum=11$.\n\nAfter the third loop, $a=[0,0,0]$ and $sum=13$. Then the process ends.\n\nThe value of $sum$ after the process is $13$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-1990c/lcbpro-1990c.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:55:43.223545+00:00",
    "trial_ended_at": "2025-09-05T23:56:22.276678+00:00",
    "agent_started_at": "2025-09-05T23:55:56.607407+00:00",
    "agent_ended_at": "2025-09-05T23:55:57.725086+00:00",
    "test_started_at": "2025-09-05T23:56:01.585777+00:00",
    "test_ended_at": "2025-09-05T23:56:06.126332+00:00"
}