{
    "id": "6f10624e-3c87-4061-b3cb-bb1d10ce0150",
    "trial_name": "lcbpro-2034c.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2034c",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2034C)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nIn the [fourth labor of Rostam](https://www.gathertales.com/story/the-tale-of-the-haft-khan-seven-labors-of-rostam/sid-604), the legendary hero from the [Shahnameh](https://en.wikipedia.org/wiki/Shahnameh), an old witch has created a magical maze to trap him. The maze is a rectangular grid consisting of $n$ rows and $m$ columns. Each cell in the maze points in a specific direction: up, down, left, or right. The witch has enchanted Rostam so that whenever he is in a cell, he will move to the next cell in the direction indicated by that cell.\n\n![](https://espresso.codeforces.com/fe31b399bb2207f13616c91f5553e04c54d77805.webp)\n\nIf Rostam eventually exits the maze, he will be freed from the witch's enchantment and will defeat her. However, if he remains trapped within the maze forever, he will never escape.\n\nThe witch has not yet determined the directions for all the cells. She wants to assign directions to the unspecified cells in such a way that the number of starting cells from which Rostam will be trapped forever is maximized. Your task is to find the maximum number of starting cells which make Rostam trapped.\n\n### Input\n\nThe first line of the input contains an integer $t$ ($1 \\leq t \\leq 10^4$), the number of test cases.\n\nFor each test case:\n\n- The first line contains two integers $n$ and $m$ ($1 \\leq n, m \\leq 1000$), representing the number of rows and columns in the maze.\n- Each of the next $n$ lines contains a string of $m$ characters representing the directions in the maze. Each character is one of the following:\n- U (up)\n- D (down)\n- L (left)\n- R (right)\n- ? (unspecified direction)\n\nIt's guaranteed that the sum of $n \\cdot m$ over all test cases is at most $10^6$.\n\n### Output\n\nFor each test case, print a single integer, the maximum number of starting cells from which Rostam will be trapped forever after assigning directions to the unspecified cells optimally.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n3 3\n\nUUU\n\nL?R\n\nDDD\n\n2 3\n\n???\n\n???\n\n3 3\n\n?U?\n\nR?L\n\nRDL\n\n```\n\n#### Output #1\n\n```\n0\n6\n5\n```\n\n### Note\n\nIn the first test case, all of the cells will be good no matter what you do.\n\nIn the second test case, if you assign the ?s like the picture below, all of the cells will be bad:\n\n![](https://espresso.codeforces.com/c667fb00a6b0c8bcc1f533cb121685a1542afcf7.png)\n\nIn the third test case, if you assign the ?s like the picture below, you will have $5$ bad cells (red-shaded cells):\n\n![](https://espresso.codeforces.com/f2e2c3b844c4b7a8643622146bdf82e54c8ec8e3.png)",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2034c/lcbpro-2034c.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:51:14.848298+00:00",
    "trial_ended_at": "2025-09-05T23:51:51.998231+00:00",
    "agent_started_at": "2025-09-05T23:51:25.472717+00:00",
    "agent_ended_at": "2025-09-05T23:51:26.609865+00:00",
    "test_started_at": "2025-09-05T23:51:29.905415+00:00",
    "test_ended_at": "2025-09-05T23:51:33.341789+00:00"
}