{
    "id": "6b19ad63-f1eb-4ad4-8f8a-53767b2e89be",
    "trial_name": "lcbpro-2115b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2115b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2115B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nGellyfish has an array of $n$ integers $c_1, c_2, \\ldots, c_n$. In the beginning, $c = [a_1, a_2, \\ldots, a_n]$.\n\nGellyfish will make $q$ modifications to $c$.\n\nFor $i = 1,2,\\ldots,q$, Gellyfish is given three integers $x_i$, $y_i$, and $z_i$ between $1$ and $n$. Then Gellyfish will set $c_{z_i} := \\min(c_{x_i}, c_{y_i})$.\n\nAfter the $q$ modifications, $c = [b_1, b_2, \\ldots, b_n]$.\n\nNow Flower knows the value of $b$ and the value of the integers $x_i$, $y_i$, and $z_i$ for all $1 \\leq i \\leq q$, but she doesn't know the value of $a$.\n\nFlower wants to find any possible value of the array $a$ or report that no such $a$ exists.\n\nIf there are multiple possible values of the array $a$, you may output any of them.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $q$ ($1 \\leq n, q \\leq 3 \\cdot 10^5$) -- the size of the array and the number of modifications.\n\nThe second line of each test case contains $n$ integers $b_1, b_2, \\ldots, b_n$ ($1 \\leq b_i \\leq 10^9$) -- the value of the array $c$ after the $q$ modifications.\n\nThe following $q$ lines each contain three integers $x_i$, $y_i$, and $z_i$ ($1 \\leq x_i, y_i, z_i \\leq n$) -- describing the $i$-th modification.\n\nIt is guaranteed that the sum of $n$ and the sum of $q$ over all test cases does not exceed $3 \\cdot 10^5$.\n\n### Output\n\nFor each test case, if $a$ exists, output $n$ integers $a_1, a_2, \\ldots, a_n$ ($0 \\leq a_i \\leq 10^9$) in a single line. Otherwise, output \"-1\" in a single line.\n\nIf there are multiple solutions, print any of them.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n2 1\n\n1 2\n\n2 1 2\n\n3 2\n\n1 2 3\n\n2 3 2\n\n1 2 1\n\n6 4\n\n1 2 2 3 4 5\n\n5 6 6\n\n4 5 5\n\n3 4 4\n\n2 3 3\n\n```\n\n#### Output #1\n\n```\n-1\n1 2 3\n1 2 3 4 5 5\n```\n\n### Note\n\nIn the first test case, based on the given sequence of modifications, we know that $b_1 = a_1$ and $b_2 = \\min(a_1, a_2)$. Therefore, it is necessary that $b_2 \\leq b_1$. However, for the given $b$, we have $b_1<b_2$. Therefore, there is no solution.\n\nIn the second test case, we can see that the given $c$ becomes $b$ from $a$ after the given modifications, and $c$ is not changed at each modification.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2115b/lcbpro-2115b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:39:47.609548+00:00",
    "trial_ended_at": "2025-09-05T23:40:39.511247+00:00",
    "agent_started_at": "2025-09-05T23:39:57.448328+00:00",
    "agent_ended_at": "2025-09-05T23:39:58.052476+00:00",
    "test_started_at": "2025-09-05T23:40:01.805144+00:00",
    "test_ended_at": "2025-09-05T23:40:25.323058+00:00"
}