{
    "id": "b3dd93bb-c82c-422f-8bcd-6c836f1bdf70",
    "trial_name": "lcbpro-2042f.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2042f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2042F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given two integer arrays $a$ and $b$, both of size $n$.\n\nLet's define the cost of the subarray $[l, r]$ as $a_l + a_{l + 1} + \\cdots + a_{r - 1} + a_r + b_l + b_r$. If $l=r$, then the cost of the subarray is $a_l + 2 \\cdot b_l$.\n\nYou have to perform queries of three types:\n\n- \"$1$ $p$ $x$\" -- assign $a_{p} := x$;\n- \"$2$ $p$ $x$\" -- assign $b_{p} := x$;\n- \"$3$ $l$ $r$\" -- find two non-empty non-overlapping subarrays within the segment $[l, r]$ with the maximum total cost and print their total cost.\n\n### Input\n\nThe first line contains a single integer $n$ ($2 \\le n \\le 2 \\cdot 10^5$).\n\nThe second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($-10^9 \\le a_i \\le 10^9$).\n\nThe third line contains $n$ integers $b_1, b_2, \\dots, b_n$ ($-10^9 \\le b_i \\le 10^9$).\n\nThe fourth line contains a single integer $q$ ($1 \\le q \\le 2 \\cdot 10^5$).\n\nThe next $q$ lines contain the queries: one per line. Each query is of one of three types:\n\n- \"$1$ $p$ $x$\" ($1 \\le p \\le n$; $-10^9 \\le x \\le 10^9$);\n- \"$2$ $p$ $x$\" ($1 \\le p \\le n$; $-10^9 \\le x \\le 10^9$);\n- \"$3$ $l$ $r$\" ($1 \\le l < r \\le n$).\n\nIt is guaranteed that there is at least one query of the third type.\n\n### Output\n\nFor each query of the third type, print the maximum possible total cost of two non-empty non-overlapping subarrays within the segment $[l, r]$.\n\n### Examples\n\n#### Input #1\n\n```\n\n7\n\n3 -1 4 -3 2 4 0\n\n0 6 1 0 -3 -2 -1\n\n6\n\n3 1 7\n\n1 2 0\n\n3 3 6\n\n2 5 -3\n\n1 3 2\n\n3 1 5\n\n```\n\n#### Output #1\n\n```\n18\n7\n16\n```\n\n#### Input #2\n\n```\n\n10\n\n2 -1 -3 -2 0 4 5 6 2 5\n\n2 -4 -5 -1 6 2 5 -6 4 2\n\n10\n\n3 6 7\n\n1 10 -2\n\n3 5 7\n\n3 2 8\n\n2 1 -5\n\n2 7 4\n\n3 1 3\n\n3 3 8\n\n3 2 3\n\n1 4 4\n\n```\n\n#### Output #2\n\n```\n23\n28\n28\n-17\n27\n-22\n```",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2042f/lcbpro-2042f.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:33:54.394973+00:00",
    "trial_ended_at": "2025-09-05T23:34:56.441753+00:00",
    "agent_started_at": "2025-09-05T23:34:11.998634+00:00",
    "agent_ended_at": "2025-09-05T23:34:13.311257+00:00",
    "test_started_at": "2025-09-05T23:34:16.169793+00:00",
    "test_ended_at": "2025-09-05T23:34:41.822266+00:00"
}