{
    "id": "c298cdb1-7c45-4cd7-b7d2-1bc9683ab94f",
    "trial_name": "lcbpro-2029e.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2029e",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2029E)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nFor two integers $x$ and $y$ ($x,y\\ge 2$), we will say that $x$ is a generator of $y$ if and only if $x$ can be transformed to $y$ by performing the following operation some number of times (possibly zero):\n\n- Choose a divisor $d$ ($d\\ge 2$) of $x$, then increase $x$ by $d$.\n\nFor example,\n\n- $3$ is a generator of $8$ since we can perform the following operations: $3 \\xrightarrow{d = 3} 6 \\xrightarrow{d = 2} 8$;\n- $4$ is a generator of $10$ since we can perform the following operations: $4 \\xrightarrow{d = 4} 8 \\xrightarrow{d = 2} 10$;\n- $5$ is not a generator of $6$ since we cannot transform $5$ into $6$ with the operation above.\n\nNow, Kevin gives you an array $a$ consisting of $n$ pairwise distinct integers ($a_i\\ge 2$).\n\nYou have to find an integer $x\\ge 2$ such that for each $1\\le i\\le n$, $x$ is a generator of $a_i$, or determine that such an integer does not exist.\n\n### Input\n\nEach test contains multiple test cases. The first line of the input contains a single integer $t$ ($1\\le t\\le 10^4$) -- the number of test cases. The description of test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1\\le n\\le 10^5$) -- the length of the array $a$.\n\nThe second line contains $n$ integers $a_1,a_2,\\ldots,a_n$ ($2\\le a_i\\le 4\\cdot 10^5$) -- the elements in the array $a$. It is guaranteed that the elements are pairwise distinct.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n### Output\n\nFor each test case, output a single integer $x$ -- the integer you found. Print $-1$ if there does not exist a valid $x$.\n\nIf there are multiple answers, you may output any of them.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n3\n\n8 9 10\n\n4\n\n2 3 4 5\n\n2\n\n147 154\n\n5\n\n3 6 8 25 100000\n\n```\n\n#### Output #1\n\n```\n2\n-1\n7\n3\n```\n\n### Note\n\nIn the first test case, for $x=2$:\n\n- $2$ is a generator of $8$, since we can perform the following operations: $2 \\xrightarrow{d = 2} 4 \\xrightarrow{d = 4} 8$;\n- $2$ is a generator of $9$, since we can perform the following operations: $2 \\xrightarrow{d = 2} 4 \\xrightarrow{d = 2} 6 \\xrightarrow{d = 3} 9$.\n- $2$ is a generator of $10$, since we can perform the following operations: $2 \\xrightarrow{d = 2} 4 \\xrightarrow{d = 2} 6 \\xrightarrow{d = 2} 8 \\xrightarrow{d = 2} 10$.\n\nIn the second test case, it can be proven that it is impossible to find a common generator of the four integers.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2029e/lcbpro-2029e.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:28:31.308492+00:00",
    "trial_ended_at": "2025-09-05T23:29:01.962847+00:00",
    "agent_started_at": "2025-09-05T23:28:37.728067+00:00",
    "agent_ended_at": "2025-09-05T23:28:38.048817+00:00",
    "test_started_at": "2025-09-05T23:28:40.447039+00:00",
    "test_ended_at": "2025-09-05T23:28:47.859619+00:00"
}