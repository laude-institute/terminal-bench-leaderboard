{
    "id": "c25fb204-4f82-4825-8156-c4a906b4395e",
    "trial_name": "lcbpro-2004b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2004b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2004B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nThere are $100$ rooms arranged in a row and $99$ doors between them; the $i$-th door connects rooms $i$ and $i+1$. Each door can be either locked or unlocked. Initially, all doors are unlocked.\n\nWe say that room $x$ is reachable from room $y$ if all doors between them are unlocked.\n\nYou know that:\n\n- Alice is in some room from the segment $[l, r]$;\n- Bob is in some room from the segment $[L, R]$;\n- Alice and Bob are in different rooms.\n\nHowever, you don't know the exact rooms they are in.\n\nYou don't want Alice and Bob to be able to reach each other, so you are going to lock some doors to prevent that. What's the smallest number of doors you have to lock so that Alice and Bob cannot meet, regardless of their starting positions inside the given segments?\n\n### Input\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$) -- the number of test cases.\n\nThe first line of each test case contains two integers $l$ and $r$ ($1 \\le l < r \\le 100$) -- the bounds of the segment of rooms where Alice is located.\n\nThe second line of each test case contains two integers $L$ and $R$ ($1 \\le L < R \\le 100$) -- the bounds of the segment of rooms where Bob is located.\n\n### Output\n\nFor each test case, print a single integer -- the smallest number of doors you have to lock so that Alice and Bob cannot meet, regardless of their starting positions inside the given segments.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n1 2\n\n3 4\n\n2 5\n\n2 5\n\n3 7\n\n6 7\n\n4 5\n\n2 8\n\n```\n\n#### Output #1\n\n```\n1\n3\n2\n3\n```\n\n### Note\n\nIn the first test case, it is sufficient to lock the door between rooms $2$ and $3$.\n\nIn the second test case, the following doors have to be locked: $(2,3)$, $(3,4)$, $(4,5)$.\n\nIn the third test case, the following doors have to be locked: $(5, 6)$ and $(6,7)$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2004b/lcbpro-2004b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:43:16.775985+00:00",
    "trial_ended_at": "2025-09-05T23:43:51.521716+00:00",
    "agent_started_at": "2025-09-05T23:43:27.294963+00:00",
    "agent_ended_at": "2025-09-05T23:43:28.447879+00:00",
    "test_started_at": "2025-09-05T23:43:31.377440+00:00",
    "test_ended_at": "2025-09-05T23:43:37.694974+00:00"
}