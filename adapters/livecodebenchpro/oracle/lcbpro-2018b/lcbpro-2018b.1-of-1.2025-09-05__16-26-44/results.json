{
    "id": "6aff99d3-3ad2-41cd-a72e-ed8732f92fd6",
    "trial_name": "lcbpro-2018b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2018b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2018B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\n[Djjaner - Speedbreaker](https://soundcloud.com/luciano-ferrari-151560131/speedbreaker)\n\n⠀\n\nThere are $n$ cities in a row, numbered $1, 2, \\ldots, n$ left to right.\n\n- At time $1$, you conquer exactly one city, called the starting city.\n- At time $2, 3, \\ldots, n$, you can choose a city adjacent to the ones conquered so far and conquer it.\n\nYou win if, for each $i$, you conquer city $i$ at a time no later than $a_i$. A winning strategy may or may not exist, also depending on the starting city. How many starting cities allow you to win?\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) -- the number of cities.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\le a_i \\le n$) -- the deadlines for conquering the cities.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output a single integer: the number of starting cities that allow you to win.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n6\n\n6 3 3 3 5 5\n\n6\n\n5 6 4 1 4 5\n\n9\n\n8 6 4 2 1 3 5 7 9\n\n```\n\n#### Output #1\n\n```\n3\n0\n1\n```\n\n### Note\n\nIn the first test case, cities $2$, $3$, and $4$ are good starting cities.\n\nIn the second test case, there are no good starting cities.\n\nIn the third test case, the only good starting city is city $5$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2018b/lcbpro-2018b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:32:31.119238+00:00",
    "trial_ended_at": "2025-09-05T23:33:08.966024+00:00",
    "agent_started_at": "2025-09-05T23:32:38.610702+00:00",
    "agent_ended_at": "2025-09-05T23:32:40.498315+00:00",
    "test_started_at": "2025-09-05T23:32:44.128582+00:00",
    "test_ended_at": "2025-09-05T23:32:53.413542+00:00"
}