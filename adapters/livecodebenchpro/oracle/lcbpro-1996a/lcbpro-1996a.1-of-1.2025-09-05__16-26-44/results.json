{
    "id": "558e5acc-dded-4ca1-969f-21b72d30fa58",
    "trial_name": "lcbpro-1996a.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-1996a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1996A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nIt's another beautiful day on Farmer John's farm.\n\nAfter Farmer John arrived at his farm, he counted $n$ legs. It is known only chickens and cows live on the farm, and a chicken has $2$ legs while a cow has $4$.\n\nWhat is the minimum number of animals Farmer John can have on his farm assuming he counted the legs of all animals?\n\n### Input\n\nThe first line contains single integer $t$ ($1 \\leq t \\leq 10^3$)Â -- the number of test cases.\n\nEach test case contains an integer $n$ ($2 \\leq n \\leq 2 \\cdot 10^3$, $n$ is even).\n\n### Output\n\nFor each test case, output an integer, the minimum number of animals Farmer John can have on his farm.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n2\n\n6\n\n8\n\n```\n\n#### Output #1\n\n```\n1\n2\n2\n```",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-1996a/lcbpro-1996a.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:35:18.866487+00:00",
    "trial_ended_at": "2025-09-05T23:35:52.991516+00:00",
    "agent_started_at": "2025-09-05T23:35:28.758336+00:00",
    "agent_ended_at": "2025-09-05T23:35:30.335254+00:00",
    "test_started_at": "2025-09-05T23:35:33.606315+00:00",
    "test_ended_at": "2025-09-05T23:35:38.206211+00:00"
}