{
    "id": "8f3aa193-4c2c-4c7f-a4b0-8f528c59143b",
    "trial_name": "lcbpro-2055b.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2055b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2055B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nAs you'd expect, Florida is home to many bizarre magical forces, and Florida Man seeks to tame them.\n\nThere are $n$ different types of magical materials, numbered from $1$ to $n$. Initially, you have $a_i$ units of material $i$ for each $i$ from $1$ to $n$. You are allowed to perform the following operation:\n\n- Select a material $i$ (where $1\\le i\\le n$). Then, spend $1$ unit of every other material $j$ (in other words, $j\\neq i$) to gain $1$ unit of material $i$. More formally, after selecting material $i$, update array $a$ as follows: $a_i := a_i + 1$, and $a_j := a_j - 1$ for all $j$ where $j\\neq i$ and $1\\le j\\le n$. Note that all $a_j$ must remain non-negative, i.e. you cannot spend resources you do not have.\n\nYou are trying to craft an artifact using these materials. To successfully craft the artifact, you must have at least $b_i$ units of material $i$ for each $i$ from $1$ to $n$. Determine if it is possible to craft the artifact by performing the operation any number of times (including zero).\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($2\\le n\\le 2\\cdot 10^5$) -- the number of types of materials.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($0 \\le a_i\\le 10^9$) -- the amount of each material $i$ that you currently hold.\n\nThe third line of each test case contains $n$ integers $b_1, b_2, \\ldots, b_n$ ($0 \\le b_i\\le 10^9$) -- the amount of each material $i$ needed to produce the artifact.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, print a single line containing either \"YES\" or \"NO\", representing whether or not the artifact can be crafted.\n\nYou can output the answer in any case (upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive responses.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n4\n\n0 5 5 1\n\n1 4 4 0\n\n3\n\n1 1 3\n\n2 2 1\n\n2\n\n1 10\n\n3 3\n\n```\n\n#### Output #1\n\n```\nYES\nNO\nYES\n```\n\n### Note\n\nIn the first test case, perform an operation on material $1$. After doing so, we will have exactly the required resources: $1$ unit of material $1$, and $4$ units each of materials $2$ and $3$.\n\nIn the second test case, it can be shown that no matter how the operations are performed, it is impossible to craft the artifact.\n\nIn the third test case, we can perform the operation on material $1$ twice. After these operations, we will have $3$ units of material $1$ and $8$ units of material $2$, which is more than enough to craft the artifact.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2055b/lcbpro-2055b.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:27:24.138282+00:00",
    "trial_ended_at": "2025-09-05T23:28:00.104087+00:00",
    "agent_started_at": "2025-09-05T23:27:38.439274+00:00",
    "agent_ended_at": "2025-09-05T23:27:39.281950+00:00",
    "test_started_at": "2025-09-05T23:27:41.574280+00:00",
    "test_ended_at": "2025-09-05T23:27:47.344382+00:00"
}