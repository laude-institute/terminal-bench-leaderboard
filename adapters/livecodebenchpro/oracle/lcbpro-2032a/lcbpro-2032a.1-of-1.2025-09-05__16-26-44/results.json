{
    "id": "d903fd34-8478-4d91-956f-5e1fcb3997f1",
    "trial_name": "lcbpro-2032a.1-of-1.2025-09-05__16-26-44",
    "task_id": "lcbpro-2032a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2032A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nAlice has just crafted a circuit with $n$ lights and $2n$ switches. Each component (a light or a switch) has two states: on or off. The lights and switches are arranged in a way that:\n\n- Each light is connected to exactly two switches.\n- Each switch is connected to exactly one light. It's unknown which light each switch is connected to.\n- When all switches are off, all lights are also off.\n- If a switch is toggled (from on to off, or vice versa), the state of the light connected to it will also toggle.\n\nAlice brings the circuit, which shows only the states of the $2n$ switches, to her sister Iris and gives her a riddle: what is the minimum and maximum number of lights that can be turned on?\n\nKnowing her little sister's antics too well, Iris takes no more than a second to give Alice a correct answer. Can you do the same?\n\n### Input\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\le t \\le 500$) -- the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 50$) -- the number of lights in the circuit.\n\nThe second line of each test case contains $2n$ integers $a_1, a_2, \\ldots, a_{2n}$ ($0 \\le a_i \\le 1$) -- the states of the switches in the circuit. $a_i = 0$ means the $i$-th switch is off, and $a_i = 1$ means the $i$-th switch is on.\n\n### Output\n\nFor each test case, output two integers -- the minimum and maximum number of lights, respectively, that can be turned on.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n1\n\n0 0\n\n1\n\n0 1\n\n1\n\n1 1\n\n3\n\n0 0 1 0 1 0\n\n3\n\n0 1 1 1 0 0\n\n```\n\n#### Output #1\n\n```\n0 0\n1 1\n0 0\n0 2\n1 3\n```\n\n### Note\n\nIn the first test case, there is only one light in the circuit, and no switch is on, so the light is certainly off.\n\nIn the second test case, there is only one light in the circuit, but one switch connected to it is on, so the light is on.\n\nIn the third test case, there is only one light in the circuit, and both switches are on, so the light is off as it was toggled twice.\n\nIn the fourth test case, to have no lights on, the switches can be arranged in this way:\n\n- Switch $1$ and switch $4$ are connected to light $1$. Since both switches are off, light $1$ is also off.\n- Switch $2$ and switch $6$ are connected to light $2$. Since both switches are off, light $2$ is also off.\n- Switch $3$ and switch $5$ are connected to light $3$. Both switches are on, so light $3$ is toggled twice from its initial off state, and thus also stays off.\n\nAnd to have $2$ lights on, the switches can be arranged in this way:\n\n- Switch $1$ and switch $2$ are connected to light $1$. Since both switches are off, light $1$ is also off.\n- Switch $3$ and switch $4$ are connected to light $2$. Since switch $3$ is on and switch $4$ is off, light $2$ is toggled once from its initial off state, so it is on.\n- Switch $5$ and switch $6$ are connected to light $3$. Since switch $5$ is on and switch $6$ is off, light $3$ is toggled once from its initial off state, so it is on.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__16-26-44/lcbpro-2032a/lcbpro-2032a.1-of-1.2025-09-05__16-26-44/sessions/agent.cast",
    "total_input_tokens": 0,
    "total_output_tokens": 0,
    "trial_started_at": "2025-09-05T23:30:59.044927+00:00",
    "trial_ended_at": "2025-09-05T23:31:34.315249+00:00",
    "agent_started_at": "2025-09-05T23:31:11.206065+00:00",
    "agent_ended_at": "2025-09-05T23:31:11.621311+00:00",
    "test_started_at": "2025-09-05T23:31:13.916707+00:00",
    "test_ended_at": "2025-09-05T23:31:19.535739+00:00"
}