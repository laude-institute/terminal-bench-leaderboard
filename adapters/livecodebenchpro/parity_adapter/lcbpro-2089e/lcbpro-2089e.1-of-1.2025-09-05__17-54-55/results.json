{
    "id": "6b8e5a7f-6647-40d2-ae09-ccdd47c3ea6d",
    "trial_name": "lcbpro-2089e.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2089e",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2089E)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nThe world of the black cat is collapsing.\n\nIn this world, which can be represented as a rooted tree with root at node $1$, Liki and Sasami need to uncover the truth about the world.\n\nEach day, they can explore a node $u$ that has not yet collapsed. After this exploration, the black cat causes $u$ and all nodes in its subtree to collapse. Additionally, at the end of the $i$ th day, if it exists, the number $n-i+1$ node will also collapse.\n\nFor each $i$ from $1$ to $n$, determine the number of exploration schemes where Liki and Sasami explore exactly $i$ days (i.e., they perform exactly $i$ operations), with the last exploration being at node $1$. The result should be computed modulo $998\\,244\\,353$.\n\nNote: It is guaranteed that nodes $1$ to $n$ can form a \"DFS\" order of the tree, meaning there exists a depth-first search traversal where the $i$ th visited node is $i$.\n\n### Input\n\nThe first line contains an integer $t$ ($1 \\le t \\le 10$)Â -- the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains exactly one number $n$ ($3 \\le n \\le 80$).\n\nEach of the following $n - 1$ lines contains two integers $u_i$ and $v_i$, representing two vertices connected by an edge ($1 \\le u_i, v_i \\le n$). It is guaranteed that the given edges form a tree. It is also guaranteed that the vertices can form a \"DFS\" traversal order.\n\nIt is guaranteed that the sum of $n$ for all test cases does not exceed $80$\n\n### Output\n\nFor each test case, print $n$ integers, where the $i$ th integer represents the number of exploration schemes for exactly $i$ days, modulo $998\\,244\\,353$.\n\n### Example\n\n#### Input #1\n\n```\n\n2\n\n4\n\n1 2\n\n2 3\n\n2 4\n\n7\n\n4 2\n\n6 1\n\n5 1\n\n7 6\n\n2 3\n\n1 2\n\n```\n\n#### Output #1\n\n```\n1 3 3 1\n1 6 23 48 43 17 1\n```\n\n### Note\n\nFor the first test case, the following operation sequences are legal:\n\n$\\{1\\},\\{2,1\\},\\{3,1\\},\\{4,1\\},\\{3,2,1\\},\\{4,2,1\\},\\{4,3,1\\},\\{4,3,2,1\\}$.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2089e/lcbpro-2089e.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 995,
    "total_output_tokens": 1478,
    "trial_started_at": "2025-09-06T01:06:25.014448+00:00",
    "trial_ended_at": "2025-09-06T01:07:17.335724+00:00",
    "agent_started_at": "2025-09-06T01:06:37.302378+00:00",
    "agent_ended_at": "2025-09-06T01:06:54.394517+00:00",
    "test_started_at": "2025-09-06T01:06:57.193594+00:00",
    "test_ended_at": "2025-09-06T01:07:01.550452+00:00"
}