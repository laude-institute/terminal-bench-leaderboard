{
    "id": "169697be-55c2-4cb3-a71f-737cbd157e8a",
    "trial_name": "lcbpro-2104d.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2104d",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2104D)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given an integer array $a$ of size $n$.\n\nYou can perform the following operations any number of times (possibly, zero):\n\n- pay one coin and increase any element of the array by $1$ (you must have at least $1$ coin to perform this operation);\n- gain one coin and decrease any element of the array by $1$.\n\nLet's say that an array is ideal if both of the following conditions hold:\n\n- each element of the array is at least $2$;\n- for each pair of indices $i$ and $j$ ($1 \\le i, j \\le n$; $i \\ne j$) the greatest common divisor (GCD) of $a_i$ and $a_j$ is equal to $1$. If the array has less than $2$ elements, this condition is automatically satisfied.\n\nLet's say that an array is beautiful if it can be transformed into an ideal array using the aforementioned operations, provided that you initially have no coins. If the array is already ideal, then it is also beautiful.\n\nThe given array is not necessarily beautiful or ideal. You can remove any elements from it (including removing the entire array or not removing anything at all). Your task is to calculate the minimum number of elements you have to remove (possibly, zero) from the array $a$ to make it beautiful.\n\n### Input\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$) -- the number of test cases.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 4 \\cdot 10^5$).\n\nThe second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($2 \\le a_i \\le 10^9$).\n\nAdditional constraint on the input: the sum of $n$ over all test cases doesn't exceed $4 \\cdot 10^5$.\n\n### Output\n\nFor each test case, print a single integer -- the minimum number of elements you have to remove (possibly, zero) from the array $a$ to make it beautiful.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n3\n\n5 5 5\n\n4\n\n2 3 2 4\n\n1\n\n3\n\n3\n\n2 100 2\n\n5\n\n2 4 2 11 2\n\n```\n\n#### Output #1\n\n```\n0\n2\n0\n0\n1\n```\n\n### Note\n\nIn the first example, you don't need to delete any elements, because the array is already beautiful. It can be transformed into an ideal array as follows: $[5, 5, 5] \\rightarrow [4, 5, 5] \\rightarrow [4, 4, 5] \\rightarrow [4, 3, 5]$ (you end up with $3$ coins).\n\nIn the second example, you need to remove $2$ elements so that the array becomes beautiful. If you leave the elements $[2, 3]$ and delete the other elements, then the given array is already ideal (and therefore, beautiful).\n\nIn the third example, you don't need to delete any elements because the array is already ideal (and thus, beautiful).\n\nIn the fourth example, the array is beautiful. It can be transformed into an ideal array as follows: $[2, 100, 2] \\rightarrow [2, 99, 2] \\rightarrow [2, 99, 3] \\rightarrow [2, 98, 3] \\rightarrow [2, 97, 3]$ (you end up with $2$ coins).",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2104d/lcbpro-2104d.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1184,
    "total_output_tokens": 556,
    "trial_started_at": "2025-09-06T01:00:54.094528+00:00",
    "trial_ended_at": "2025-09-06T01:01:43.184354+00:00",
    "agent_started_at": "2025-09-06T01:01:07.851145+00:00",
    "agent_ended_at": "2025-09-06T01:01:17.722672+00:00",
    "test_started_at": "2025-09-06T01:01:21.258811+00:00",
    "test_ended_at": "2025-09-06T01:01:25.731758+00:00"
}