{
    "id": "5029fe59-e541-4387-b560-5ca246515b52",
    "trial_name": "lcbpro-2106b.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2106b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2106B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nGiven a permutation$^{\\\\text{∗}}$ $p$ of length $n$ that contains every integer from $0$ to $n-1$ and a strip of $n$ cells, St. Chroma will paint the $i$-th cell of the strip in the color $\\\\operatorname{MEX}(p\\_1, p\\_2, ..., p\\_i)$$^{\\\\text{†}}$.\n\nFor example, suppose $p = [1, 0, 3, 2]$. Then, St. Chroma will paint the cells of the strip in the following way: $[0, 2, 2, 4]$.\n\nYou have been given two integers $n$ and $x$. Because St. Chroma loves color $x$, construct a permutation $p$ such that the number of cells in the strip that are painted color $x$ is maximized.\n\n$^{\\text{∗}}$A permutation of length $n$ is a sequence of $n$ elements that contains every integer from $0$ to $n-1$ exactly once. For example, $[0, 3, 1, 2]$ is a permutation, but $[1, 2, 0, 1]$ isn't since $1$ appears twice, and $[1, 3, 2]$ isn't since $0$ does not appear at all.\n\n$^{\\text{†}}$The $\\operatorname{MEX}$ of a sequence is defined as the first non-negative integer that does not appear in it. For example, $\\operatorname{MEX}(1, 3, 0, 2) = 4$, and $\\operatorname{MEX}(3, 1, 2) = 0$.\n\n### Input\n\nThe first line of the input contains a single integer $t$ ($1 \\le t \\le 4000$) -- the number of test cases.\n\nThe only line of each test case contains two integers $n$ and $x$ ($1 \\le n \\le 2 \\cdot 10^5$, $0 \\le x \\le n$) -- the number of cells and the color you want to maximize.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nOutput a permutation $p$ of length $n$ such that the number of cells in the strip that are painted color $x$ is maximized. If there exist multiple such permutations, output any of them.\n\n### Example\n\n#### Input #1\n\n```\n\n7\n\n4 2\n\n4 0\n\n5 0\n\n1 1\n\n3 3\n\n1 0\n\n4 3\n\n```\n\n#### Output #1\n\n```\n1 0 3 2\n2 3 1 0\n3 2 4 1 0\n0\n0 2 1\n0\n1 2 0 3```\n\n### Note\n\nThe first example is explained in the statement. It can be shown that $2$ is the maximum amount of cells that can be painted in color $2$. Note that another correct answer would be the permutation $[0, 1, 3, 2]$.\n\nIn the second example, the permutation gives the coloring $[0, 0, 0, 4]$, so $3$ cells are painted in color $0$, which can be shown to be maximum.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2106b/lcbpro-2106b.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1159,
    "total_output_tokens": 301,
    "trial_started_at": "2025-09-06T01:22:23.870591+00:00",
    "trial_ended_at": "2025-09-06T01:23:09.509809+00:00",
    "agent_started_at": "2025-09-06T01:22:35.824899+00:00",
    "agent_ended_at": "2025-09-06T01:22:42.226278+00:00",
    "test_started_at": "2025-09-06T01:22:46.027615+00:00",
    "test_ended_at": "2025-09-06T01:22:51.577315+00:00"
}