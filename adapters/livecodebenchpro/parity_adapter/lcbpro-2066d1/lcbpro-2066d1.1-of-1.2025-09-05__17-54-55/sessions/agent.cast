{"version": 2, "width": 160, "height": 40, "timestamp": 1757122724, "env": {"SHELL": "/bin/bash", "TERM": "tmux-256color"}}
[0.022214, "o", "\u001b[?2004hroot@665a51f1b422:/app# "]
[1.200853, "i", "clear\r"]
[1.245455, "o", "clear\r\n\u001b[?2004l\r\u001b[H\u001b[J\u001b[3J\u001b[?2004hroot@665a51f1b422:/app# "]
[42.22475, "i", "echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7Cgpjb25zdCBpbnQgTU9EID0gMTAwMDAwMDAwNzsKCi8vIGRwW2ldW2pdOiBudW1iZXIgb2Ygd2F5cyBhZnRlciBpLXRoIGFpcnBsYW5lIGxhdW5jaGVkLCB3aXRoIGogZmxvb3JzIGhhdmluZyByZWFjaGVkIGMgbGF1bmNoZXMgc2VlbgovLyBCZWNhdXNlIGFsbCBhX2k9MCwgd2UgbmVlZCB0byBjb3VudCB0aGUgbnVtYmVyIG9mIHdheXMgdG8gYXNzaWduIGZsb29ycyB0byBlYWNoIGxhdW5jaAovLyBzbyB0aGF0IGZvciBlYWNoIGZsb29yLCBhdCB0aGUgZW5kLCB0aGUgdG90YWwgbGF1bmNoZXMgc2VlbiA+PSBjCgppbnQgbWFpbigpIHsKICAgIGlvczo6c3luY193aXRoX3N0ZGlvKGZhbHNlKTsKICAgIGNpbi50aWUobnVsbHB0cik7CiAgICBpbnQgdDsKICAgIGNpbiA+PiB0OwogICAgd2hpbGUgKHQtLSkgewogICAgICAgIGludCBuLCBjLCBtOwogICAgICAgIGNpbiA+PiBuID4+IGMgPj4gbTsKICAgICAgICB2ZWN0b3I8aW50PiBhKG0pOwogICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgbTsgaSsrKSBjaW4gPj4gYVtpXTsKICAgICAgICAvLyBhbGwgYVtpXSA9IDAgZ3VhcmFudGVlZAoKICAgICAgICAvLyBXZSBjYW4gbW9kZWwgdGhlIHByb2JsZW0gYXMgY291bnRpbmcgc2VxdWVuY2VzIGFfMS4uYV9tIHdoZXJlIGVhY2ggYV9pIGluIFsxLi5uXQogICAgICAgIC8vIHN1Y2ggdGhhdDoKICAgICAgICAvLyBGb3IgZWFjaCBmbG9vciBpLCB0aGUgbnVtYmVyIG9mIGFpcnBsYW5lcyBsYXVuY2hlZCBmcm9tIGZsb29yIDw9IGkgaXMgPj0gYwoKICAgICAgICAvLyBGb3IgZWFjaCBwcmVmaXggaSwgYW5kIGZvciBlYWNoIGZsb29yIGosIHRoZSBudW1iZXIgb2YgbGF1bmNoZXMgZnJvbSBmbG9vcnMgPD0gaiB1cCB0byBpCiAgICAgICAgLy8gbXVzdCBiZSB0cmFja2VkIHRvIHZlcmlmeSBjb25zdHJhaW50cy4KCiAgICAgICAgLy8gTGV0J3MgZGVmaW5lIGRwW2ldW2pdOiBudW1iZXIgb2Ygd2F5cyB0aGF0IGFmdGVyIGkgbGF1bmNoZXMsIGV4YWN0bHkgaiBmbG9vcnMgaGF2ZSByZWFjaGVkIGMgbGF1bmNoZXMgc2VlbiAoaS5lLiwgdGhlaXIgcHJlZml4IHN1bXMgPj0gYykKCiAgICAgICAgLy8gSW5pdGlhbGx5IGRwWzBdWzBdID0gMQogICAgICAgIC8vIEF0IGVhY2ggc3RlcCwgd2UgcGljayBmbG9vciBmIGluIFsxLi5uXQogICAgICAgIC8vIFdoZW4gd2UgcGljayBmbG9vciBmLCBmbG9vcnMgMS4uZiBzZWUgb25lIG1vcmUgbGF1bmNoLgogICAgICAgIC8vIFNvbWUgZmxvb3JzIG1heSByZWFjaCBjIGxhdW5jaGVzIHNlZW4gYXQgdGhpcyBzdGVwLgoKICAgICAgICAvLyBXZSB0cmFjayBob3cgbWFueSBmbG9vcnMgaGF2ZSByZWFjaGVkIGMgbGF1bmNoZXMgc2Vlbi4KCiAgICAgICAgLy8gV2UnbGwga2VlcCB0cmFjayBvZiBob3cgbWFueSBmbG9vcnMgaGF2ZSBjdXJyZW50IGNvdW50cyA8IGMuCgogICAgICAgIHZlY3Rvcjx2ZWN0b3I8bG9uZyBsb25nPj4gZHAobSsxLCB2ZWN0b3I8bG9uZyBsb25nPihuKzEsMCkpOwogICAgICAgIGRwWzBdWzBdID0gMTsKCiAgICAgICAgLy8gY250X2xlc3M6IG51bWJlciBvZiBmbG9vcnMgd2l0aCBjb3VudHMgPCBjCiAgICAgICAgLy8gQXQgc3RhcnQsIGFsbCBmbG9vcnMgaGF2ZSAwIGxhdW5jaGVzIHNlZW4sIHNvIGNudF9sZXNzID0gbgogICAgICAgIC8vIFdoZW4gd2UgbGF1bmNoIGZyb20gZmxvb3IgZiwgZmxvb3JzIDEuLmYgaW5jcmVhc2UgdGhlaXIgY291bnRzIGJ5IDEKICAgICAgICAvLyBTb21lIGZsb29ycyBtYXkgcmVhY2ggYyBmcm9tIGMtMQoKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG07IGkrKykgewogICAgICAgICAgICB2ZWN0b3I8dmVjdG9yPGxvbmcgbG9uZz4+IG5kcChtKzEsIHZlY3Rvcjxsb25nIGxvbmc+KG4rMSwwKSk7CiAgICAgICAgICAgIGZvciAoaW50IHJlYWNoZWQgPSAwOyByZWFjaGVkIDw9IG47IHJlYWNoZWQrKykgewogICAgICAgICAgICAgICAgaWYgKGRwW2ldW3JlYWNoZWRdID09IDApIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgaW50IGxlc3MgPSBuIC0gcmVhY2hlZDsgLy8gZmxvb3JzIG5vdCByZWFjaGVkIGMgeWV0CiAgICAgICAgICAgICAgICBsb25nIGxvbmcgd2F5cyA9IGRwW2ldW3JlYWNoZWRdOwogICAgICAgICAgICAgICAgLy8gV2UgdHJ5IHRvIHBpY2sgZmxvb3IgZiBmcm9tIDEgdG8gbgogICAgICAgICAgICAgICAgLy8gRm9yIGZsb29ycyAxLi5mLCB0aGVpciBjb3VudHMgaW5jcmVhc2UgYnkgMQogICAgICAgICAgICAgICAgLy8gQW1vbmcgbGVzcyBmbG9vcnMsIHNvbWUgbnVtYmVyIGJlY29tZSByZWFjaGVkCgogICAgICAgICAgICAgICAgLy8gTnVtYmVyIG9mIGZsb29ycyBjdXJyZW50bHkgbGVzczogbGVzcwogICAgICAgICAgICAgICAgLy8gQW1vbmcgdGhlc2UgbGVzcyBmbG9vcnMsIHNvbWUgYXJlIGluIHRoZSBmaXJzdCBmIGZsb29ycywgc29tZSBhcmUgbm90CiAgICAgICAgICAgICAgICAvLyBXZSBzZWxlY3QgZiwgdGhlbiB0aGUgbnVtYmVyIG9mIGZsb29ycyByZWFjaGluZyBjIGlzIHRoZSBudW1iZXIgb2YgZmxvb3JzIGluIFsxLi5mXSB0aGF0IGhhZCBjb3VudCA9PSBjLTEKCiAgICAgICAgICAgICAgICAvLyBCdXQgd2UgZG9uJ3Qga25vdyB3aGljaCBmbG9vcnMgaGF2ZSBjb3VudCBjLTEgZXhhY3RseSwgb25seSBob3cgbWFueSBmbG9vcnMgaGF2ZSBjb3VudHMgPCBjCiAgICAgICAgICAgICAgICAvLyBTaW5jZSBhbGwgZmxvb3JzIHN0YXJ0IGF0IDAsIGFuZCBpbmNyZWFzZXMgYnkgMSB3aGVuIHNlbGVjdGVkIGluIHByZWZpeAogICAgICAgICAgICAgICAgLy8gV2UgY2FuIHRoaW5rIGluIHRlcm1zIG9mIGhvdyBtYW55IGZsb29ycyBoYXZlIGNvdW50ID09IGMtMSBiZWZvcmUgdGhpcyBzdGVwCgogICAgICAgICAgICAgICAgLy8gTGV0J3Mga2VlcCB0cmFjayBvZiBob3cgbWFueSBmbG9vcnMgaGF2ZSBjb3VudHMgPT0gYy0xIChjYWxsIHgpLCBjb3VudHMgPCBjLTEgKHkpLCBjb3VudHMgPT0gYyAocmVhY2hlZCkKICAgICAgICAgICAgICAgIC8vIEJ1dCB3ZSBvbmx5IHRyYWNrIHJlYWNoZ"]
[42.225189, "i", "WQsIHNvIHdlIGNhbid0IGtub3cgZXhhY3QgZGlzdHJpYnV0aW9uCgogICAgICAgICAgICAgICAgLy8gSW5zdGVhZCwgd2Ugd2lsbCBjb25zaWRlciB0aGF0IGFtb25nIGxlc3MgZmxvb3JzLCBzb21lIG51bWJlciBrIGFyZSBpbiB0aGUgZmlyc3QgZiBmbG9vcnMgKHdoaWNoIHdpbGwgaW5jcmVhc2UgY291bnRzIGJ5IDEpCiAgICAgICAgICAgICAgICAvLyBhbmQgYW1vbmcgdGhvc2Ugaywgc29tZSBjYW4gcmVhY2ggYyBub3cgKHRob3NlIHRoYXQgaGFkIGNvdW50ID09IGMtMSkKCiAgICAgICAgICAgICAgICAvLyBCZWNhdXNlIGFsbCBmbG9vcnMgYXJlIHN5bW1ldHJpY2FsIGFuZCBpbml0aWFsIGNvdW50cyBhcmUgemVybywgYXQgc3RlcCBpLAogICAgICAgICAgICAgICAgLy8gdGhlIG51bWJlciBvZiBsYXVuY2hlcyBhZmZlY3RpbmcgZmxvb3JzIGRlcGVuZHMgb24gaG93IG1hbnkgdGltZXMgZmxvb3JzIHdlcmUgc2VsZWN0ZWQgcHJldmlvdXNseS4KCiAgICAgICAgICAgICAgICAvLyBJdCdzIGNvbXBsaWNhdGVkIHRvIHRyYWNrIGV4YWN0IGNvdW50cyBwZXIgZmxvb3IsIGJ1dCBzaW5jZSBhbGwgYV9pPTAsCiAgICAgICAgICAgICAgICAvLyB3ZSBjYW4gdXNlIGFub3RoZXIgYXBwcm9hY2g6CgogICAgICAgICAgICAgICAgLy8gTGV04oCZcyByZXByZXNlbnQgdGhlIGZsb29ycyBieSB0aGVpciBjb3VudHM6IGVhY2ggZmxvb3IgaGFzIGNvdW50IG9mIGhvdyBtYW55IHRpbWVzIGl0IHdhcyBjb3ZlcmVkIGJ5IGxhdW5jaGVzIChwcmVmaXggc3VtcykuCiAgICAgICAgICAgICAgICAvLyBBdCBlYWNoIHN0ZXAsIHdlIHBpY2sgZmxvb3IgZiwgd2hpY2ggaW5jcmVhc2VzIGNvdmVyYWdlIGZvciBmbG9vcnMgMS4uZiBieSAxLgoKICAgICAgICAgICAgICAgIC8vIFdlIHdhbnQgdG8gY291bnQgdGhlIG51bWJlciBvZiBzZXF1ZW5jZXMgb2YgbGVuZ3RoIG0gb2YgZmxvb3JzIGZfaSBpbiBbMS4ubl0KICAgICAgICAgICAgICAgIC8vIHN1Y2ggdGhhdCBhZnRlciBzZXF1ZW5jZSBpcyBkb25lLCBhbGwgZmxvb3JzIGhhdmUgY292ZXJhZ2UgPj0gYy4KCiAgICAgICAgICAgICAgICAvLyBCZWNhdXNlIGNvdmVyYWdlIGluY3JlYXNlcyBieSAxIGZvciBmbG9vcnMgMS4uZl9pIGF0IHN0ZXAgaSwKICAgICAgICAgICAgICAgIC8vIHRoZSBjb3ZlcmFnZSBvZiBmbG9vciBqIGlzIG51bWJlciBvZiBpIHdpdGggZl9pID49IGouCgogICAgICAgICAgICAgICAgLy8gU28gY292ZXJhZ2Vbal0gPSBjb3VudCBvZiBsYXVuY2hlcyB3aXRoIGZfaSA+PSBqCgogICAgICAgICAgICAgICAgLy8gU28gY292ZXJhZ2UgaXMgYSBub24taW5jcmVhc2luZyBzZXF1ZW5jZSBjb3ZlcmFnZVsxXSA+PSBjb3ZlcmFnZVsyXSA+PSAuLi4gPj0gY292ZXJhZ2Vbbl0KCiAgICAgICAgICAgICAgICAvLyBFYWNoIGNvdmVyYWdlW2pdIGluIFswLi5tXSwgYW5kIGNvdmVyYWdlW2pdID49IGMgZm9yIGFsbCBqCgogICAgICAgICAgICAgICAgLy8gQWxzbywgc3VtIG9mIGNvdmVyYWdlIGRpZmZlcmVuY2VzID0gbQoKICAgICAgICAgICAgICAgIC8vIFRoZSBwcm9ibGVtIHJlZHVjZXMgdG8gY291bnRpbmcgbnVtYmVyIG9mIHNlcXVlbmNlcyBmX2kgaW4gWzEuLm5dIHN1Y2ggdGhhdCB0aGUgY292ZXJhZ2Ugc2VxdWVuY2Ugc2F0aXNmaWVzIGNvdmVyYWdlW2pdID49IGMKCiAgICAgICAgICAgICAgICAvLyBOdW1iZXIgb2Ygc2VxdWVuY2VzIGVxdWFscyBudW1iZXIgb2Ygc2VxdWVuY2VzIGZfaSBpbiBbMS4ubl0gb2YgbGVuZ3RoIG0gc3VjaCB0aGF0IGZvciBhbGwgaiwgY292ZXJhZ2Vbal0gPj0gYyBhbmQgY292ZXJhZ2UgaXMgbm9uLWluY3JlYXNpbmcuCgogICAgICAgICAgICAgICAgLy8gVGhlIGNvdmVyYWdlIHNlcXVlbmNlIGlzOgogICAgICAgICAgICAgICAgLy8gY292ZXJhZ2VbMV0gPSBjb3VudCBvZiBmX2kgPj0xID0gbQogICAgICAgICAgICAgICAgLy8gY292ZXJhZ2Vbbl0gPSBjb3VudCBvZiBmX2kgPj0gbgoKICAgICAgICAgICAgICAgIC8vIGNvdmVyYWdlIGlzIGEgbm9uLWluY3JlYXNpbmcgc2VxdWVuY2Ugb2YgaW50ZWdlcnMgZnJvbSBtIGRvd24gdG8gMC4KCiAgICAgICAgICAgICAgICAvLyBUbyBoYXZlIGNvdmVyYWdlW2pdID49IGMsIGNvdmVyYWdlIG11c3QgYmUgYXQgbGVhc3QgYyBmb3IgYWxsIGouCgogICAgICAgICAgICAgICAgLy8gRGVmaW5lIGNvdmVyYWdlJ1tqXSA9IGNvdmVyYWdlW2pdIC0gYyA+PSAwCiAgICAgICAgICAgICAgICAvLyBjb3ZlcmFnZScgaXMgYSBub24taW5jcmVhc2luZyBzZXF1ZW5jZSBvZiBsZW5ndGggbiB3aXRoIHZhbHVlcyBpbiBbMC4ubS1jXQoKICAgICAgICAgICAgICAgIC8vIHN1bSBvdmVyIGogb2YgKGNvdmVyYWdlW2pdIC0gY292ZXJhZ2VbaisxXSkgPSBjb3ZlcmFnZVsxXSAtIGNvdmVyYWdlW24rMV0gPSBtIC0gMCA9IG0KICAgICAgICAgICAgICAgIC8vIFNpbWlsYXJseSBzdW0gb2YgY292ZXJhZ2UnIGRpZmZlcmVuY2VzID0gbSAtIG4qYwoKICAgICAgICAgICAgICAgIC8vIFNpbmNlIGNvdmVyYWdlJ1tqXSA+PSAwIGFuZCBub24taW5jcmVhc2luZywgdGhlIGRpZmZlcmVuY2VzIChjb3ZlcmFnZSdbal0gLSBjb3ZlcmFnZSdbaisxXSkgYXJlIG5vbi1uZWdhdGl2ZSBhbmQgc3VtIHRvIG0gLSBuKmMuCgogICAgICAgICAgICAgICAgLy8gVGhlIG51bWJlciBvZiBzZXF1ZW5jZXMgZl9pIHByb2R1Y2luZyBjb3ZlcmFnZSBpczoKICAgICAgICAgICAgICAgIC8vIHByb2R1Y3Qgb3ZlciBqIG9mIChjb3ZlcmFnZSdbal0gLSBjb3ZlcmFnZSdbaisxXSkgY2hvb3NlIChudW1iZXIgb2YgbGF1bmNoZXMgd2l0aCBmbG9vciA9IGopCiAgICAgICAgICAgICAgICAvLyBidXQgdGhpcyBpcyBjb21wbGljYXRlZC4KCiAgICAgICAgICAgICAgICAvLyBBbHRlcm5hdGl2ZSBzb2x1dGlvbiBpcyB0byB1c2UgYSBrbm93biBEUCBzb2x1dGlvbiBmcm9tIGVkaXRvcmlhbDoKCiAgICAgICAgICAgICAgICAvLyBEZWZpbmUgZHBbaV1bal06IG51bWJlciBvZiB3YXlzIHRvIGFzc2lnbiBmaXJzdCBpIGxhdW5jaGVzIHNvIHRoYXQgZXhhY3RseSBqIGZsb29ycyBoYXZlIGNvdmVyYWdlID49IGMKCiAg"]
[42.227149, "i", "ICAgICAgICAgICAgICAvLyBJbml0aWFsbHkgZHBbMF1bMF0gPSAxCgogICAgICAgICAgICAgICAgLy8gRm9yIGVhY2ggbGF1bmNoLCB3ZSBjaG9vc2UgZmxvb3IgZiBpbiBbMS4ubl0KICAgICAgICAgICAgICAgIC8vIFRoaXMgaW5jcmVhc2VzIGNvdmVyYWdlIG9mIGZsb29ycyAxLi5mIGJ5IDEKCiAgICAgICAgICAgICAgICAvLyBTb21lIGZsb29ycyBtYXkgcmVhY2ggY292ZXJhZ2UgYyBhZnRlciB0aGlzIGxhdW5jaAoKICAgICAgICAgICAgICAgIC8vIFRoZSBudW1iZXIgb2YgZmxvb3JzIHRoYXQgcmVhY2ggY292ZXJhZ2UgYyBhdCB0aGlzIHN0ZXAgaXMgayBpbiBbMC4ubWluKGYsIG4gLSBqKV0KCiAgICAgICAgICAgICAgICAvLyBXZSBjYW4gcHJlY29tcHV0ZSBob3cgbWFueSBmbG9vcnMgY2FuIHJlYWNoIGNvdmVyYWdlIGMgZnJvbSBjb3ZlcmFnZSBjLTEKCiAgICAgICAgICAgICAgICAvLyBJbXBsZW1lbnRpbmcgdGhlIERQIGFzIHBlciBlZGl0b3JpYWw6CgogICAgICAgICAgICAgICAgaW50IG1heF9mbG9vciA9IG47CgogICAgICAgICAgICAgICAgLy8gZHBbaV1bal06IHdheXMgYWZ0ZXIgaSBsYXVuY2hlcywgaiBmbG9vcnMgaGF2ZSBjb3ZlcmFnZSA+PSBjCiAgICAgICAgICAgICAgICB2ZWN0b3I8dmVjdG9yPGxvbmcgbG9uZz4+IGRwKG0rMSwgdmVjdG9yPGxvbmcgbG9uZz4obisxLDApKTsKICAgICAgICAgICAgICAgIGRwWzBdWzBdID0gMTsKCiAgICAgICAgICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG07IGkrKykgewogICAgICAgICAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDw9IG47IGorKykgewogICAgICAgICAgICAgICAgICAgICAgICBsb25nIGxvbmcgdmFsID0gZHBbaV1bal07CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWwgPT0gMCkgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdlIHBpY2sgZmxvb3IgZiBmcm9tIDEgdG8gbgogICAgICAgICAgICAgICAgICAgICAgICAvLyBmbG9vcnMgMS4uZiBjb3ZlcmFnZSBpbmNyZWFzZXMgYnkgMQogICAgICAgICAgICAgICAgICAgICAgICAvLyBhbW9uZyBmbG9vcnMgbm90IHJlYWNoZWQgYyB5ZXQsIHNvbWUgZmxvb3JzIGluIDEuLmYgd2lsbCByZWFjaCBjCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBudW1iZXIgb2YgZmxvb3JzIG5vdCByZWFjaGVkIGM6IG4gLSBqCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBudW1iZXIgb2YgZmxvb3JzIGluIDEuLmYgbm90IHJlYWNoZWQgYzogeCA9IG1pbihmLCBuIC0gaikKCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEZvciBrIGluIFswLi54XSwgbnVtYmVyIG9mIGZsb29ycyByZWFjaGluZyBjIGF0IHRoaXMgc3RlcCBpcyBrCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBTbyBuZXh0IHN0YXRlIGlzIGRwW2krMV1baiArIGtdCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGUgbnVtYmVyIG9mIHdheXMgdG8gY2hvb3NlIHdoaWNoIGsgZmxvb3JzIHJlYWNoIGMgaXMgQyh4LCBrKSwgYnV0IHNpbmNlIGZsb29ycyBhcmUgaW5kaXN0aW5ndWlzaGFibGUsIHN1bSBvdmVyIGsgb2Ygd2F5cwoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gRm9yIGFsbCBmbG9vcnMgaW4gMS4uZiwgdGhlIGZsb29ycyB0aGF0IGhhdmUgY292ZXJhZ2UgYy0xIGFuZCBiZWNvbWUgYyBub3cgYXJlIGV4YWN0bHkgdGhvc2UgdGhhdCB3ZXJlIGNvdmVyYWdlIGMtMSBiZWZvcmUuCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBTaW5jZSB3ZSBkb24ndCB0cmFjayBleGFjdCBkaXN0cmlidXRpb24sIGFzc3VtZSBhbGwgZmxvb3JzIGluIDEuLmYgbm90IHJlYWNoZWQgYyB5ZXQgY2FuIHJlYWNoIGMgbm93LgoKICAgICAgICAgICAgICAgICAgICAgICAgaW50IHggPSBtaW4oZmxvb3IobiksIG4gLSBqKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNpbmNlIGZsb29ycyBhcmUgaW5kaXN0aW5ndWlzaGFibGUsIHN1bSBvdmVyIGsgZnJvbSAwIHRvIHggb2YgQyh4LGspID0gMl54CgogICAgICAgICAgICAgICAgICAgICAgICAvLyBCdXQgd2UgbXVzdCBjb25zaWRlciB0aGUgd2F5cyB0byBjaG9vc2UgayBmbG9vcnMgdG8gcmVhY2ggYyBhbmQgdXBkYXRlIGRwIGFjY29yZGluZ2x5CgogICAgICAgICAgICAgICAgICAgICAgICAvLyBBY3R1YWxseSwgZWRpdG9yaWFsIHNvbHV0aW9uIGlzOgogICAgICAgICAgICAgICAgICAgICAgICAvLyBkcFtpKzFdW2pdICs9IGRwW2ldW2pdICogZgogICAgICAgICAgICAgICAgICAgICAgICAvLyBkcFtpKzFdW2orMV0gKz0gZHBbaV1bal0gKiAobiAtIGopICogKG51bWJlciBvZiBmbG9vcnMgaW4gMS4uZiB0aGF0IGNhbiByZWFjaCBjKQoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhlIGVkaXRvcmlhbCBzb2x1dGlvbidzIERQIGlzIGNvbXBsZXgsIHNvIGhlcmUgd2UgaW1wbGVtZW50IGEgc2ltcGxlciBPKG4qbSkgc29sdXRpb246CgogICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGUgcHJvYmxlbSBpcyBlcXVpdmFsZW50IHRvIGNvdW50aW5nIHNlcXVlbmNlcyBmX2kgaW4gWzEuLm5dIHN1Y2ggdGhhdCBjb3ZlcmFnZVtqXSA+PSBjIGZvciBhbGwgai4KCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdlIGNhbiB1c2UgYSBjb21iaW5hdG9yaWFsIGZvcm11bGE6CgogICAgICAgICAgICAgICAgICAgICAgICAvLyBOdW1iZXIgb2Ygc2VxdWVuY2VzID0gbnVtYmVyIG9mIHdheXMgdG8gZGlzdHJpYnV0ZSBtIGxhdW5jaGVzIHdpdGggZWFjaCBsYXVuY2ggZmxvb3IgZiBpbiBbMS4ubl0sCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNvIHRoYXQgZm9yIGVhY2ggZmxvb3IgaiwgY291bnQgb2YgbGF1bmNoZXMgd2l0aCBmbG9vciA+PSBqID49IGMuCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIGlzIGVxdWl2YWxlbnQgdG8gY291bnRpbmcgbm9uLWluY3JlYXNpbmcgc2VxdWVuY2VzIGNvdmVyYWdlWzFdID49IGNvdmVyYWdlWzJdID49IC4uLiA+PSBjb3ZlcmFnZVtuXSA+PSBjIHdpdGggc3VtIGNvdmVyYWdlW2pdID0gbSArIG4qYwoKICAgICAgICAgICAgICAgICAgICA"]
[42.229221, "i", "gICAgLy8gVGhlIG51bWJlciBvZiBzdWNoIHNlcXVlbmNlcyBpcyBDKG0gLSAxLCBuIC0gMSkgaWYgbSA+PSBuKmMgZWxzZSAwCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBCdXQgd2UgbmVlZCB0byBwcm9kdWNlIHRoZSBleGFjdCBudW1iZXIgZm9yIHRoZSBwcm9ibGVtLgoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gRm9yIHRoaXMgcHJvYmxlbSwgYSBrbm93biBmb3JtdWxhIGlzOgogICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGUgYW5zd2VyIGlzIG51bWJlciBvZiBzZXF1ZW5jZXMgZl8xLi5mX20gd2l0aCBmX2kgaW4gWzEuLm5dLCBzdWNoIHRoYXQgY292ZXJhZ2Vbal0gPj0gYyBmb3IgYWxsIGouCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGUgbnVtYmVyIG9mIHN1Y2ggc2VxdWVuY2VzIGlzIGVxdWFsIHRvIG51bWJlciBvZiBjb21wb3NpdGlvbnMgb2YgbSBpbnRvIG4gcGFydHMgZWFjaCBhdCBsZWFzdCBjLAogICAgICAgICAgICAgICAgICAgICAgICAvLyB3aGljaCBpcyBDKG0gLSBuKmMgKyBuIC0gMSwgbiAtIDEpLgoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gQnV0IHNpbmNlIG0gPj0gbipjIGlzIG5vdCBndWFyYW50ZWVkLCB3ZSBtdXN0IGNoZWNrIGZlYXNpYmlsaXR5LgoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhlIHByb2JsZW0gc3RhdGVzIGMgPD0gbSA8PSBuKmMsIHNvIGZlYXNpYmxlIGlmIG0gPj0gbipjCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBXYWl0LCBjb25zdHJhaW50cyBzYXkgYyA8PSBtIDw9IG4qYywgc28gbSBjYW4gYmUgbGVzcyB0aGFuIG4qYy4KCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNvIGl0J3MgcG9zc2libGUgbm8gc2VxdWVuY2VzIGV4aXN0LgoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gSWYgbSA8IG4qYywgYW5zd2VyIGlzIDAuCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBJZiBtID49IG4qYywgYW5zd2VyIGlzIEMobSAtIG4qYyArIG4gLSAxLCBuIC0gMSkuCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBMZXQncyBpbXBsZW1lbnQgdGhpcyBmb3JtdWxhLgoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gTW9kdWxhciBjb21iaW5hdG9yaWNzOgogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWMgdmVjdG9yPGxvbmcgbG9uZz4gZmFjdCgxMDAwMCArIDEwMCksIGludmZhY3QoMTAwMDAgKyAxMDApOwogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWMgYm9vbCBpbml0aWFsaXplZCA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWluaXRpYWxpemVkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnQgbWF4diA9IDEwMDAwICsgMTAwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFjdFswXSA9IDE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGludCBpID0gMTsgaSA8PSBtYXh2OyBpKyspIGZhY3RbaV0gPSBmYWN0W2ktMV0gKiBpICUgTU9EOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW52ZmFjdFttYXh2XSA9IDE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb25nIGxvbmcgYmFzZSA9IGZhY3RbbWF4dl07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBGZXJtYXQgaW52ZXJzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9uZyBsb25nIHAgPSBNT0QgLSAyOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9uZyBsb25nIHJlcyA9IDE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb25nIGxvbmcgY3VyID0gYmFzZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHAgJjEpIHJlcyA9IHJlcyAqIGN1ciAlIE1PRDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXIgPSBjdXIgKiBjdXIgJSBNT0Q7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcCA+Pj0xOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW52ZmFjdFttYXh2XSA9IHJlczsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaW50IGkgPSBtYXh2IC0gMTsgaSA+PTA7IGktLSkgaW52ZmFjdFtpXSA9IGludmZhY3RbaSsxXSAqIChpKzEpICUgTU9EOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdGlhbGl6ZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBhdXRvIGNvbWIgPSBbJl0oaW50IG5fLCBpbnQgcl8pIC0+IGxvbmcgbG9uZyB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocl8gPCAwIHx8IHJfID4gbl8pIHJldHVybiAwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhY3Rbbl9dICogaW52ZmFjdFtyX10gJSBNT0QgKiBpbnZmYWN0W25fLXJfXSAlIE1PRDsKICAgICAgICAgICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGxvbmcgbG9uZyBhbnMgPSAwOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAobSA+PSBuICogYykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5zID0gY29tYihtIC0gbiAqIGMgKyBuIC0gMSwgbiAtIDEpOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5zID0gMDsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgY291dCA8PCBhbnMgJSBNT0QgPDwgJ1xuJzsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7IC8vIHNpbmNlIHdlIGhhdmUgdGhlIGFuc3dlciwgYnJlYWsgdGhlIGxvb3AKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICByZXR1cm4gMDsKfQo=' | base64 -d > /app/main.cpp; tmux wait -S done\r"]
[42.280877, "o", "echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7Cgpjb25zdCBpbnQgTU9EID0gMTAwMDAwMDAwNzsKCi8vIGRwW2ldW2pdOiBudW1iZXIgb2Ygd2F5cyBhZnRlciBpLXRoIGFpcnBsYW5lIGxhdW5jaGVkLCB3aXRoIGogZmxvb3JzIGhhdmluZyByZWFjaGVkIGMgbGF1bmNoZXMgc2VlbgovLyBCZWNhdXNlIGFsbCBhX2k9MCwgd2UgbmVlZCB0byBjb3VudCB0aGUgbnVtYmVyIG9mIHdheXMgdG8gYXNzaWduIGZsb29ycyB0byBlYWNoIGxhdW5jaAovLyBzbyB0aGF0IGZvciBlYWNoIGZsb29yLCBhdCB0aGUgZW5kLCB0aGUgdG90YWwgbGF1bmNoZXMgc2VlbiA+PSBjCgppbnQgbWFpbigpIHsKICAgIGlvczo6c3luY193aXRoX3N0ZGlvKGZhbHNlKTsKICAgIGNpbi50aWUobnVsbHB0cik7CiAgICBpbnQgdDsKICAgIGNpbiA+PiB0OwogICAgd2hpbGUgKHQtLSkgewogICAgICAgIGludCBuLCBjLCBtOwogICAgICAgIGNpbiA+PiBuID4+IGMgPj4gbTsKICAgICAgICB2ZWN0b3I8aW50PiBhKG0pOwogICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgbTsgaSsrKSBjaW4gPj4gYVtpXTsKICAgICAgICAvLyBhbGwgYVtpXSA9IDAgZ3VhcmFudGVlZAoKICAgICAgICAvLyBXZSBjYW4gbW9kZWwgdGhlIHByb2JsZW0gYXMgY291bnRpbmcgc2VxdWVuY2VzIGFfMS4uYV9tIHdoZXJlIGVhY2ggYV9pIGluIFsxLi5uXQogICAgICAgIC8vIHN1Y2ggdGhhdDoKICAgICAgICAvLyBGb3IgZWFjaCBmbG9vciBpLCB0aGUgbnVtYmVyIG9mIGFpcnBsYW5lcyBsYXVuY2hlZCBmcm9tIGZsb29yIDw9IGkgaXMgPj0gYwoKICAgICAgICAvLyBGb3IgZWFjaCBwcmVmaXggaSwgYW5kIGZvciBlYWNoIGZsb29yIGosIHRoZSBudW1iZXIgb2YgbGF1bmNoZXMgZnJvbSBmbG9vcnMgPD0gaiB1cCB0byBpCiAgICAgICAgLy8gbXVzdCBiZSB0cmFja2VkIHRvIHZlcmlmeSBjb25zdHJhaW50cy4KCiAgICAgICAgLy8gTGV0J3MgZGVmaW5lIGRwW2ldW2pdOiBudW1iZXIgb2Ygd2F5cyB0aGF0IGFmdGVyIGkgbGF1bmNoZXMsIGV4YWN0bHkgaiBmbG9vcnMgaGF2ZSByZWFjaGVkIGMgbGF1bmNoZXMgc2VlbiAoaS5lLiwgdGhlaXIgcHJlZml4IHN1bXMgPj0gYykKCiAgICAgICAgLy8gSW5pdGlhbGx5IGRwWzBdWzBdID0gMQogICAgICAgIC8vIEF0IGVhY2ggc3RlcCwgd2UgcGljayBmbG9vciBmIGluIFsxLi5uXQogICAgICAgIC8vIFdoZW4gd2UgcGljayBmbG9vciBmLCBmbG9vcnMgMS4uZiBzZWUgb25lIG1vcmUgbGF1bmNoLgogICAgICAgIC8vIFNvbWUgZmxvb3JzIG1heSByZWFjaCBjIGxhdW5jaGVzIHNlZW4gYXQgdGhpcyBzdGVwLgoKICAgICAgICAvLyBXZSB0cmFjayBob3cgbWFueSBmbG9vcnMgaGF2ZSByZWFjaGVkIGMgbGF1bmNoZXMgc2Vlbi4KCiAgICAgICAgLy8gV2UnbGwga2VlcCB0cmFjayBvZiBob3cgbWFueSBmbG9vcnMgaGF2ZSBjdXJyZW50IGNvdW50cyA8IGMuCgogICAgICAgIHZlY3Rvcjx2ZWN0b3I8bG9uZyBsb25nPj4gZHAobSsxLCB2ZWN0b3I8bG9uZyBsb25nPihuKzEsMCkpOwogICAgICAgIGRwWzBdWzBdID0gMTsKCiAgICAgICAgLy8gY250X2xlc3M6IG51bWJlciBvZiBmbG9vcnMgd2l0aCBjb3VudHMgPCBjCiAgICAgICAgLy8gQXQgc3RhcnQsIGFsbCBmbG9vcnMgaGF2ZSAwIGxhdW5jaGVzIHNlZW4sIHNvIGNudF9sZXNzID0gbgogICAgICAgIC8vIFdoZW4gd2UgbGF1bmNoIGZyb20gZmxvb3IgZiwgZmxvb3JzIDEuLmYgaW5jcmVhc2UgdGhlaXIgY291bnRzIGJ5IDEKICAgICAgICAvLyBTb21lIGZsb29ycyBtYXkgcmVhY2ggYyBmcm9tIGMtMQoKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG07IGkrKykgewogICAgICAgICAgICB2ZWN0b3I8dmVjdG9yPGxvbmcgbG9uZz4+IG5kcChtKzEsIHZlY3Rvcjxsb25nIGxvbmc+KG4rMSwwKSk7CiAgICAgICAgICAgIGZvciAoaW50IHJlYWNoZWQgPSAwOyByZWFjaGVkIDw9IG47IHJlYWNoZWQrKykgewogICAgICAgICAgICAgICAgaWYgKGRwW2ldW3JlYWNoZWRdID09IDApIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgaW50IGxlc3MgPSBuIC0gcmVhY2hlZDsgLy8gZmxvb3JzIG5vdCByZWFjaGVkIGMgeWV0CiAgICAgICAgICAgICAgICBsb25nIGxvbmcgd2F5cyA9IGRwW2ldW3JlYWNoZWRdOwogICAgICAgICAgICAgICAgLy8gV2UgdHJ5IHRvIHBpY2sgZmxvb3IgZiBmcm9tIDEgdG8gbgogICAgICAgICAgICAgICAgLy8gRm9yIGZsb29ycyAxLi5mLCB0aGVpciBjb3VudHMgaW5jcmVhc2UgYnkgMQogICAgICAgICAgICAgICAgLy8gQW1vbmcgbGVzcyBmbG9vcnMsIHNvbWUgbnVtYmVyIGJlY29tZSByZWFjaGVkCgogICAgICAgICAgICAgICAgLy8gTnVtYmVyIG9mIGZsb29ycyBjdXJyZW50bHkgbGVzczogbGVzcwogICAgICAgICAgICAgICAgLy8gQW1vbmcgdGhlc2UgbGVzcyBmbG9vcnMsIHNvbWUgYXJlIGluIHRoZSBmaXJzdCBmIGZsb29ycywgc29tZSBhcmUgbm90CiAgICAgICAgICAgICAgICAvLyBXZSBzZWxlY3QgZiwgdGhlbiB0aGUgbnVtYmVyIG9mIGZsb29ycyByZWFjaGluZyBjIGlzIHRoZSBudW1iZXIgb2YgZmxvb3JzIGluIFsxLi5mXSB0aGF0IGhhZCBjb3VudCA9PSBjLTEKCiAgICAgICAgICAgICAgICAvLyBCdXQgd2UgZG9uJ3Qga25vdyB3aGljaCBmbG9vcnMgaGF2ZSBjb3VudCBjLTEgZXhhY3RseSwgb25seSBob3cgbWFueSBmbG9vcnMgaGF2ZSBjb3VudHMgPCBjCiAgICAgICAgICAgICAgICAvLyBTaW5jZSBhbGwgZmxvb3JzIHN0YXJ0IGF0IDAsIGFuZCBpbmNyZWFzZXMgYnkgMSB3aGVuIHNlbGVjdGVkIGluIHByZWZpeAogICAgICAgICAgICAgICAgLy8gV2UgY2FuIHRoaW5rIGluIHRlcm1zIG9mIGhvdyBtYW55IGZsb29ycyBoYXZlIGNvdW50ID09IGMtMSBiZWZvcmUgdGhpcyBzdGVwCgogICAgICAgICAgICAgICAgLy8gTGV0J3Mga2VlcCB0cmFjayBvZiBob3cgbWFueSBmbG9vcnMgaGF2ZSBjb3VudHMgPT0gYy0xIChjYWxsIHgpLCBjb3VudHMgPCBjLTEgKHkpLCBjb3VudHMgPT0gYyAocmVhY2hlZCkKICAgICAgICAgICAgICAgIC8vIEJ1dCB3ZSBvbmx5IHRyYWNrIHJlYWNoZ"]
[42.281995, "o", "WQsIHNvIHdlIGNhbid0IGtub3cgZXhhY3QgZGlzdHJpYnV0aW9uCgogICAgICAgICAgICAgICAgLy8gSW5zdGVhZCwgd2Ugd2lsbCBjb25zaWRlciB0aGF0IGFtb25nIGxlc3MgZmxvb3JzLCBzb21lIG51bWJlciBrIGFyZSBpbiB0aGUgZmlyc3QgZiBmbG9vcnMgKHdoaWNoIHdpbGwgaW5jcmVhc2UgY291bnRzIGJ5IDEpCiAgICAgICAgICAgICAgICAvLyBhbmQgYW1vbmcgdGhvc2Ugaywgc29tZSBjYW4gcmVhY2ggYyBub3cgKHRob3NlIHRoYXQgaGFkIGNvdW50ID09IGMtMSkKCiAgICAgICAgICAgICAgICAvLyBCZWNhdXNlIGFsbCBmbG9vcnMgYXJlIHN5bW1ldHJpY2FsIGFuZCBpbml0aWFsIGNvdW50cyBhcmUgemVybywgYXQgc3RlcCBpLAogICAgICAgICAgICAgICAgLy8gdGhlIG51bWJlciBvZiBsYXVuY2hlcyBhZmZlY3RpbmcgZmxvb3JzIGRlcGVuZHMgb24gaG93IG1hbnkgdGltZXMgZmxvb3JzIHdlcmUgc2VsZWN0ZWQgcHJldmlvdXNseS4KCiAgICAgICAgICAgICAgICAvLyBJdCdzIGNvbXBsaWNhdGVkIHRvIHRyYWNrIGV4YWN0IGNvdW50cyBwZXIgZmxvb3IsIGJ1dCBzaW5jZSBhbGwgYV9pPTAsCiAgICAgICAgICAgICAgICAvLyB3ZSBjYW4gdXNlIGFub3RoZXIgYXBwcm9hY2g6CgogICAgICAgICAgICAgICAgLy8gTGV04oCZcyByZXByZXNlbnQgdGhlIGZsb29ycyBieSB0aGVpciBjb3VudHM6IGVhY2ggZmxvb3IgaGFzIGNvdW50IG9mIGhvdyBtYW55IHRpbWVzIGl0IHdhcyBjb3ZlcmVkIGJ5IGxhdW5jaGVzIChwcmVmaXggc3VtcykuCiAgICAgICAgICAgICAgICAvLyBBdCBlYWNoIHN0ZXAsIHdlIHBpY2sgZmxvb3IgZiwgd2hpY2ggaW5jcmVhc2VzIGNvdmVyYWdlIGZvciBmbG9vcnMgMS4uZiBieSAxLgoKICAgICAgICAgICAgICAgIC8vIFdlIHdhbnQgdG8gY291bnQgdGhlIG51bWJlciBvZiBzZXF1ZW5jZXMgb2YgbGVuZ3RoIG0gb2YgZmxvb3JzIGZfaSBpbiBbMS4ubl0KICAgICAgICAgICAgICAgIC8vIHN1Y2ggdGhhdCBhZnRlciBzZXF1ZW5jZSBpcyBkb25lLCBhbGwgZmxvb3JzIGhhdmUgY292ZXJhZ2UgPj0gYy4KCiAgICAgICAgICAgICAgICAvLyBCZWNhdXNlIGNvdmVyYWdlIGluY3JlYXNlcyBieSAxIGZvciBmbG9vcnMgMS4uZl9pIGF0IHN0ZXAgaSwKICAgICAgICAgICAgICAgIC8vIHRoZSBjb3ZlcmFnZSBvZiBmbG9vciBqIGlzIG51bWJlciBvZiBpIHdpdGggZl9pID49IGouCgogICAgICAgICAgICAgICAgLy8gU28gY292ZXJhZ2Vbal0gPSBjb3VudCBvZiBsYXVuY2hlcyB3aXRoIGZfaSA+PSBqCgogICAgICAgICAgICAgICAgLy8gU28gY292ZXJhZ2UgaXMgYSBub24taW5jcmVhc2luZyBzZXF1ZW5jZSBjb3ZlcmFnZVsxXSA+PSBjb3ZlcmFnZVsyXSA+PSAuLi4gPj0gY292ZXJhZ2Vbbl0KCiAgICAgICAgICAgICAgICAvLyBFYWNoIGNvdmVyYWdlW2pdIGluIFswLi5tXSwgYW5kIGNvdmVyYWdlW2pdID49IGMgZm9yIGFsbCBqCgogICAgICAgICAgICAgICAgLy8gQWxzbywgc3VtIG9mIGNvdmVyYWdlIGRpZmZlcmVuY2VzID0gbQoKICAgICAgICAgICAgICAgIC8vIFRoZSBwcm9ibGVtIHJlZHVjZXMgdG8gY291bnRpbmcgbnVtYmVyIG9mIHNlcXVlbmNlcyBmX2kgaW4gWzEuLm5dIHN1Y2ggdGhhdCB0aGUgY292ZXJhZ2Ugc2VxdWVuY2Ugc2F0aXNmaWVzIGNvdmVyYWdlW2pdID49IGMKCiAgICAgICAgICAgICAgICAvLyBOdW1iZXIgb2Ygc2VxdWVuY2VzIGVxdWFscyBudW1iZXIgb2Ygc2VxdWVuY2VzIGZfaSBpbiBbMS4ubl0gb2YgbGVuZ3RoIG0gc3VjaCB0aGF0IGZvciBhbGwgaiwgY292ZXJhZ2Vbal0gPj0gYyBhbmQgY292ZXJhZ2UgaXMgbm9uLWluY3JlYXNpbmcuCgogICAgICAgICAgICAgICAgLy8gVGhlIGNvdmVyYWdlIHNlcXVlbmNlIGlzOgogICAgICAgICAgICAgICAgLy8gY292ZXJhZ2VbMV0gPSBjb3VudCBvZiBmX2kgPj0xID0gbQogICAgICAgICAgICAgICAgLy8gY292ZXJhZ2Vbbl0gPSBjb3VudCBvZiBmX2kgPj0gbgoKICAgICAgICAgICAgICAgIC8vIGNvdmVyYWdlIGlzIGEgbm9uLWluY3JlYXNpbmcgc2VxdWVuY2Ugb2YgaW50ZWdlcnMgZnJvbSBtIGRvd24gdG8gMC4KCiAgICAgICAgICAgICAgICAvLyBUbyBoYXZlIGNvdmVyYWdlW2pdID49IGMsIGNvdmVyYWdlIG11c3QgYmUgYXQgbGVhc3QgYyBmb3IgYWxsIGouCgogICAgICAgICAgICAgICAgLy8gRGVmaW5lIGNvdmVyYWdlJ1tqXSA9IGNvdmVyYWdlW2pdIC0gYyA+PSAwCiAgICAgICAgICAgICAgICAvLyBjb3ZlcmFnZScgaXMgYSBub24taW5jcmVhc2luZyBzZXF1ZW5jZSBvZiBsZW5ndGggbiB3aXRoIHZhbHVlcyBpbiBbMC4ubS1jXQoKICAgICAgICAgICAgICAgIC8vIHN1bSBvdmVyIGogb2YgKGNvdmVyYWdlW2pdIC0gY292ZXJhZ2VbaisxXSkgPSBjb3ZlcmFnZVsxXSAtIGNvdmVyYWdlW24rMV0gPSBtIC0gMCA9IG0KICAgICAgICAgICAgICAgIC8vIFNpbWlsYXJseSBzdW0gb2YgY292ZXJhZ2UnIGRpZmZlcmVuY2VzID0gbSAtIG4qYwoKICAgICAgICAgICAgICAgIC8vIFNpbmNlIGNvdmVyYWdlJ1tqXSA+PSAwIGFuZCBub24taW5jcmVhc2luZywgdGhlIGRpZmZlcmVuY2VzIChjb3ZlcmFnZSdbal0gLSBjb3ZlcmFnZSdbaisxXSkgYXJlIG5vbi1uZWdhdGl2ZSBhbmQgc3VtIHRvIG0gLSBuKmMuCgogICAgICAgICAgICAgICAgLy8gVGhlIG51bWJlciBvZiBzZXF1ZW5jZXMgZl9pIHByb2R1Y2luZyBjb3ZlcmFnZSBpczoKICAgICAgICAgICAgICAgIC8vIHByb2R1Y3Qgb3ZlciBqIG9mIChjb3ZlcmFnZSdbal0gLSBjb3ZlcmFnZSdbaisxXSkgY2hvb3NlIChudW1iZXIgb2YgbGF1bmNoZXMgd2l0aCBmbG9vciA9IGopCiAgICAgICAgICAgICAgICAvLyBidXQgdGhpcyBpcyBjb21wbGljYXRlZC4KCiAgICAgICAgICAgICAgICAvLyBBbHRlcm5hdGl2ZSBzb2x1dGlvbiBpcyB0byB1c2UgYSBrbm93biBEUCBzb2x1dGlvbiBmcm9tIGVkaXRvcmlhbDoKCiAgICAgICAgICAgICAgICAvLyBEZWZpbmUgZHBbaV1bal06IG51bWJlciBvZiB3YXlzIHRvIGFzc2lnbiBmaXJzdCBpIGxhdW5jaGVzIHNvIHRoYXQgZXhhY3RseSBqIGZsb29ycyBoYXZlIGNvdmVyYWdlID49IGMKCiAg"]
[42.282244, "o", "ICAgICAgICAgICAgICAvLyBJbml0aWFsbHkgZHBbMF1bMF0gPSAxCgogICAgICAgICAgICAgICAgLy8gRm9yIGVhY2ggbGF1bmNoLCB3ZSBjaG9vc2UgZmxvb3IgZiBpbiBbMS4ubl0KICAgICAgICAgICAgICAgIC8vIFRoaXMgaW5jcmVhc2VzIGNvdmVyYWdlIG9mIGZsb29ycyAxLi5mIGJ5IDEKCiAgICAgICAgICAgICAgICAvLyBTb21lIGZsb29ycyBtYXkgcmVhY2ggY292ZXJhZ2UgYyBhZnRlciB0aGlzIGxhdW5jaAoKICAgICAgICAgICAgICAgIC8vIFRoZSBudW1iZXIgb2YgZmxvb3JzIHRoYXQgcmVhY2ggY292ZXJhZ2UgYyBhdCB0aGlzIHN0ZXAgaXMgayBpbiBbMC4ubWluKGYsIG4gLSBqKV0KCiAgICAgICAgICAgICAgICAvLyBXZSBjYW4gcHJlY29tcHV0ZSBob3cgbWFueSBmbG9vcnMgY2FuIHJlYWNoIGNvdmVyYWdlIGMgZnJvbSBjb3ZlcmFnZSBjLTEKCiAgICAgICAgICAgICAgICAvLyBJbXBsZW1lbnRpbmcgdGhlIERQIGFzIHBlciBlZGl0b3JpYWw6CgogICAgICAgICAgICAgICAgaW50IG1heF9mbG9vciA9IG47CgogICAgICAgICAgICAgICAgLy8gZHBbaV1bal06IHdheXMgYWZ0ZXIgaSBsYXVuY2hlcywgaiBmbG9vcnMgaGF2ZSBjb3ZlcmFnZSA+PSBjCiAgICAgICAgICAgICAgICB2ZWN0b3I8dmVjdG9yPGxvbmcgbG9uZz4+IGRwKG0rMSwgdmVjdG9yPGxvbmcgbG9uZz4obisxLDApKTsKICAgICAgICAgICAgICAgIGRwWzBdWzBdID0gMTsKCiAgICAgICAgICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG07IGkrKykgewogICAgICAgICAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDw9IG47IGorKykgewogICAgICAgICAgICAgICAgICAgICAgICBsb25nIGxvbmcgdmFsID0gZHBbaV1bal07CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWwgPT0gMCkgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdlIHBpY2sgZmxvb3IgZiBmcm9tIDEgdG8gbgogICAgICAgICAgICAgICAgICAgICAgICAvLyBmbG9vcnMgMS4uZiBjb3ZlcmFnZSBpbmNyZWFzZXMgYnkgMQogICAgICAgICAgICAgICAgICAgICAgICAvLyBhbW9uZyBmbG9vcnMgbm90IHJlYWNoZWQgYyB5ZXQsIHNvbWUgZmxvb3JzIGluIDEuLmYgd2lsbCByZWFjaCBjCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBudW1iZXIgb2YgZmxvb3JzIG5vdCByZWFjaGVkIGM6IG4gLSBqCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBudW1iZXIgb2YgZmxvb3JzIGluIDEuLmYgbm90IHJlYWNoZWQgYzogeCA9IG1pbihmLCBuIC0gaikKCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEZvciBrIGluIFswLi54XSwgbnVtYmVyIG9mIGZsb29ycyByZWFjaGluZyBjIGF0IHRoaXMgc3RlcCBpcyBrCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBTbyBuZXh0IHN0YXRlIGlzIGRwW2krMV1baiArIGtdCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGUgbnVtYmVyIG9mIHdheXMgdG8gY2hvb3NlIHdoaWNoIGsgZmxvb3JzIHJlYWNoIGMgaXMgQyh4LCBrKSwgYnV0IHNpbmNlIGZsb29ycyBhcmUgaW5kaXN0aW5ndWlzaGFibGUsIHN1bSBvdmVyIGsgb2Ygd2F5cwoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gRm9yIGFsbCBmbG9vcnMgaW4gMS4uZiwgdGhlIGZsb29ycyB0aGF0IGhhdmUgY292ZXJhZ2UgYy0xIGFuZCBiZWNvbWUgYyBub3cgYXJlIGV4YWN0bHkgdGhvc2UgdGhhdCB3ZXJlIGNvdmVyYWdlIGMtMSBiZWZvcmUuCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBTaW5jZSB3ZSBkb24ndCB0cmFjayBleGFjdCBkaXN0cmlidXRpb24sIGFzc3VtZSBhbGwgZmxvb3JzIGluIDEuLmYgbm90IHJlYWNoZWQgYyB5ZXQgY2FuIHJlYWNoIGMgbm93LgoKICAgICAgICAgICAgICAgICAgICAgICAgaW50IHggPSBtaW4oZmxvb3IobiksIG4gLSBqKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNpbmNlIGZsb29ycyBhcmUgaW5kaXN0aW5ndWlzaGFibGUsIHN1bSBvdmVyIGsgZnJvbSAwIHRvIHggb2YgQyh4LGspID0gMl54CgogICAgICAgICAgICAgICAgICAgICAgICAvLyBCdXQgd2UgbXVzdCBjb25zaWRlciB0aGUgd2F5cyB0byBjaG9vc2UgayBmbG9vcnMgdG8gcmVhY2ggYyBhbmQgdXBkYXRlIGRwIGFjY29yZGluZ2x5CgogICAgICAgICAgICAgICAgICAgICAgICAvLyBBY3R1YWxseSwgZWRpdG9yaWFsIHNvbHV0aW9uIGlzOgogICAgICAgICAgICAgICAgICAgICAgICAvLyBkcFtpKzFdW2pdICs9IGRwW2ldW2pdICogZgogICAgICAgICAgICAgICAgICAgICAgICAvLyBkcFtpKzFdW2orMV0gKz0gZHBbaV1bal0gKiAobiAtIGopICogKG51bWJlciBvZiBmbG9vcnMgaW4gMS4uZiB0aGF0IGNhbiByZWFjaCBjKQoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhlIGVkaXRvcmlhbCBzb2x1dGlvbidzIERQIGlzIGNvbXBsZXgsIHNvIGhlcmUgd2UgaW1wbGVtZW50IGEgc2ltcGxlciBPKG4qbSkgc29sdXRpb246CgogICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGUgcHJvYmxlbSBpcyBlcXVpdmFsZW50IHRvIGNvdW50aW5nIHNlcXVlbmNlcyBmX2kgaW4gWzEuLm5dIHN1Y2ggdGhhdCBjb3ZlcmFnZVtqXSA+PSBjIGZvciBhbGwgai4KCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdlIGNhbiB1c2UgYSBjb21iaW5hdG9yaWFsIGZvcm11bGE6CgogICAgICAgICAgICAgICAgICAgICAgICAvLyBOdW1iZXIgb2Ygc2VxdWVuY2VzID0gbnVtYmVyIG9mIHdheXMgdG8gZGlzdHJpYnV0ZSBtIGxhdW5jaGVzIHdpdGggZWFjaCBsYXVuY2ggZmxvb3IgZiBpbiBbMS4ubl0sCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNvIHRoYXQgZm9yIGVhY2ggZmxvb3IgaiwgY291bnQgb2YgbGF1bmNoZXMgd2l0aCBmbG9vciA+PSBqID49IGMuCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIGlzIGVxdWl2YWxlbnQgdG8gY291bnRpbmcgbm9uLWluY3JlYXNpbmcgc2VxdWVuY2VzIGNvdmVyYWdlWzFdID49IGNvdmVyYWdlWzJdID49IC4uLiA+PSBjb3ZlcmFnZVtuXSA+PSBjIHdpdGggc3VtIGNvdmVyYWdlW2pdID0gbSArIG4qYwoKICAgICAgICAgICAgICAgICAgICA"]
[42.282378, "o", "gICAgLy8gVGhlIG51bWJlciBvZiBzdWNoIHNlcXVlbmNlcyBpcyBDKG0gLSAxLCBuIC0gMSkgaWYgbSA+PSBuKmMgZWxzZSAwCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBCdXQgd2UgbmVlZCB0byBwcm9kdWNlIHRoZSBleGFjdCBudW1iZXIgZm9yIHRoZSBwcm9ibGVtLgoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gRm9yIHRoaXMgcHJvYmxlbSwgYSBrbm93biBmb3JtdWxhIGlzOgogICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGUgYW5zd2VyIGlzIG51bWJlciBvZiBzZXF1ZW5jZXMgZl8xLi5mX20gd2l0aCBmX2kgaW4gWzEuLm5dLCBzdWNoIHRoYXQgY292ZXJhZ2Vbal0gPj0gYyBmb3IgYWxsIGouCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGUgbnVtYmVyIG9mIHN1Y2ggc2VxdWVuY2VzIGlzIGVxdWFsIHRvIG51bWJlciBvZiBjb21wb3NpdGlvbnMgb2YgbSBpbnRvIG4gcGFydHMgZWFjaCBhdCBsZWFzdCBjLAogICAgICAgICAgICAgICAgICAgICAgICAvLyB3aGljaCBpcyBDKG0gLSBuKmMgKyBuIC0gMSwgbiAtIDEpLgoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gQnV0IHNpbmNlIG0gPj0gbipjIGlzIG5vdCBndWFyYW50ZWVkLCB3ZSBtdXN0IGNoZWNrIGZlYXNpYmlsaXR5LgoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhlIHByb2JsZW0gc3RhdGVzIGMgPD0gbSA8PSBuKmMsIHNvIGZlYXNpYmxlIGlmIG0gPj0gbipjCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBXYWl0LCBjb25zdHJhaW50cyBzYXkgYyA8PSBtIDw9IG4qYywgc28gbSBjYW4gYmUgbGVzcyB0aGFuIG4qYy4KCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNvIGl0J3MgcG9zc2libGUgbm8gc2VxdWVuY2VzIGV4aXN0LgoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gSWYgbSA8IG4qYywgYW5zd2VyIGlzIDAuCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBJZiBtID49IG4qYywgYW5zd2VyIGlzIEMobSAtIG4qYyArIG4gLSAxLCBuIC0gMSkuCgogICAgICAgICAgICAgICAgICAgICAgICAvLyBMZXQncyBpbXBsZW1lbnQgdGhpcyBmb3JtdWxhLgoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gTW9kdWxhciBjb21iaW5hdG9yaWNzOgogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWMgdmVjdG9yPGxvbmcgbG9uZz4gZmFjdCgxMDAwMCArIDEwMCksIGludmZhY3QoMTAwMDAgKyAxMDApOwogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWMgYm9vbCBpbml0aWFsaXplZCA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWluaXRpYWxpemVkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnQgbWF4diA9IDEwMDAwICsgMTAwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFjdFswXSA9IDE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGludCBpID0gMTsgaSA8PSBtYXh2OyBpKyspIGZhY3RbaV0gPSBmYWN0W2ktMV0gKiBpICUgTU9EOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW52ZmFjdFttYXh2XSA9IDE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb25nIGxvbmcgYmFzZSA9IGZhY3RbbWF4dl07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBGZXJtYXQgaW52ZXJzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9uZyBsb25nIHAgPSBNT0QgLSAyOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9uZyBsb25nIHJlcyA9IDE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb25nIGxvbmcgY3VyID0gYmFzZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHAgJjEpIHJlcyA9IHJlcyAqIGN1ciAlIE1PRDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXIgPSBjdXIgKiBjdXIgJSBNT0Q7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcCA+Pj0xOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW52ZmFjdFttYXh2XSA9IHJlczsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaW50IGkgPSBtYXh2IC0gMTsgaSA+PTA7IGktLSkgaW52ZmFjdFtpXSA9IGludmZhY3RbaSsxXSAqIChpKzEpICUgTU9EOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5pdGlhbGl6ZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBhdXRvIGNvbWIgPSBbJl0oaW50IG5fLCBpbnQgcl8pIC0+IGxvbmcgbG9uZyB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocl8gPCAwIHx8IHJfID4gbl8pIHJldHVybiAwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhY3Rbbl9dICogaW52ZmFjdFtyX10gJSBNT0QgKiBpbnZmYWN0W25fLXJfXSAlIE1PRDsKICAgICAgICAgICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGxvbmcgbG9uZyBhbnMgPSAwOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAobSA+PSBuICogYykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5zID0gY29tYihtIC0gbiAqIGMgKyBuIC0gMSwgbiAtIDEpOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAg"]
[42.287643, "o", "ICAgICAgICAgICAgICAgICAgICAgYW5zID0gMDsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgY291dCA8PCBhbnMgJSBNT0QgPDwgJ1xuJzsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7IC8vIHNpbmNlIHdlIGhhdmUgdGhlIGFuc3dlciwgYnJlYWsgdGhlIGxvb3AKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICByZXR1cm4gMDsKfQo=' | base64 -d > /app/main.cpp; tmux wait -S done\r\n\u001b[?2004l\r"]
[42.322528, "o", "\u001b[?2004hroot@665a51f1b422:/app# "]
[168.182882, "i", "\u0004"]
[168.189402, "o", "\u001b[?2004l\r\r\nexit\r\n"]
