{
    "id": "f4310ce0-927f-4f27-8fb9-0ddcb849242a",
    "trial_name": "lcbpro-2120g.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2120g",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2120G)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nAryan loves graph theory more than anything. Well, no, he likes to flex his research paper on line graphs to everyone more. To start a conversation with you, he decides to give you a problem on line graphs. In the mathematical discipline of graph theory, the line graph of a simple undirected graph $G$ is another simple undirected graph $L(G)$ that represents the adjacency between every two edges in $G$.\n\nPrecisely speaking, for an undirected graph $G$ without self-loops or multiple edges, its line graph $L(G)$ is a graph such that\n\n- Each vertex of $L(G)$ represents an edge of $G$.\n- Two vertices of $L(G)$ are adjacent if and only if their corresponding edges share a common endpoint in $G$.\n\n![](https://espresso.codeforces.com/7c4456d69ec30bde9274559f9dca34dcf6879258.png)\n\nAlso, $L^0(G)=G$ and $L^k(G)=L(L^{k-1}(G))$ for $k\\geq 1$.\n\nAn Euler trail is a sequence of edges that visits every edge of the graph exactly once. This trail can be either a path (starting and ending at different vertices) or a cycle (starting and ending at the same vertex). Vertices may be revisited during the trail, but each edge must be used exactly once.\n\nAryan gives you a simple connected graph $G$ with $n$ vertices and $m$ edges and an integer $k$, and it is guaranteed that $G$ has an Euler trail and it is not a path graph$^{\\text{∗}}$. He asks you to determine if $L^k(G)$ has an Euler trail.\n\n$^{\\text{∗}}$A path graph is a tree where every vertex is connected to atmost two other vertices.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains three space-separated integers $n$, $m$, and $k$ ($5 \\le n \\le 2 \\cdot 10^5$, $n-1 \\le m \\le \\min(\\frac{n\\cdot(n-1)}{2} ,2 \\cdot 10^5)$, $1 \\le k \\le 2 \\cdot 10^5$).\n\nThe next $m$ lines of each test case contain two space-separated integers $u$ and $v$ ($1 \\le u,v \\le n$, $u \\neq v$), denoting that an edge connects vertices $u$ and $v$.\n\nIt is guaranteed that the sum of $n$ and $m$ over all test cases does not exceed $2\\cdot 10^5$.\n\n### Output\n\nFor each testcase, print \"YES\" if $L^k(G)$ has an Euler trail; otherwise, \"NO\".\n\nYou can output the answer in any case (upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive responses.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n5 5 2\n\n1 2\n\n2 3\n\n3 4\n\n4 5\n\n5 1\n\n5 6 1\n\n1 2\n\n2 3\n\n3 4\n\n4 5\n\n5 1\n\n1 3\n\n10 11 3\n\n1 2\n\n2 3\n\n3 4\n\n4 5\n\n4 6\n\n4 7\n\n5 7\n\n6 7\n\n7 8\n\n8 9\n\n9 10\n\n7 8 2\n\n1 3\n\n2 3\n\n1 4\n\n4 5\n\n2 5\n\n1 6\n\n6 7\n\n2 7\n\n```\n\n#### Output #1\n\n```\nYES\nNO\nYES\nNO\n```\n\n### Note\n\nFor the first test case, $L^2(G)$ is isomorphic to $G$ itself. So, since $G$ has an Euler trail, $L^2(G)$ also has an Euler trail.\n\nFor the second test case, $L(G)$ looks as follows(Vertex $i-j$ of $L(G)$ in figure corresponds to edge between vertices $i$ and $j$ of $G$). It can be proven that this doesn't have an Euler trail.\n\n![](https://espresso.codeforces.com/b376c533b0c565921bd0995db02694519661b79c.png)",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2120g/lcbpro-2120g.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1401,
    "total_output_tokens": 1856,
    "trial_started_at": "2025-09-06T01:24:48.689375+00:00",
    "trial_ended_at": "2025-09-06T01:26:02.765638+00:00",
    "agent_started_at": "2025-09-06T01:25:05.687918+00:00",
    "agent_ended_at": "2025-09-06T01:25:36.501036+00:00",
    "test_started_at": "2025-09-06T01:25:40.955713+00:00",
    "test_ended_at": "2025-09-06T01:25:45.036298+00:00"
}