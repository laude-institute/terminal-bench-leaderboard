{
    "id": "5d640ab2-2a07-4cef-85bd-bb47d7732acd",
    "trial_name": "lcbpro-2006f.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2006f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2006F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nSadly, Dora poured the paint when painting the class mural. Dora considers the mural as the matrix $b$ of size $n \\times n$. Initially, $b_{i,j} = 0$ for all $1 \\le i, j \\le n$.\n\nDora has only two brushes which have two different colors. In one operation, she can paint the matrix with one of two brushes:\n\n- The first brush has color $1$ on it and can paint one column of the matrix. That is, Dora chooses $1 \\leq j \\leq n$ and makes $b_{i,j} := 1$ for all $1 \\leq i \\leq n$;\n- The second brush has color $2$ on it and can paint one row of the matrix. That is, Dora chooses $1 \\leq i \\leq n$ and makes $b_{i,j} := 2$ for all $1 \\leq j \\leq n$.\n\nDora paints the matrix so that the resulting matrix $b$ contains only $1$ and $2$.\n\nFor a matrix $b$, let $f(b)$ denote the minimum number of operations needed to turn the initial matrix (containing only $0$) into $b$. The beauty of a matrix $b$ is the number of ways to paint the initial matrix in exactly $f(b)$ operations to turn it into $b$. If there's no way to turn the initial matrix into $b$, the beauty of $b$ is $0$.\n\nHowever, Dora made a uniformly random mistake; there's exactly one element different in the matrix $a$ given to you from the real matrix $b$. That is, there is exactly one pair $(i, j)$ such that $a_{i, j} = 3 - b_{i, j}$.\n\nPlease help Dora compute the expected beauty of the real matrix $b$ modulo $998\\,244\\,353$ (all possible $n^2$ mistakes have equal probability).\n\nSince the size of the matrix is too large, Dora will only tell you the positions of $m$ elements of color $1$, and the remaining $n^2-m$ elements have color $2$.\n\n### Input\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) -- the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $m$ ($2 \\leq n \\leq 2 \\cdot 10^5$, $0 \\leq m \\leq \\min(10^6, n^2)$) -- the size of the matrix and the number of elements of color $1$.\n\nThen $m$ lines follow, each containing two positive integers $x_i$ and $y_i$ ($1 \\leq x_i, y_i \\leq n$) -- denoting that $a_{x_i, y_i} = 1$.\n\nIt is guaranteed that if $i \\neq j$, then $(x_i, y_i) \\neq (x_j, y_j)$.\n\nIt is also guaranteed that the sum of $n$ over all test cases does not exceed $4\\cdot10^5$, and the sum of $m$ over all test cases does not exceed $10^6$.\n\n### Output\n\nFor each test case, output a single integer -- the expected beauty of the real matrix $b$, modulo $998\\,244\\,353$.\n\n### Example\n\n#### Input #1\n\n```\n\n7\n\n2 2\n\n1 1\n\n1 2\n\n2 1\n\n1 1\n\n3 2\n\n1 1\n\n3 3\n\n6 0\n\n5 10\n\n1 1\n\n1 2\n\n1 3\n\n2 1\n\n2 3\n\n5 1\n\n5 2\n\n5 3\n\n5 4\n\n5 5\n\n3 5\n\n1 1\n\n1 3\n\n2 2\n\n3 1\n\n3 3\n\n4 3\n\n1 1\n\n2 3\n\n2 4\n\n```\n\n#### Output #1\n\n```\n1\n499122178\n665496236\n120\n79859554\n776412275\n1\n```\n\n### Note\n\nIn the first test case, the matrix $a = \\left[\\begin{matrix}1&1\\\\2&2\\end{matrix}\\right]$. Let's consider changing the element $(1,1)$ to calculate the answer.\n\nIt can be proved that the minimum steps to paint the initial matrix into $\\left[\\begin{matrix}2&1\\\\2&2\\end{matrix}\\right]$ is $3$. We can first paint the first row into color $2$, then paint the second column into color $1$, and finally paint the second row into color $2$. The process is listed below:\n\n\n\n$$\\left[\\begin{matrix}0&0\\\\0&0\\end{matrix}\\right]\\Rightarrow\\left[\\begin{matrix}2&2\\\\0&0\\end{matrix}\\right]\\Rightarrow\\left[\\begin{matrix}2&1\\\\0&1\\end{matrix}\\right]\\Rightarrow\\left[\\begin{matrix}2&1\\\\2&2\\end{matrix}\\right]$$\n\nIt can be proved that this is the only way to paint the matrix in $3$ steps. So the beauty of the matrix $\\left[\\begin{matrix}2&1\\\\2&2\\end{matrix}\\right]$ is $1$. Similarly, if any other element of the matrix is changed, the beauty is always $1$, so the expected beauty of the real matrix $b$ is $1$.\n\nIn the second test case, the matrix $a = \\left[\\begin{matrix}1&2\\\\2&2\\end{matrix}\\right]$. Let's consider changing the element $(2, 2)$ to calculate the answer.\n\nIt can be proven that it's impossible to paint the initial matrix into $\\left[\\begin{matrix}1&2\\\\2&1\\end{matrix}\\right]$, so its beauty is $0$. If any other element of the matrix is changed, the beauty is always $2$, so the expected beauty is $\\frac{0 + 2 + 2 + 2}{4} = \\frac{6}{4} \\equiv 499\\,122\\,178 \\pmod {998\\,244\\,353}$.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2006f/lcbpro-2006f.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1794,
    "total_output_tokens": 843,
    "trial_started_at": "2025-09-06T01:45:25.006373+00:00",
    "trial_ended_at": "2025-09-06T01:46:19.097963+00:00",
    "agent_started_at": "2025-09-06T01:45:42.511556+00:00",
    "agent_ended_at": "2025-09-06T01:45:55.772177+00:00",
    "test_started_at": "2025-09-06T01:45:58.858191+00:00",
    "test_ended_at": "2025-09-06T01:46:02.591229+00:00"
}