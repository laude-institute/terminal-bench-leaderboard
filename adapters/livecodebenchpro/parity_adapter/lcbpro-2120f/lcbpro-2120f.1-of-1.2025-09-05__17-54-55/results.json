{
    "id": "e9914f4a-ce1b-4353-a188-6ad173d48fdf",
    "trial_name": "lcbpro-2120f.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2120f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2120F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nAs we all know, Aryan is a funny guy. He decides to create fun graphs. For a graph $G$, he defines fun graph $G'$ of $G$ as follows:\n\n- Every vertex $v'$ of $G'$ maps to a non-empty independent set$^{\\text{∗}}$ or clique$^{\\text{†}}$ in $G$.\n- The sets of vertices of $G$ that the vertices of $G'$ map to are pairwise disjoint and combined cover all the vertices of $G$, i.e., the sets of vertices of $G$ mapped by vertices of $G'$ form a partition of the vertex set of $G$.\n- If an edge connects two vertices $v_1'$ and $v_2'$ in $G'$, then there is an edge between every vertex of $G$ in the set mapped to $v_1'$ and every vertex of $G$ in the set mapped to $v_2'$.\n- If an edge does not connect two vertices $v_1'$ and $v_2'$ in $G'$, then there is not an edge between any vertex of $G$ in the set mapped to $v_1'$ and any vertex of $G$ in the set mapped to $v_2'$.\n\nAs we all know again, Harshith is a superb guy. He decides to use fun graphs to create his own superb graphs. For a graph $G$, a fun graph $G' '$ is called a superb graph of $G$ if $G' '$ has the minimum number of vertices among all possible fun graphs of $G$.\n\nAryan gives Harshith $k$ simple undirected graphs$^{\\text{‡}}$ $G_1, G_2,\\ldots,G_k$, all on the same vertex set $V$. Harshith then wonders if there exist $k$ other graphs $H_1, H_2,\\ldots,H_k$, all on some other vertex set $V'$ such that:\n\n- $G_i$ is a superb graph of $H_i$ for all $i\\in \\{1,2,\\ldots,k\\}$.\n- If a vertex $v\\in V$ maps to an independent set of size greater than $1$ in one $G_i, H_i$ ($1\\leq i\\leq k$) pair, then there exists no pair $G_j, H_j$ ($1\\leq j\\leq k, j\\neq i$) where $v$ maps to a clique of size greater than $1$.\n\nHelp Harshith solve his wonder.\n\n$^{\\text{∗}}$For a graph $G$, a subset $S$ of vertices is called an independent set if no two vertices of $S$ are connected with an edge.\n\n$^{\\text{†}}$For a graph $G$, a subset $S$ of vertices is called a clique if every vertex of $S$ is connected to every other vertex of $S$ with an edge.\n\n$^{\\text{‡}}$A graph is a simple undirected graph if its edges are undirected and there are no self-loops or multiple edges between the same pair of vertices.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 100$). The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $k$ ($1\\leq n\\leq 300, 1\\leq k\\leq 10$).\n\nThen, there are $k$ graphs described. The first line of each graph description contains a single integer $m$ ($0\\leq m\\leq \\frac{n\\cdot(n-1)}{2} $).\n\nNext $m$ lines each contain two space-separated integers $u$ and $v$ ($1\\leq u, v\\leq n, u\\neq v$), denoting that an edge connects vertices $u$ and $v$.\n\nIt is guaranteed that the sum of $m$ over all graphs over all test cases does not exceed $2\\cdot 10^5$, and the sum of $n$ over all test cases does not exceed $300$.\n\n### Output\n\nFor each testcase, print \"Yes\" if there exists $k$ graphs satisfying the conditions; otherwise, \"No\".\n\nYou can output the answer in any case (upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive responses.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n5 2\n\n3\n\n3 4\n\n5 3\n\n5 1\n\n6\n\n3 5\n\n3 4\n\n1 4\n\n1 2\n\n2 3\n\n4 2\n\n4 3\n\n0\n\n3\n\n3 1\n\n1 4\n\n1 2\n\n4\n\n4 2\n\n4 3\n\n1 2\n\n2 3\n\n3 2\n\n0\n\n3\n\n3 1\n\n3 2\n\n1 2\n\n```\n\n#### Output #1\n\n```\nYes\nYes\nNo\n```\n\n### Note\n\nFor the first test case, the following are the graphs of $G_1, H_1$ and $G_2, H_2$ such that $G_1$ is superb graph of $H_1$ and $G_2$ is superb graph of $H_2$.\n\n![](https://espresso.codeforces.com/452753955813c595256b6b1fee9c2f4329c082e5.png)\n\nIn each graph, vertex $2$ of $G_i$ corresonds to independent set $\\{2\\_1, 2\\_2\\}$ of corresponding $H_i$ and remaining vertices $v\\in\\{1,3,4,5\\}$ of $G_i$ correspond to independent set/clique $\\{v\\}$ in corresponding $H_i$(a single vertex set can be considered both an independent set and a clique).\n\nIn the third test case, it can be proven that the answer is \"No\".",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2120f/lcbpro-2120f.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1728,
    "total_output_tokens": 2169,
    "trial_started_at": "2025-09-06T01:04:20.869606+00:00",
    "trial_ended_at": "2025-09-06T01:07:30.226275+00:00",
    "agent_started_at": "2025-09-06T01:04:33.814264+00:00",
    "agent_ended_at": "2025-09-06T01:05:04.918218+00:00",
    "test_started_at": "2025-09-06T01:05:07.899015+00:00",
    "test_ended_at": "2025-09-06T01:07:12.503099+00:00"
}