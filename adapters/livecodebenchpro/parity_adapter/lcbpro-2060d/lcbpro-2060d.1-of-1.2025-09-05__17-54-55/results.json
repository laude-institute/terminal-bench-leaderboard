{
    "id": "1e33e89b-5174-4593-8ed4-4e85affd63cc",
    "trial_name": "lcbpro-2060d.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2060d",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2060D)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given a sequence $a$ consisting of $n$ positive integers.\n\nYou can perform the following operation any number of times.\n\n- Select an index $i$ ($1 \\le i < n$), and subtract $\\min(a_i,a_{i+1})$ from both $a_i$ and $a_{i+1}$.\n\nDetermine if it is possible to make the sequence non-decreasing by using the operation any number of times.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($2 \\le n \\le 2 \\cdot 10^5$).\n\nThe second line of each test case contains $a_1,a_2,\\ldots,a_n$ ($1 \\le a_i \\le 10^9$).\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nIf it is possible to make the sequence non-decreasing, print \"YES\" on a new line. Otherwise, print \"NO\" on a new line.\n\nYou can output the answer in any case. For example, the strings \"yEs\", \"yes\", and \"Yes\" will also be recognized as positive responses.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n5\n\n1 2 3 4 5\n\n4\n\n4 3 2 1\n\n4\n\n4 5 2 3\n\n8\n\n4 5 4 5 4 5 4 5\n\n9\n\n9 9 8 2 4 4 3 5 3\n\n```\n\n#### Output #1\n\n```\nYES\nNO\nYES\nYES\nNO\n```\n\n### Note\n\nIn the first test case, the array is already sorted.\n\nIn the second test case, we can show that it is impossible.\n\nIn the third test case, after performing an operation on $i=1$, the array becomes $[0,1,2,3]$, which is now in nondecreasing order.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2060d/lcbpro-2060d.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 878,
    "total_output_tokens": 493,
    "trial_started_at": "2025-09-06T01:40:01.345982+00:00",
    "trial_ended_at": "2025-09-06T01:40:48.221137+00:00",
    "agent_started_at": "2025-09-06T01:40:15.062345+00:00",
    "agent_ended_at": "2025-09-06T01:40:26.771052+00:00",
    "test_started_at": "2025-09-06T01:40:29.308914+00:00",
    "test_ended_at": "2025-09-06T01:40:32.349421+00:00"
}