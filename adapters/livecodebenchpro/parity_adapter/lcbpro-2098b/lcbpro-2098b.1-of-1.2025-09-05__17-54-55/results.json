{
    "id": "37e8daa3-bc5e-4205-837c-b40bd76860c6",
    "trial_name": "lcbpro-2098b.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2098b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2098B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nSasha wants to buy an apartment on a street where the houses are numbered from $1$ to $10^9$ from left to right.\n\nThere are $n$ bars on this street, located in houses with numbers $a_1, a_2, \\ldots, a_n$. Note that there might be multiple bars in the same house, and in this case, these bars are considered distinct.\n\nSasha is afraid that by the time he buys the apartment, some bars may close, but no more than $k$ bars can close.\n\nFor any house with number $x$, define $f(x)$ as the sum of $|x - y|$ over all open bars $y$ (that is, after closing some bars).\n\nSasha can potentially buy an apartment in a house with number $x$ (where $1 \\le x \\le 10^9$) if and only if it is possible to close at most $k$ bars so that after that $f(x)$ becomes minimal among all houses.\n\nDetermine how many different houses Sasha can potentially buy an apartment in.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $k$ ($1 \\leq n \\leq 10^5, 0 \\leq k < n$) -- the number of bars and the maximum number of bars that can close.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^9$) -- the house numbers where the bars are located.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n### Output\n\nFor each test case, output a single integer -- the number of houses where Sasha can buy an apartment.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n4 0\n\n1 2 3 4\n\n5 2\n\n7 6 6 7 1\n\n3 1\n\n6 7 9\n\n6 2\n\n5 1 9 10 13 2\n\n```\n\n#### Output #1\n\n```\n2\n2\n4\n9\n```\n\n### Note\n\nIn the first test case, none of the bars can close, so only houses numbered $2$ and $3$ are suitable. For the house numbered $2$, the sum of distances is $|2 - 1| + |2 - 2| + |2 - 3| + |2 - 4| = 4$, and for the house numbered $3$, the sum of distances is $|3 - 1| + |3 - 2| + |3 - 3| + |3 - 4| = 4$. However, for the house numbered $1$, the sum of distances will be $|1 - 1| + |1 - 2| + |1 - 3| + |1 - 4| = 6$, so the house numbered $1$ is not suitable. It can also be proven that Sasha cannot buy apartments in other houses.\n\nIn the second test case, the suitable houses are numbered $6$ and $7$. For Sasha to choose the house numbered $6$, it is sufficient that none of the bars close. For Sasha to choose the house numbered $7$, the bars in houses $1$ and $6$ can close. Then the bars will be located in houses numbered $6$, $7$, and $7$.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2098b/lcbpro-2098b.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1193,
    "total_output_tokens": 1064,
    "trial_started_at": "2025-09-06T01:25:49.849665+00:00",
    "trial_ended_at": "2025-09-06T01:27:05.206559+00:00",
    "agent_started_at": "2025-09-06T01:26:14.343346+00:00",
    "agent_ended_at": "2025-09-06T01:26:32.616127+00:00",
    "test_started_at": "2025-09-06T01:26:35.602073+00:00",
    "test_ended_at": "2025-09-06T01:26:41.077776+00:00"
}