{
    "id": "d3ee5822-6080-48ea-954d-94fa5471479e",
    "trial_name": "lcbpro-2056e.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2056e",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2056E)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nA set $A$ consisting of pairwise distinct segments $[l, r]$ with integer endpoints is called good if $1\\le l\\le r\\le n$, and for any pair of distinct segments $[l_i, r_i], [l_j, r_j]$ in $A$, exactly one of the following conditions holds:\n\n- $r_i < l_j$ or $r_j < l_i$ (the segments do not intersect)\n- $l_i \\le l_j \\le r_j \\le r_i$ or $l_j \\le l_i \\le r_i \\le r_j$ (one segment is fully contained within the other)\n\nYou are given a good set $S$ consisting of $m$ pairwise distinct segments $[l_i, r_i]$ with integer endpoints. You want to add as many additional segments to the set $S$ as possible while ensuring that set $S$ remains good.\n\nSince this task is too easy, you need to determine the number of different ways to add the maximum number of additional segments to $S$, ensuring that the set remains good. Two ways are considered different if there exists a segment that is being added in one of the ways, but not in the other.\n\nFormally, you need to find the number of good sets $T$ of distinct segments, such that $S$ is a subset of $T$ and $T$ has the maximum possible size. Since the result might be very large, compute the answer modulo $998\\,244\\,353$.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $m$ ($1 \\le n \\le 2 \\cdot 10^5$, $0 \\le m \\le 2 \\cdot 10^5$) -- the maximum right endpoint of the segments, and the size of $S$.\n\nThe $i$-th of the next $m$ lines contains two integers $l_i$ and $r_i$ ($1 \\le l_i \\le r_i \\le n$) -- the boundaries of the segments in set $S$.\n\nIt is guaranteed that the given set $S$ is good, and the segments in set $S$ are pairwise distinct.\n\nIt is guaranteed that both the sum of $n$ and the sum of $m$ over all test cases do not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output a single integer representing the number of different ways, modulo $998\\,244\\,353$, that you can add the maximum number of additional segments to set $S$ while ensuring that set $S$ remains good.\n\n### Example\n\n#### Input #1\n\n```\n\n6\n\n1 0\n\n2 3\n\n1 1\n\n2 2\n\n1 2\n\n5 2\n\n1 3\n\n2 3\n\n4 1\n\n1 1\n\n6 2\n\n1 3\n\n4 6\n\n2300 0\n\n```\n\n#### Output #1\n\n```\n1\n1\n2\n5\n4\n187997613\n```\n\n### Note\n\nIn the first example, the only possible segment is $[1, 1]$, so $T = \\{[1, 1]\\}$ has the maximum size, and it is the only solution.\n\nIn the second example, it is not possible to add any additional segments to set $S$. Hence, the only way to add segments to $S$ is adding nothing.\n\nIn the third example, it is possible to add $7$ additional segments to $S$ while ensuring that the set remains good. It can be proven that adding more than $7$ additional segments to $S$ is not possible. There are exactly $2$ different ways to add these $7$ segments to $S$, and their respective sets $T$ are shown below:\n\n- $\\{[1, 1], [1, 3], [1, 4], [1, 5], [2, 2], [2, 3], [3, 3], [4, 4], [5, 5]\\}$\n- $\\{[1, 1], [1, 3], [1, 5], [2, 2], [2, 3], [3, 3], [4, 4], [4, 5], [5, 5]\\}$.\n\nIn the fourth example, there are exactly $5$ different ways to add a maximum of $6$ additional segments to $S$, and their respective sets $T$ are shown below:\n\n- $\\{[1, 1], [1, 2], [1, 3], [1, 4], [2, 2], [3, 3], [4, 4]\\}$\n- $\\{[1, 1], [1, 2], [1, 4], [2, 2], [3, 3], [3, 4], [4, 4]\\}$\n- $\\{[1, 1], [1, 3], [1, 4], [2, 2], [2, 3], [3, 3], [4, 4]\\}$\n- $\\{[1, 1], [1, 4], [2, 2], [2, 3], [2, 4], [3, 3], [4, 4]\\}$\n- $\\{[1, 1], [1, 4], [2, 2], [2, 4], [3, 3], [3, 4], [4, 4]\\}$",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2056e/lcbpro-2056e.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1651,
    "total_output_tokens": 1889,
    "trial_started_at": "2025-09-06T00:54:57.799033+00:00",
    "trial_ended_at": "2025-09-06T00:56:11.052810+00:00",
    "agent_started_at": "2025-09-06T00:55:14.063179+00:00",
    "agent_ended_at": "2025-09-06T00:55:41.205472+00:00",
    "test_started_at": "2025-09-06T00:55:44.502958+00:00",
    "test_ended_at": "2025-09-06T00:55:49.066941+00:00"
}