root@1ef1c840428d:/app# echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CnVzaW5nIGxsID0gbG9uZyBsb25nOwoKY29uc3QgaW50IE1PRCA9IDFlOSArIDc7CgovLy
BGYXN0IG1vZHVsYXIgZXhwb25lbnRpYXRpb24KbGwgbW9kcG93KGxsIGJhc2UsIGxsIGV4cCwgbGwgbW9kKSB7CiAgICBsbCByZXN1bHQgPSAxOwogICAgd2hpbGUgKGV4cCA+IDApIHsKICAgICAgICBpZiAoZX
hwICYgMSkgcmVzdWx0ID0gKHJlc3VsdCAqIGJhc2UpICUgbW9kOwogICAgICAgIGJhc2UgPSAoYmFzZSAqIGJhc2UpICUgbW9kOwogICAgICAgIGV4cCA+Pj0gMTsKICAgIH0KICAgIHJldHVybiByZXN1bHQ7Cn
0KCi8vIENhbGN1bGF0ZSBzdW0gb2YgZGl2aXNvcnMgZnVuY3Rpb24gc2lnbWFfMShtKSBtb2QgTU9ECi8vIFVzaW5nIHByaW1lIGZhY3Rvcml6YXRpb246IHNpZ21hXzEobSkgPSBwcm9kdWN0IG92ZXIgcF5hIG
9mIChwXnthKzF9LTEpLyhwLTEpCi8vIFdlIHdpbGwgZmFjdG9yIG0gdXNpbmcgdHJpYWwgZGl2aXNpb24gKG0gdXAgdG8gMWU5XmsgaXMgaHVnZSwgYnV0IHdlIG5ldmVyIGZhY3RvciBpXmsgZGlyZWN0bHkpCi
8vIE5vdGljZSB0aGF0IGYobiwgZCkgPSBudW1iZXIgb2YgbGVhdmVzIGluIFRfe24sIGR9ID0gbnVtYmVyIG9mIGRpdmlzb3JzIG9mIG5eZAovLyBCZWNhdXNlIGZyb20gbGF5ZXIgMCB0byBkLCBlYWNoIHN0ZX
AgcmVwbGFjZXMgbm9kZSB3aXRoIGRpdmlzb3JzIG9mIHRoYXQgbnVtYmVyLAovLyBTbyBhdCBsYXllciBkLCBsZWF2ZXMgYXJlIGRpdmlzb3JzIG9mIG5eZC4KLy8gTnVtYmVyIG9mIGRpdmlzb3JzIG9mIG5eZC
A9IHByb2R1Y3Qgb3ZlciBwcmltZSBwIG9mICgoYV9wICogZCkgKyAxKSwgd2hlcmUgYV9wIGlzIGV4cG9uZW50IG9mIHAgaW4gbi4KLy8gVGh1cyBmKGleaywgZCkgPSBudW1iZXIgb2YgZGl2aXNvcnMgb2YgaV
57aypkfSA9IHByb2R1Y3Qgb3ZlciBwIG9mIChhX3AgKiBrICogZCArIDEpCi8vIFdlIG5lZWQgc3VtX3tpPTF9Xm4gZihpXmssZCkgbW9kIE1PRAoKLy8gU28gd2UgbmVlZCB0byBzdW0gb3ZlciBpPTEgdG8gbi
B0aGUgcHJvZHVjdCBvZiAoZXhwb25lbnRfcChpKSprKmQgKyAxKQovLyBUaGlzIGlzIG11bHRpcGxpY2F0aXZlIGZ1bmN0aW9uIGluIGkuCi8vIFByb2JsZW0gcmVkdWNlcyB0byBzdW0gb3ZlciBpPTEuLm4gb2
YgZyhpKSwgd2hlcmUgZyhpKSA9IGYoaV5rLGQpLCBtdWx0aXBsaWNhdGl2ZSB3aXRoIGcocF5lKSA9IChlKmsqZCArIDEpCgovLyBXZSBjYW4gc29sdmUgdXNpbmcgYSBzdGFuZGFyZCB0ZWNobmlxdWUgZm9yIH
N1bSBvZiBtdWx0aXBsaWNhdGl2ZSBmdW5jdGlvbnMgdXNpbmcgcHJpbWUgZmFjdG9yaXphdGlvbiBhbmQgRFAuCgovLyBXZSB3aWxsIGRvIHRoZSBzdW0gdXNpbmcgYSBzaWV2ZSBhbmQgYSBEUCBhcHByb2FjaC
Bmb3IgbXVsdGlwbGljYXRpdmUgZnVuY3Rpb25zOgovLyBMZXQgRyhuKSA9IHN1bV97aT0xfV5uIGcoaSkKLy8gV2UgdXNlIGEgbGluZWFyIHNpZXZlIHVwIHRvIG1heCBuIGluIGFsbCB0ZXN0IGNhc2VzIHRvIH
ByZWNvbXB1dGUgcHJpbWVzIGFuZCBwcmVmaXggc3VtcwoKLy8gQnV0IG4gY2FuIGJlIHVwIHRvIDFlOSwgdG9vIGxhcmdlIGZvciBzaWV2ZS4KLy8gU28gd2UgdXNlIGEga25vd24gYXBwcm9hY2ggZm9yIG11bH
RpcGxpY2F0aXZlIGZ1bmN0aW9ucyBzdW0gd2l0aCBsYXJnZSBuOgovLyBVc2UgdGhlIHByaW1lIHNpZXZpbmcgd2l0aCBzZWdtZW50ZWQgc2lldmUgb3IgYSByZWN1cnNpdmUgZm9ybXVsYS4KCi8vIEhvd2V2ZX
IsIHNpbmNlIGsgYW5kIGQgYXJlIGdpdmVuLCBmKGleayxkKSA9IG51bWJlcl9vZl9kaXZpc29ycyhpXntrKmR9KQovLyA9IHByb2R1Y3Qgb3ZlciBwcmltZXMgcCBkaXZpZGluZyBpIG9mIChleHBvbmVudF9wKG
kpKmsqZCArIDEpCgovLyBUaGUgbnVtYmVyX29mX2Rpdmlzb3JzIGZ1bmN0aW9uIGlzIG11bHRpcGxpY2F0aXZlIHdpdGggZGl2aXNvciBmdW5jdGlvbiB0YXUoaV57aypkfSkKLy8gYW5kIHRhdShuKSBmb3Igbj
1wMV5lMSouLi4gaXMgcHJvZHVjdCAoZV9pICsgMSkKCi8vIFNvIGYoaV5rLGQpID0gdGF1KGlee2sqZH0pID0gcHJvZHVjdCBvdmVyIHAgKGV4cG9uZW50X3AoaSkqaypkICsgMSkKCi8vIHRhdShpKSBpcyB3ZW
xsLWtub3duIG51bWJlciBvZiBkaXZpc29ycyBmdW5jdGlvbiwgYW5kIHN1bV97aT0xfV5uIHRhdShpKSBjYW4gYmUgY29tcHV0ZWQgZWZmaWNpZW50bHkgd2l0aCBPKHNxcnQobikpIHVzaW5nIGEgZGl2aXNvci
BzdW0gZm9ybXVsYS4KCi8vIEZvciB0YXUoaV57aypkfSksIGl0IGVxdWFscyBudW1iZXJfb2ZfZGl2aXNvcnMoaV57aypkfSkgPSB0YXVfe2sqZH0oaSksIHdoZXJlIHRhdV97bX0oaSkgPSBudW1iZXIgb2YgZG
l2aXNvcnMgb2YgaV5tID0gcHJvZHVjdCBvdmVyIHAgKGVfaSAqIG0gKyAxKQoKLy8gU28gc3VtX3tpPTF9Xm4gdGF1X3ttfShpKSA9ID8KCi8vIEZvciBtPTEsIHN1bV97aT0xfV5uIHRhdShpKSA9IHN1bSBvZi
BkaXZpc29ycyBjb3VudCwgd2VsbC1rbm93biB0byBiZSBhYm91dCBPKHNxcnQobikpIGNvbXB1dGFibGUuCgovLyBGb3IgZ2VuZXJhbCBtLCBzdW1fe2k9MX1ebiB0YXVfbShpKSA9IHN1bV97aT0xfV5uIHByb2
R1Y3Qgb3ZlciBwIChlX2kgKiBtICsxKQoKLy8gSXQgY2FuIGJlIHNob3duIHRhdV9tKGkpID0gc3VtX3tkfGl9IGRee20tMX0gKHNlZSBkaXZpc29yIGZ1bmN0aW9uIGdlbmVyYWxpemF0aW9ucykKCi8vIEJ1dC
BsZXQncyB2ZXJpZnk6Ci8vIHRhdV9tKG4pID0gbnVtYmVyIG9mIGRpdmlzb3JzIG9mIG5ebSA9IHByb2R1Y3QgKGVfaSAqIG0gKyAxKQoKLy8gQWN0dWFsbHkgdGF1X20obikgPSBzdW1fe2R8bn0gZF57MH0gPS
B0YXUobiksIGJ1dCByYWlzZWQgcG93ZXIgbSBjaGFuZ2VzIGV4cG9uZW50cy4KCi8vIEFsdGVybmF0aXZlbHksIGNvbnNpZGVyIG11bHRpcGxpY2F0aXZlIGZ1bmN0aW9uOgovLyB0YXVfbShuKSA9IHByb2R1Y3
Rfe3BeZSB8fCBufSAobSplICsgMSkKCi8vIFN1bV97aT0xfV5uIHRhdV9tKGkpIGNhbiBiZSBjb21wdXRlZCBieSBhIGtub3duIGZvcm11bGE6Ci8vIHN1bV97aT0xfV5uIHRhdV9tKGkpID0gc3VtX3thPTF9Xm
4gc3VtX3tiPTF9Xm4gLi4uIChtIHRpbWVzKSAxIGlmIHByb2R1Y3Qgb2YgYWxsIHZhcmlhYmxlcyA9IGkKCi8vIExldCdzIHRyeSBzbWFsbGVyIGFwcHJvYWNoOgovLyBMZXQgZyhpKSA9IHRhdV97bX0oaSkgPS
BudW1iZXIgb2YgZGl2aXNvcnMgb2YgaV57bX0KCi8vIFRoZW4gc3VtX3tpPTF9Xm4gZyhpKSA9IHN1bV97aT0xfV5uIHByb2R1Y3Rfe3BeZXx8aX0gKG0qZSArIDEpCgovLyBXZSBjYW4gd3JpdGUgZyhpKSA9IH
N1bV97ZHxpfSBmKGQpIGZvciBzb21lIGZ1bmN0aW9uIGY/CgovLyBMZXQncyB0cnkgdG8gZXhwcmVzcyBnKGkpIGluIHRlcm1zIG9mIGNvbnZvbHV0aW9uOgovLyBnKGkpID0gKDEgKiAxICogLi4uICogMSkoaS
ksIG0rMSB0aW1lcz8gTm90IGV4YWN0bHkuCgovLyBBY3R1YWxseSwgdGF1KGkpIGlzIG11bHRpcGxpY2F0aXZlIGFuZCBlcXVhbHMgdGhlIERpcmljaGxldCBjb252b2x1dGlvbiBvZiAxKjEKLy8gdGF1X20oaS
kgPSA/CgovLyBCdXQgd2UgY2FuIHVzZSB0aGUgZmFjdCB0aGF0IHRhdV9tID0gdGF1XnsqbX0sIG0tZm9sZCBjb252b2x1dGlvbiBvZiAxIHdpdGggaXRzZWxmLgoKLy8gQWN0dWFsbHksIHRhdV9tKGkpID0gbn
VtYmVyIG9mIHdheXMgdG8gd3JpdGUgaSBhcyBwcm9kdWN0IG9mIG0rMSBmYWN0b3JzLgoKLy8gU28gc3VtX3tpPTF9Xm4gdGF1X20oaSkgPSBzdW0gb3ZlciBhbGwgKHgxLHgyLC4uLix4X3ttKzF9KSB3aXRoIH
Byb2R1Y3QgPD0gbiBvZiAxCgovLyBUaGF0IGlzIHRoZSBjb3VudCBvZiAobSsxKS10dXBsZXMgb2YgcG9zaXRpdmUgaW50ZWdlcnMgd2l0aCBwcm9kdWN0IDw9IG4uCgovLyBTbyBwcm9ibGVtIHJlZHVjZXMgdG
8gY291bnRpbmcgbnVtYmVyIG9mIChtKzEpLXR1cGxlcyBvZiBwb3NpdGl2ZSBpbnRlZ2VycyB3aXRoIHByb2R1Y3QgPD0gbi4KCi8vIE91ciBtID0gaypkCgovLyBTbyBmb3IgZWFjaCB0ZXN0IGNhc2UsIHdlIH
dhbnQgdG8gY29tcHV0ZSBzdW1fe2k9MX1ebiB0YXVfe2sqZH0oaSkgPSBudW1iZXIgb2YgKGsqZCsxKS10dXBsZXMgKHgxLC4uLix4X3trKmQrMX0pIHdpdGggcHJvZHVjdCA8PSBuCgovLyBUaGlzIGNhbiBiZS
Bkb25lIHdpdGggYSByZWN1cnNpdmUgb3IgRFAgYXBwcm9hY2ggdXNpbmcgdGhlIGZhY3QgdGhhdCB0aGUgY291bnQgaXMgbXVsdGlwbGljYXRpdmUgYW5kIGNhbiBiZSBjb21wdXRlZCBieSBuZXN0ZWQgbG9vcH
Mgb3IgYnkgZmFzdCBtZXRob2RzLgoKLy8gRm9yIGxhcmdlIGsqZCB1cCB0byAxZTUsIG5lc3RlZCBsb29wcyBpbXBvc3NpYmxlLgoKLy8gU28gd2UgdXNlIGEga25vd24gYXBwcm9hY2g6Ci8vIExldCBGKG0sbi
kgPSBudW1iZXIgb2YgbS10dXBsZXMgb2YgcG9zaXRpdmUgaW50ZWdlcnMgd2l0aCBwcm9kdWN0IDw9IG4KLy8gQmFzZSBjYXNlOiBGKDEsbikgPSBuCi8vIFJlY3Vyc2l2ZTogRihtLG4pID0gc3VtX3t4PTF9Xm
4gRihtLTEsIGZsb29yKG4veCkpCgovLyBXZSBjYW4gaW1wbGVtZW50IHRoaXMgd2l0aCBtZW1vaXphdGlvbiBhbmQgYmluYXJ5IHNlYXJjaCB0byBvcHRpbWl6ZS4KCi8vIFVzZSBtYXAgbWVtb2l6YXRpb24gYm
VjYXVzZSBuIHVwIHRvIDFlOSBhbmQgbSB1cCB0byAxZTUgdG9vIGxhcmdlIGZvciBEUC4KCi8vIEJ1dCBjb25zdHJhaW50cyBhcmUgYmlnLCBzbyB3ZSBtdXN0IG9wdGltaXplOgovLyBOb3RlIHN1bSBvZiBuIG
92ZXIgYWxsIHRlc3QgY2FzZXMgPD0gMWU5LCB0IDw9IDFlNAoKLy8gU28gd2UgaW1wbGVtZW50IGEgZmFzdCByZWN1cnNpdmUgbWV0aG9kIHdpdGggbWVtb2l6YXRpb24gZm9yIEYobSxuKQoKLy8gV2Ugd2lsbC
BpbXBsZW1lbnQgYSBtYXA8cGFpcjxpbnQsbG9uZyBsb25nPiwgaW50PiBjYWNoZSB0byBtZW1vaXplIHJlc3VsdHMuCgovLyBJbXBsZW1lbnQgbW9kdWxvIGFkZGl0aW9uIGNhcmVmdWxseS4KCi8vIEZpbmFsbH
ksIG91dHB1dCB0aGUgYW5zd2VycyBmb3IgZWFjaCB0ZXN0IGNhc2UuCgppbnQgdDsKCi8vIE1lbW8gY2FjaGUgZm9yIEYobSxuKQovLyBLZXk6IHBhaXI8aW50LGxvbmcgbG9uZz4sIFZhbHVlOiBpbnQKLy8gVX
NlIHVub3JkZXJlZF9tYXAgd2l0aCBjdXN0b20gaGFzaCBvciBtYXAKI2luY2x1ZGUgPHVub3JkZXJlZF9tYXA+CgpzdHJ1Y3QgS2V5IHsKICAgIGludCBtOwogICAgbG9uZyBsb25nIG47CiAgICBib29sIG9wZX
JhdG9yPT0oY29uc3QgS2V5JiBvdGhlcikgY29uc3QgewogICAgICAgIHJldHVybiBtID09IG90aGVyLm0gJiYgbiA9PSBvdGhlci5uOwogICAgfQp9OwoKc3RydWN0IEtleUhhc2ggewogICAgc2l6ZV90IG9wZX
JhdG9yKCkoY29uc3QgS2V5JiBrKSBjb25zdCB7CiAgICAgICAgcmV0dXJuIGhhc2g8aW50PigpKGsubSkgXiAoaGFzaDxsb25nIGxvbmc+KCkoay5uKSA8PCAxKTsKICAgIH0KfTsKCnVub3JkZXJlZF9tYXA8S2
V5LCBpbnQsIEtleUhhc2g+IG1lbW87CgppbnQgRihpbnQgbSwgbG9uZyBsb25nIG4pIHsKICAgIGlmIChtID09IDEpIHJldHVybiAoaW50KShuICUgTU9EKTsKICAgIGlmIChuID09IDApIHJldHVybiAwOwogIC
AgS2V5IGtleSA9IHttLCBufTsKICAgIGF1dG8gaXQgPSBtZW1vLmZpbmQoa2V5KTsKICAgIGlmIChpdCAhPSBtZW1vLmVuZCgpKSByZXR1cm4gaXQtPnNlY29uZDsKICAgIGludCByZXMgPSAwOwogICAgZm9yIC
hsb25nIGxvbmcgeCA9IDE7IHggPD0gbjspIHsKICAgICAgICBsb25nIGxvbmcgdmFsID0gbiAvIHg7CiAgICAgICAgbG9uZyBsb25nIG54dCA9IG4gLyB2YWwgKyAxOwogICAgICAgIGludCB0ZW1wID0gRihtIC
0gMSwgdmFsKTsKICAgICAgICBsb25nIGxvbmcgY291bnQgPSBueHQgLSB4OwogICAgICAgIHJlcyA9IChyZXMgKyAoaW50KSgobG9uZyBsb25nKXRlbXAgKiBjb3VudCAlIE1PRCkpICUgTU9EOwogICAgICAgIH
ggPSBueHQ7CiAgICB9CiAgICBtZW1vW2tleV0gPSByZXM7CiAgICByZXR1cm4gcmVzOwp9CgppbnQgbWFpbigpIHsKICAgIGlvczo6c3luY193aXRoX3N0ZGlvKGZhbHNlKTsKICAgIGNpbi50aWUobnVsbHB0ci
k7CiAgICBjaW4gPj4gdDsKICAgIHdoaWxlICh0LS0pIHsKICAgICAgICBsb25nIGxvbmcgbjsKICAgICAgICBpbnQgaywgZDsKICAgICAgICBjaW4gPj4gbiA+PiBrID4+IGQ7CiAgICAgICAgaW50IG0gPSBrIC
ogZCArIDE7CiAgICAgICAgbWVtby5jbGVhcigpOwogICAgICAgIGludCBhbnMgPSBGKG0sIG4pOwogICAgICAgIGNvdXQgPDwgYW5zIDw8ICJcbiI7CiAgICB9CiAgICByZXR1cm4gMDsKfQo=' | base64 -d
> /app/main.cpp; tmux wait -S done
root@1ef1c840428d:/app#
