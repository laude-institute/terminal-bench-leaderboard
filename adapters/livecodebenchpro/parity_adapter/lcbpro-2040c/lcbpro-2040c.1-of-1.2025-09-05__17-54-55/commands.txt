['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
["echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgovLyBUaGUgcHJvYmxlbSByZXF1aXJlcyB1cyB0byBmaW5kIHBlcm11dGF0aW9ucyBwIG9mIFsxLi5uXSB0aGF0IG1heGltaXplIFMocCkgPSBzdW0gb2YgbWluaW1hIG9mIGFsbCBzdWJhcnJheXMuCi8vIFdlIG11c3Qgb3V0cHV0IHRoZSBrLXRoIHN1Y2ggcGVybXV0YXRpb24gaW4gbGV4IG9yZGVyLCBvciAtMSBpZiBsZXNzIHRoYW4gayBleGlzdC4KCi8vIEtleSBvYnNlcnZhdGlvbnMgZnJvbSBlZGl0b3JpYWwgYW5kIHByb2JsZW0gYW5hbHlzaXM6Ci8vIDEuIFRoZSBtYXhpbXVtIFMocCkgaXMgYWNoaWV2ZWQgd2hlbiB0aGUgcGVybXV0YXRpb24gaXMgZm9ybWVkIGJ5IGEgc2luZ2xlIGN5Y2xlIGluIHRoZSBwZXJtdXRhdGlvbiBncmFwaC4KLy8gMi4gU3VjaCBwZXJtdXRhdGlvbnMgY29ycmVzcG9uZCB0byBwZXJtdXRhdGlvbnMgd2hlcmUgdGhlIG1pbmltYWwgZWxlbWVudCBpcyBhdCB0aGUgZW5kIG9mIHRoZSBwZXJtdXRhdGlvbiBvciBjZXJ0YWluIHN0cnVjdHVyZWQgcGVybXV0YXRpb25zLgovLyAzLiBGcm9tIGVkaXRvcmlhbCBhbmQgZXhhbXBsZXMsIHRoZSBwZXJtdXRhdGlvbnMgd2l0aCBtYXggUyhwKSBhcmUgdGhvc2UgdGhhdCBjYW4gYmUgZm9ybWVkIGJ5IGNvbmNhdGVuYXRpbmcgYW4gaW5jcmVhc2luZyBzZXF1ZW5jZSBhbmQgYSBkZWNyZWFzaW5nIHNlcXVlbmNlIHdpdGggdGhlIHNtYWxsZXN0IGVsZW1lbnQgYXQgdGhlIGVuZC4KLy8gNC4gVGhlIG51bWJlciBvZiBzdWNoIHBlcm11dGF0aW9ucyBpcyAyXihuLTEpLCBjb3JyZXNwb25kaW5nIHRvIGNob29zaW5nIGEgcGFydGl0aW9uIG9mIFsxLi5uLTFdIGludG8gdHdvIHBhcnRzOiBvbmUgYXNjZW5kaW5nIGFuZCBvbmUgZGVzY2VuZGluZywgd2l0aCB0aGUgc21hbGxlc3QgZWxlbWVudCBuIGF0IHRoZSBlbmQuCi8vIDUuIFdlIG5lZWQgdG8gZmluZCB0aGUgay10aCBzdWNoIHBlcm11dGF0aW9uIGluIGxleCBvcmRlciBvciBwcmludCAtMSBpZiBrIGV4Y2VlZHMgY291bnQuCgovLyBJbXBsZW1lbnRhdGlvbiBkZXRhaWxzOgovLyAtIFdlIGZpeCB0aGUgbGFzdCBlbGVtZW50IGFzIDEgKHRoZSBzbWFsbGVzdCBlbGVtZW50KS4KLy8gLSBUaGUgcmVzdCBlbGVtZW50cyBmcm9tIDIuLm4gYXJlIHNwbGl0IGludG8gdHdvIHBhcnRzOiBhbiBpbmNyZWFzaW5nIHBhcnQgYW5kIGEgZGVjcmVhc2luZyBwYXJ0LgovLyAtIFRoZSBjb3VudCBvZiBwZXJtdXRhdGlvbnMgd2l0aCBtYXggUyBpcyAyXihuLTEpIChlYWNoIGVsZW1lbnQgZnJvbSAyLi5uIGNhbiBiZSBwbGFjZWQgZWl0aGVyIGluIHRoZSBpbmNyZWFzaW5nIG9yIGRlY3JlYXNpbmcgcGFydCkuCi8vIC0gV2UgYnVpbGQgdGhlIHBlcm11dGF0aW9uIGxleCBvcmRlciBieSBkZWNpZGluZyBmb3IgZWFjaCBlbGVtZW50IGZyb20gMiB0byBuIHdoZXRoZXIgaXQgZ29lcyB0byB0aGUgaW5jcmVhc2luZyBvciBkZWNyZWFzaW5nIHNpZGUgYmFzZWQgb24gay4KCi8vIFRvIGhhbmRsZSBsYXJnZSBrICh1cCB0byAxMF4xMikgYW5kIGxhcmdlIG4gKHVwIHRvIDIqMTBeNSksIHdlIHVzZSA2NC1iaXQgaW50ZWdlcnMgYW5kIGZhc3QgZXhwb25lbnRpYXRpb24uCgp1c2luZyBsbCA9IGxvbmcgbG9uZzsKCmludCBtYWluKCkgewogICAgaW9zOjpzeW5jX3dpdGhfc3RkaW8oZmFsc2UpOwogICAgY2luLnRpZShudWxscHRyKTsKCiAgICBpbnQgdDsgY2luID4+IHQ7CgogICAgLy8gUHJlY29tcHV0ZSBwb3dlcnMgb2YgMiB1cCB0byBtYXggbiA9IDIqMTBeNQogICAgY29uc3QgaW50IE1BWE4gPSAyMDAwMDA7CiAgICBzdGF0aWMgbGwgcG93MltNQVhOICsgMV07CiAgICBwb3cyWzBdID0gMTsKICAgIGZvciAoaW50IGkgPSAxOyBpIDw9IE1BWE47IGkrKykgewogICAgICAgIHBvdzJbaV0gPSBwb3cyW2ktMV0gPDwgMTsKICAgICAgICBpZiAocG93MltpXSA+IDFlMTUpIHBvdzJbaV0gPSAxZTE1OyAvLyBjYXAgdG8gYXZvaWQgb3ZlcmZsb3cKICAgIH0KCiAgICB3aGlsZSAodC0tKSB7CiAgICAgICAgaW50IG47CiAgICAgICAgbGwgazsKICAgICAgICBjaW4gPj4gbiA+PiBrOwoKICAgICAgICBpZiAoayA+IHBvdzJbbi0xXSkgewogICAgICAgICAgICBjb3V0IDw8IC0xIDw8ICdcbic7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KCiAgICAgICAgdmVjdG9yPGludD4gaW5jciwgZGVjcjsKCiAgICAgICAgLy8gV2UgYnVpbGQgdGhlIHBlcm11dGF0aW9uIGZyb20gMi4ubiBkZWNpZGluZyBlYWNoIGVsZW1lbnQgYmVsb25ncyB0byBpbmNyIG9yIGRlY3IKICAgICAgICAvLyBhY2NvcmRpbmcgdG8gdGhlIGJpbmFyeSByZXByZXNlbnRhdGlvbiBvZiBrLTEgZnJvbSBsZWZ0IHRvIHJpZ2h0CiAgICAgICAgLy8gc21hbGxlc3QgZWxlbWVudCAxIGlzIGFsd2F5cyBhdCB0aGUgZW5kLgoKICAgICAgICBmb3IgKGludCBpID0gMjsgaSA8PSBuOyBpKyspIHsKICAgICAgICAgICAgLy8gTnVtYmVyIG9mIHBlcm11dGF0aW9ucyBpZiBjdXJyZW50IGVsZW1lbnQgZ29lcyB0byBpbmNyZWFzaW5nIHBhcnQ6CiAgICAgICAgICAgIGxsIGNudCA9IHBvdzJbbiAtIGldOwogICAgICAgICAgICBpZiAoayA8PSBjbnQpIHsKICAgICAgICAgICAgICAgIGluY3IucHVzaF9iYWNrKGkpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgayAtPSBjbnQ7CiAgICAgICAgICAgICAgICBkZWNyLnB1c2hfYmFjayhpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gT3V0cHV0IHRoZSBwZXJtdXRhdGlvbjogaW5jciBhc2NlbmRpbmcsIHRoZW4gZGVjciBkZXNjZW5kaW5nLCB0aGVuIDEKICAgICAgICBmb3IgKGludCB4IDogaW5jcikgY291dCA8PCB4IDw8ICcgJzsKICAgICAgICBmb3IgKGF1dG8gaXQgPSBkZWNyLnJiZWdpbigpOyBpdCAhPSBkZWNyLnJlbmQoKTsgKytpdCkgY291dCA8PCAqaXQgPDwgJyAnOwogICAgICAgIGNvdXQgPDwgMSA8PCAnXG4nOwogICAgfQoKICAgIHJldHVybiAwOwp9Cg==' | base64 -d > /app/main.cpp", 'Enter']
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
['C-d']
