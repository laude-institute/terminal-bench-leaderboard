{
    "id": "2ab1ffe8-04a6-4935-a017-4f71166cfb7b",
    "trial_name": "lcbpro-1999c.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-1999c",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1999C)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nAs a computer science student, Alex faces a hard challenge -- showering. He tries to shower daily, but despite his best efforts there are always challenges. He takes $s$ minutes to shower and a day only has $m$ minutes!\n\nHe already has $n$ tasks planned for the day. Task $i$ is represented as an interval $(l_i$, $r_i)$, which means that Alex is busy and can not take a shower in that time interval (at any point in time strictly between $l_i$ and $r_i$). No two tasks overlap.\n\nGiven all $n$ time intervals, will Alex be able to shower that day? In other words, will Alex have a free time interval of length at least $s$?\n\n![](https://espresso.codeforces.com/555dc2bc8c4fc246d7de951a4c88791c8f382b59.png)\n\nIn the first test case, Alex can shower for the first $3$ minutes of the day and not miss any of the tasks.\n\n### Input\n\nThe first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$) -- the number of test cases.\n\nThe first line of each test case contains three integers $n$, $s$, and $m$ ($1 \\leq n \\leq 2 \\cdot 10^5$; $1 \\leq s, m \\leq 10^9$) -- the number of time intervals Alex already has planned, the amount of time Alex takes to take a shower, and the amount of minutes a day has.\n\nThen $n$ lines follow, the $i$-th of which contains two integers $l_i$ and $r_i$ ($0 \\leq l_i < r_i \\leq m$) -- the time interval of the $i$-th task. No two tasks overlap.\n\nAdditional constraint on the input: $l_i > r_{i-1}$ for every $i > 1$.\n\nThe sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case output \"YES\" (without quotes) if Alex can take a shower for that given test case, and \"NO\" (also without quotes) otherwise.\n\nYou can output \"YES\" and \"NO\" in any case (for example, strings \"yEs\", \"yes\", and \"Yes\" will be recognized as a positive response).\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n3 3 10\n\n3 5\n\n6 8\n\n9 10\n\n3 3 10\n\n1 2\n\n3 5\n\n6 7\n\n3 3 10\n\n1 2\n\n3 5\n\n6 8\n\n3 4 10\n\n1 2\n\n6 7\n\n8 9\n\n```\n\n#### Output #1\n\n```\nYES\nYES\nNO\nYES\n```",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-1999c/lcbpro-1999c.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1040,
    "total_output_tokens": 372,
    "trial_started_at": "2025-09-06T01:36:12.604711+00:00",
    "trial_ended_at": "2025-09-06T01:37:01.124563+00:00",
    "agent_started_at": "2025-09-06T01:36:35.317513+00:00",
    "agent_ended_at": "2025-09-06T01:36:41.328153+00:00",
    "test_started_at": "2025-09-06T01:36:43.381866+00:00",
    "test_ended_at": "2025-09-06T01:36:46.320237+00:00"
}