{
    "id": "51c1227b-e0e0-4f83-b7ca-0a352e73b8f0",
    "trial_name": "lcbpro-2121e.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2121e",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2121E)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nFor two integers $a$ and $b$, we define $f(a, b)$ as the number of positions in the decimal representation of the numbers $a$ and $b$ where their digits are the same. For example, $f(12, 21) = 0$, $f(31, 37) = 1$, $f(19891, 18981) = 2$, $f(54321, 24361) = 3$.\n\nYou are given two integers $l$ and $r$ of the same length in decimal representation. Consider all integers $l \\leq x \\leq r$. Your task is to find the minimum value of $f(l, x) + f(x, r)$.\n\n### Input\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 10^4$)Â -- the number of test cases. The description of the test cases follows.\n\nEach test case consists of a single line containing two integers $l$ and $r$ ($1 \\leq l \\leq r < 10^9$).\n\nIt is guaranteed that the numbers $l$ and $r$ have the same length in decimal representation and do not have leading zeros.\n\n### Output\n\nFor each test case, output the minimum value of $f(l, x) + f(x, r)$ among all integer values $l \\leq x \\leq r$.\n\n### Example\n\n#### Input #1\n\n```\n\n14\n\n1 1\n\n2 3\n\n4 6\n\n15 16\n\n17 19\n\n199 201\n\n899 999\n\n1990 2001\n\n6309 6409\n\n12345 12501\n\n19987 20093\n\n746814 747932\n\n900990999 900991010\n\n999999999 999999999\n\n```\n\n#### Output #1\n\n```\n2\n1\n0\n3\n2\n2\n1\n3\n3\n4\n3\n5\n12\n18\n```\n\n### Note\n\nIn the first test case, you can choose $x = 1$. Then $f(1, 1) + f(1, 1) = 1 + 1 = 2$.\n\nIn the second test case, you can choose $x = 2$. Then $f(2, 2) + f(2, 3) = 1 + 0 = 1$.\n\nIn the third test case, you can choose $x = 5$. Then $f(4, 5) + f(5, 6) = 0 + 0 = 0$.\n\nIn the fourth test case, you can choose $x = 15$. Then $f(15, 15) + f(15, 16) = 2 + 1 = 3$.\n\nIn the fifth test case, you can choose $x = 18$. Then $f(17, 18) + f(18, 19) = 1 + 1 = 2$.\n\nIn the sixth test case, you can choose $x = 200$. Then $f(199, 200) + f(200, 201) = 0 + 2 = 2$.\n\nIn the seventh test case, you can choose $x = 900$. Then $f(899, 900) + f(900, 999) = 0 + 1 = 1$.\n\nIn the eighth test case, you can choose $x = 1992$. Then $f(1990, 1992) + f(1992, 2001) = 3 + 0 = 3$.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2121e/lcbpro-2121e.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1197,
    "total_output_tokens": 746,
    "trial_started_at": "2025-09-06T01:44:19.289823+00:00",
    "trial_ended_at": "2025-09-06T01:45:18.939442+00:00",
    "agent_started_at": "2025-09-06T01:44:35.291386+00:00",
    "agent_ended_at": "2025-09-06T01:44:46.901299+00:00",
    "test_started_at": "2025-09-06T01:44:51.630192+00:00",
    "test_ended_at": "2025-09-06T01:44:57.212721+00:00"
}