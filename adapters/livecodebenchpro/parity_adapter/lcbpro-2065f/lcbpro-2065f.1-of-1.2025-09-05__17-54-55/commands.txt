['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
["echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgovLyBDb25zdGFudHMKY29uc3QgaW50IE1BWE4gPSA1MDAwMDAgKyA1OwoKaW50IHQsIG47CmludCBhW01BWE5dOwp2ZWN0b3I8aW50PiBhZGpbTUFYTl07CgovLyBXZSB3YW50IHRvIGZpbmQgZm9yIGVhY2ggdmFsdWUgaSBpbiBbMS4ubl0gaWYgdGhlcmUgZXhpc3RzIGEgc2ltcGxlIHBhdGggd2hlcmUgaSBpcyB0aGUgbWFqb3JpdHkKLy8gTWFqb3JpdHkgbWVhbnMgdGhlIGNvdW50IG9mIGkgb24gdGhlIHBhdGggPiBmbG9vcihsZW5ndGgvMikKCi8vIE9ic2VydmF0aW9uIGFuZCBhcHByb2FjaDoKLy8gMS4gRm9yIGEgdmFsdWUgaSB0byBiZSBtYWpvcml0eSBvbiBhIHBhdGgsIGl0IG11c3QgYXBwZWFyIG1vcmUgdGhhbiBoYWxmIG9mIHRoZSBwYXRoIGxlbmd0aC4KLy8gMi4gVGhlIHBhdGggaXMgc2ltcGxlIGFuZCBpbiBhIHRyZWUuCi8vIDMuIFRoZSBzaW1wbGVzdCB3YXkgdG8gaGF2ZSBhIG1ham9yaXR5IGlzIHRvIGZpbmQgYSBwYXRoIHdoaWNoIGhhcyBtYW55IGkncyBhbmQgZmV3IG90aGVycy4KLy8gNC4gV2UgY2FuIGZpbmQgdGhlIG1heGltdW0gZGlzdGFuY2UgYmV0d2VlbiB0d28gdmVydGljZXMgd2l0aCB2YWx1ZSBpIChkaWFtZXRlciBvZiB0aGUgc3ViZ3JhcGggaW5kdWNlZCBieSBpKS4KLy8gNS4gSWYgdGhlIG1heCBkaXN0YW5jZSBiZXR3ZWVuIHR3byBpIHZlcnRpY2VzIGlzIGQsIHRoZW4gdGhlIHBhdGggbGVuZ3RoIGNhbiBiZSBhdCBtb3N0IGQrMS4KLy8gNi4gVGhlIHBhdGggb2YgbGVuZ3RoIEwgaGFzIG1ham9yaXR5IGkgaWYgY291bnRfaSA+IGZsb29yKEwvMiksIHNpbmNlIGFsbCB2ZXJ0aWNlcyBvbiBwYXRoIGFyZSBjb3VudGVkLAovLyAgICBhbmQgY291bnRfaSBpcyBhdCBsZWFzdCB0aGUgbnVtYmVyIG9mIGkncyBvbiB0aGF0IHBhdGguCi8vIDcuIFRoZSBwYXRoIG9mIG1heCBsZW5ndGggYmV0d2VlbiB0d28gdmVydGljZXMgd2l0aCB2YWx1ZSBpIGlzIGF0IGxlYXN0IGQrMSwgYW5kIGFsbCB2ZXJ0aWNlcyBleGNlcHQgcG9zc2libHkgc29tZSBpbiBiZXR3ZWVuIGFyZSBpLgovLyA4LiBPdGhlciB2ZXJ0aWNlcyBvbiBwYXRoIHJlZHVjZSBtYWpvcml0eSBjb3VudC4KLy8gOS4gQnV0IGlmIHdlIGNvbnNpZGVyIHRoZSBzdWJ0cmVlIGluZHVjZWQgYnkgdmVydGljZXMgd2l0aCB2YWx1ZSBpLCB0aGUgbG9uZ2VzdCBwYXRoIGluIHRoYXQgc3VidHJlZSBpcyB0aGUgZGlhbWV0ZXIgZm9yIGkuCi8vIDEwLiBJZiB0aGlzIGRpYW1ldGVyIGxlbmd0aCBpcyBhdCBsZWFzdCAyLCB0aGVuIGkgY2FuIGJlIG1ham9yaXR5IG9uIHRoYXQgcGF0aCAoc2luY2UgdGhlIHBhdGggaXMgYW1vbmcgaSB2ZXJ0aWNlcyBvbmx5KSwKLy8gICAgIHNvIHBhdGggbGVuZ3RoIEwgYW5kIGNvdW50IGkgPSBMLCBzbyBtYWpvcml0eSBjb25kaXRpb24gdHJpdmlhbGx5IGhvbGRzLgovLyAxMS4gSWYgb25seSBvbmUgdmVydGV4IHdpdGggdmFsdWUgaSBleGlzdHMgb3Igbm8gZWRnZSBiZXR3ZWVuIHRoZW0sIHdlIGNhbm5vdCBmb3JtIGEgcGF0aCB3aXRoIG1ham9yaXR5IGkuCgovLyBIZW5jZSB0aGUgcHJvYmxlbSByZWR1Y2VzIHRvOgovLyBGb3IgZWFjaCB2YWx1ZSBpLCBjaGVjayBpZiB0aGUgaW5kdWNlZCBzdWJncmFwaCBvZiB2ZXJ0aWNlcyB3aXRoIHZhbHVlIGkgaGFzIGFuIGVkZ2UgKG9yIGEgcGF0aCBvZiBsZW5ndGggPj0gMikuCi8vIElmIHllcywgb3V0cHV0ICcxJyBmb3IgaSwgZWxzZSAnMCcuCgovLyBJbXBsZW1lbnRhdGlvbiBwbGFuOgovLyAtIEZvciBlYWNoIHZhbHVlIGksIHN0b3JlIHRoZSB2ZXJ0aWNlcyB3aXRoIHRoYXQgdmFsdWUKLy8gLSBCdWlsZCBhIGdyYXBoIGNvbm5lY3RpbmcgdGhlc2UgdmVydGljZXMgb25seSAoaW5kdWNlZCBzdWJncmFwaCkKLy8gLSBDaGVjayBpZiB0aGUgaW5kdWNlZCBzdWJncmFwaCBoYXMgYXQgbGVhc3Qgb25lIGVkZ2UKLy8gLSBJZiBpdCBoYXMgYW4gZWRnZSwgdGhlbiBhbnN3ZXJbaV0gPSAnMScsIGVsc2UgJzAnCgovLyBCZWNhdXNlIG4gY2FuIGJlIGxhcmdlIGFuZCB2YWx1ZXMgdXAgdG8gbiwgd2UgdXNlIGEgbWFwIG9yIHZlY3RvciBvZiB2ZWN0b3JzIHRvIHN0b3JlIHZlcnRpY2VzIHBlciB2YWx1ZQovLyBhbmQgdGhlbiBtYXJrIGVkZ2VzIHRoYXQgY29ubmVjdCB2ZXJ0aWNlcyB3aXRoIHRoZSBzYW1lIHZhbHVlLgoKLy8gQWxzbywgc2luY2Ugd2Ugb25seSBuZWVkIHRvIGtub3cgaWYgdGhlcmUgZXhpc3RzIGFuIGVkZ2UgY29ubmVjdGluZyB0d28gdmVydGljZXMgd2l0aCB0aGUgc2FtZSB2YWx1ZSwKLy8gd2UgY2FuIHNpbXBseSBjaGVjayBhbGwgZWRnZXM6IGlmIGFbdV0gPT0gYVt2XSwgbWFyayBhbnN3ZXJbYVt1XV0gPSAnMScuCgovLyBGaW5hbGx5LCBvdXRwdXQgdGhlIHN0cmluZyBhbnN3ZXIgZm9yIGkgaW4gWzEuLm5dIGZvciBlYWNoIHRlc3QgY2FzZS4KCmludCBtYWluKCkgewogICAgaW9zOjpzeW5jX3dpdGhfc3RkaW8oZmFsc2UpOwogICAgY2luLnRpZShudWxscHRyKTsKCiAgICBjaW4gPj4gdDsKICAgIHdoaWxlICh0LS0pIHsKICAgICAgICBjaW4gPj4gbjsKICAgICAgICBmb3IgKGludCBpID0gMTsgaSA8PSBuOyBpKyspIHsKICAgICAgICAgICAgY2luID4+IGFbaV07CiAgICAgICAgICAgIGFkaltpXS5jbGVhcigpOwogICAgICAgIH0KICAgICAgICB2ZWN0b3I8Ym9vbD4gY2FuKG4rMSwgZmFsc2UpOwogICAgICAgIGZvciAoaW50IGkgPSAxOyBpIDwgbjsgaSsrKSB7CiAgICAgICAgICAgIGludCB1LCB2OwogICAgICAgICAgICBjaW4gPj4gdSA+PiB2OwogICAgICAgICAgICBhZGpbdV0ucHVzaF9iYWNrKHYpOwogICAgICAgICAgICBhZGpbdl0ucHVzaF9iYWNrKHUpOwogICAgICAgICAgICBpZiAoYVt1XSA9PSBhW3ZdKSB7CiAgICAgICAgICAgICAgICBjYW5bYVt1XV0gPSB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBzdHJpbmcgcmVzKG4sICcwJyk7CiAgICAgICAgZm9yIChpbnQgaSA9IDE7IGkgPD0gbjsgaSsrKSB7CiAgICAgICAgICAgIGlmIChjYW5baV0pIHJlc1tpLTFdID0gJzEnOwogICAgICAgIH0KICAgICAgICBjb3V0IDw8IHJlcyA8PCAiXG4iOwogICAgfQoKICAgIHJldHVybiAwOwp9Cg==' | base64 -d > /app/main.cpp", 'Enter']
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
['C-d']
