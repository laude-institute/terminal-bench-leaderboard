['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
["echo 'I2luY2x1ZGUgPGlvc3RyZWFtPgojaW5jbHVkZSA8dmVjdG9yPgojaW5jbHVkZSA8YWxnb3JpdGhtPgp1c2luZyBuYW1lc3BhY2Ugc3RkOwoKaW50IG1haW4oKSB7CiAgICBpb3M6OnN5bmNfd2l0aF9zdGRpbyhmYWxzZSk7CiAgICBjaW4udGllKG51bGxwdHIpOwoKICAgIGludCB0OwogICAgY2luID4+IHQ7CiAgICB3aGlsZSAodC0tKSB7CiAgICAgICAgaW50IG47CiAgICAgICAgbG9uZyBsb25nIGs7CiAgICAgICAgY2luID4+IG4gPj4gazsKICAgICAgICB2ZWN0b3I8bG9uZyBsb25nPiBhKG4pOwogICAgICAgIGxvbmcgbG9uZyBzdW0gPSAwOwogICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgbjsgaSsrKSB7CiAgICAgICAgICAgIGNpbiA+PiBhW2ldOwogICAgICAgICAgICBzdW0gKz0gYVtpXTsKICAgICAgICB9CgogICAgICAgIC8vIFNvcnQgZGVzY2VuZGluZwogICAgICAgIHNvcnQoYS5yYmVnaW4oKSwgYS5yZW5kKCkpOwoKICAgICAgICAvLyBGaW5kIHByZWZpeCBzdW1zIGZvciBxdWljayBzdW0gY2FsY3VsYXRpb24KICAgICAgICB2ZWN0b3I8bG9uZyBsb25nPiBwcmVmaXgobisxLCAwKTsKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG47IGkrKykgewogICAgICAgICAgICBwcmVmaXhbaSsxXSA9IHByZWZpeFtpXSArIGFbaV07CiAgICAgICAgfQoKICAgICAgICBsb25nIGxvbmcgYWRkID0gMDsKCiAgICAgICAgLy8gV2UgdHJ5IHRvIGZpbmQgbWluaW1hbCBjb2lucyBhZGRlZCBzbyB0aGF0IE1vbm9jYXJwIHN0b3BzIHdpdGggZXhhY3RseSBrIGNvaW5zCiAgICAgICAgLy8gSGUgcGlja3MgY2hlc3RzIGZyb20gdGhlIGxhcmdlc3QgdG8gc21hbGxlciB1bnRpbCBzdW0gPj0gawoKICAgICAgICAvLyBUcnkgZWFjaCBwb3NzaWJsZSBudW1iZXIgb2YgY2hlc3RzIHRvIHRha2UsIGZyb20gMSB0byBuCiAgICAgICAgLy8gRm9yIHRoZSBmaXJzdCB4IGNoZXN0cywgc3VtIGlzIHByZWZpeFt4XQogICAgICAgIC8vIElmIHByZWZpeFt4XSA+PSBrLCB0aGVuIE1vbm9jYXJwIHN0b3BzIGF0IGNoZXN0IHgKICAgICAgICAvLyBXZSBuZWVkIHN1bSArIGFkZCA+PSBrICh0b3RhbCBjb2lucyBhZnRlciBhZGRpbmcpCiAgICAgICAgLy8gQWxzbywgTW9ub2NhcnAgdGFrZXMgZXhhY3RseSBrIGNvaW5zLCBzbyBwcmVmaXhbeC0xXSA8IGsgPD0gcHJlZml4W3hdICsgYWRkX2luX3RvcF94X2NoZXN0cwoKICAgICAgICAvLyBUaGUgbWluaW1hbCBhbW91bnQgdG8gYWRkIGlzOgogICAgICAgIC8vIFdlIGNhbiBhZGQgY29pbnMgb25seSB0byBzb21lIGNoZXN0cyB0byBjb250cm9sIE1vbm9jYXJwJ3MgcGlja2luZy4KCiAgICAgICAgLy8gSG93ZXZlciwgdGhlIHByb2JsZW0gc3RhdGVzIGl0J3MgYWx3YXlzIHBvc3NpYmxlIHRvIGFkZCBjb2lucyB0byBhY2hpZXZlIHRoZSBnb2FsLgoKICAgICAgICAvLyBUaGUgYXBwcm9hY2g6CiAgICAgICAgLy8gRm9yIGVhY2ggeCAobnVtYmVyIG9mIGNoZXN0cyBNb25vY2FycCB0YWtlcyksIGlmIHByZWZpeFt4LTFdIDwgayA8PSBwcmVmaXhbeF0gKyBhZGRfaW5fdG9wX3hfY2hlc3RzCiAgICAgICAgLy8gV2Ugd2FudCB0byBtaW5pbWl6ZSBhZGRfaW5fdG9wX3hfY2hlc3RzICsgYWRkX2luX3Jlc3RfY2hlc3RzIHN1Y2ggdGhhdCB0b3RhbCBzdW0gKyBhZGQgPj0gawogICAgICAgIC8vIEJ1dCBzaW5jZSBNb25vY2FycCB3aWxsIHRha2UgdGhlIHRvcCBjaGVzdHMsIHdlIG5lZWQgdGhlIHRvdGFsIGFkZGVkIGNvaW5zIHRvIGJlIGF0IGxlYXN0IGsgLSBzdW0KICAgICAgICAKICAgICAgICAvLyBUaGUgbWluaW1hbCBhZGQgY2FuIGJlIGZvdW5kIGFzOgogICAgICAgIC8vIGFkZCA9IG1heCgwLCBrIC0gc3VtKTsgLy8gd2UgbXVzdCBhZGQgYXQgbGVhc3QgdGhpcyB0byByZWFjaCBrIHRvdGFsIGNvaW5zCiAgICAgICAgLy8gQnV0IHdlIGFsc28gbmVlZCB0byBlbnN1cmUgTW9ub2NhcnAgdGFrZXMgZXhhY3RseSBrIGNvaW5zLCBtZWFuaW5nIHRoZSBsYXN0IGNoZXN0IHRha2VuIG11c3QgYnJpbmcgc3VtID49IGsKICAgICAgICAKICAgICAgICAvLyBUbyBzYXRpc2Z5IHRoYXQsIHdlIGNhbiB0cnkgdG8gYWRkIGNvaW5zIG9ubHkgdG8gdGhlIGxhcmdlc3QgY2hlc3QgdG8gZW5zdXJlIE1vbm9jYXJwIHN0b3BzIGV4YWN0bHkgYXQgawogICAgICAgIAogICAgICAgIC8vIExldCdzIGltcGxlbWVudCBhIHNpbXBsZXIgYXBwcm9hY2g6CiAgICAgICAgLy8gMSkgYWRkIGNvaW5zIHNvIHRvdGFsIHN1bSA+PSBrCiAgICAgICAgLy8gMikgTW9ub2NhcnAgdGFrZXMgY2hlc3RzIGluIGRlc2NlbmRpbmcgb3JkZXIKICAgICAgICAvLyAzKSBIZSBzdG9wcyBhcyBzb29uIGFzIHN1bSB0YWtlbiA+PSBrCiAgICAgICAgLy8gNCkgV2Ugd2FudCBzdW0gdGFrZW4gPT0gawogICAgICAgIAogICAgICAgIC8vIExldCdzIHRyeSBhbGwgcG9zc2libGUgcHJlZml4ZXMgd2hlcmUgTW9ub2NhcnAgc3RvcHMKICAgICAgICAKICAgICAgICBsb25nIGxvbmcgcmVzID0gMWUxNTsKICAgICAgICBmb3IgKGludCB4ID0gMTsgeCA8PSBuOyB4KyspIHsKICAgICAgICAgICAgLy8gc3VtIG9mIHRvcCAoeC0xKSBjaGVzdHMKICAgICAgICAgICAgbG9uZyBsb25nIHByZXZfc3VtID0gcHJlZml4W3gtMV07CiAgICAgICAgICAgIC8vIHN1bSBvZiB0b3AgeCBjaGVzdHMKICAgICAgICAgICAgbG9uZyBsb25nIGN1cnJfc3VtID0gcHJlZml4W3hdOwogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKHByZXZfc3VtIDwgayAmJiBrIDw9IGN1cnJfc3VtKSB7CiAgICAgICAgICAgICAgICAvLyBNb25vY2FycCBzdG9wcyBhdCBjaGVzdCB4CiAgICAgICAgICAgICAgICAvLyBXZSB3YW50IHRvIGFkZCBjb2lucyBzbyB0aGF0IHN1bSArIGFkZCA+PSBrCiAgICAgICAgICAgICAgICAvLyBhbmQgTW9ub2NhcnAgdGFrZXMgZXhhY3RseSBrIGNvaW5zCgogICAgICAgICAgICAgICAgLy8gVG8gbWFrZSBNb25vY2FycCB0YWtlIGV4YWN0bHkgayBjb2lucywKICAgICAgICAgICAgICAgIC8vIHdlIGNhbiBhZGQgY29pbnMgdG8gdGhlIHgtdGggY2hlc3Qgc28gdGhhdCB0aGUgc3VtIG9mIHRvcCB4IGNoZXN0cyBpcyBleGFjdGx5IGsKICAgICAgICAgICAgICAgIGxvbmcgbG9uZyBuZWVkX2FkZF9mb3JfayA9IGsgLSBjdXJyX3N1bTsKICAgICAgICAgICAgICAgIC8vIG5lZWRfYWRkX2Zvcl9rIDw9IDAgbWVhbnMgbm8gY29pbnMgbmVlZGVkIHRvIGFkZCBoZXJlCgogICAgICAgICAgICAgICAgLy8gdG90YWwgYWRkIG11c3QgYmUgYXQgbGVhc3QgayAtIHN1bSAodG8gcmVhY2ggdG90YWwgY29pbnMgPj0gaykKICAgICAgICAgICAgICAgIGxvbmcgbG9uZyB0b3RhbF9hZGRfbWluID0gbWF4KDBMTCwgayAtIHN1bSk7CgogICAgICAgICAgICAgICAgLy8gdG90YWwgYWRkIG11c3QgYmUgPj0gbmVlZF9hZGRfZm9yX2sgKHRvIGVuc3VyZSBNb25vY2FycCBzdG9wcyBhdCBleGFjdGx5IGspCiAgICAgICAgICAgICAgICAvLyBidXQgbmVlZF9hZGRfZm9yX2sgY2FuIGJlIG5lZ2F0aXZlLCBzbyBtYXggd2l0aCAwCiAgICAgICAgICAgICAgICBsb25nIGxvbmcgbmVlZGVkID0gbWF4KHRvdGFsX2FkZF9taW4sIG5lZWRfYWRkX2Zvcl9rKTsKCiAgICAgICAgICAgICAgICAvLyBCdXQgYWRkaW5nIGNvaW5zIG9ubHkgdG8geC10aCBjaGVzdCBtaWdodCBub3QgYmUgZW5vdWdoIGlmIG5lZWRfYWRkX2Zvcl9rIDwgMAogICAgICAgICAgICAgICAgLy8gQWN0dWFsbHksIGFkZGluZyBjb2lucyB0byBvdGhlciBjaGVzdHMgaXMgYWxsb3dlZC4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgLy8gVGhlIG1pbmltYWwgYWRkIGlzIG1heCh0b3RhbF9hZGRfbWluLCBuZWVkX2FkZF9mb3JfayksIGJ1dCBuZWVkX2FkZF9mb3JfayBpcyBuZWdhdGl2ZSBvciB6ZXJvCiAgICAgICAgICAgICAgICAvLyBTbyBtaW5pbWFsIGFkZCBpcyB0b3RhbF9hZGRfbWluCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIC8vIEhvd2V2ZXIsIGFkZGluZyBvbmx5IHRvdGFsX2FkZF9taW4gbWlnaHQgbWFrZSBNb25vY2FycCB0YWtlIG1vcmUgdGhhbiBrIGNvaW5zIGlmIHN1bSBvZiB0b3AgeCBjaGVzdHMKICAgICAgICAgICAgICAgIC8vIGFmdGVyIGFkZGluZyBjb2lucyBpcyA+IGsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgLy8gU28sIHdlIGFkZCBjb2lucyB0byB0aGUgeC10aCBjaGVzdCB0byBtYWtlIHN1bSBvZiB0b3AgeCBjaGVzdHMgZXhhY3RseSBrCiAgICAgICAgICAgICAgICAvLyBpLmUuIGFkZCAoayAtIGN1cnJfc3VtKSB0byBhW3gtMV0gaWYgcG9zaXRpdmUKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgbG9uZyBsb25nIGFkZF9mb3JfeHRoID0gbWF4KDBMTCwgayAtIGN1cnJfc3VtKTsKICAgICAgICAgICAgICAgIGxvbmcgbG9uZyBhZGRfZm9yX3RvdGFsID0gbWF4KDBMTCwgayAtIHN1bSk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIC8vIHRvdGFsIGFkZCBtdXN0IGJlIGF0IGxlYXN0IGFkZF9mb3JfeHRoIGFuZCBhZGRfZm9yX3RvdGFsCiAgICAgICAgICAgICAgICBsb25nIGxvbmcgY2FuZGlkYXRlID0gbWF4KGFkZF9mb3JfeHRoLCBhZGRfZm9yX3RvdGFsKTsKCiAgICAgICAgICAgICAgICByZXMgPSBtaW4ocmVzLCBjYW5kaWRhdGUpOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBjb3V0IDw8IHJlcyA8PCAiXG4iOwogICAgfQoKICAgIHJldHVybiAwOwp9Cg==' | base64 -d > /app/main.cpp", 'Enter']
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
['C-d']
