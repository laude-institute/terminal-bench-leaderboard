['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
["echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7Cgpjb25zdGV4cHIgaW50IE1PRCA9IDk5ODI0NDM1MzsKCi8vIE1vZHVsYXIgZXhwb25lbnRpYXRpb24KaW50IG1vZHBvdyhpbnQgYmFzZSwgaW50IGV4cCwgaW50IG1vZCA9IE1PRCkgewogICAgaW50IHJlc3VsdCA9IDE7CiAgICBpbnQgY3VyID0gYmFzZTsKICAgIHdoaWxlIChleHAgPiAwKSB7CiAgICAgICAgaWYgKGV4cCAmIDEpIHJlc3VsdCA9IChpbnQpKCgxTEwgKiByZXN1bHQgKiBjdXIpICUgbW9kKTsKICAgICAgICBjdXIgPSAoaW50KSgoMUxMICogY3VyICogY3VyKSAlIG1vZCk7CiAgICAgICAgZXhwID4+PSAxOwogICAgfQogICAgcmV0dXJuIHJlc3VsdDsKfQoKLy8gUHJlY29tcHV0ZSBmYWN0b3JpYWxzIGFuZCBpbnZlcnNlIGZhY3RvcmlhbHMgZm9yIENhdGFsYW4gbnVtYmVycwpzdHJ1Y3QgRmFjdCB7CiAgICB2ZWN0b3I8aW50PiBmYWN0LCBpbnZmYWN0OwogICAgRmFjdChpbnQgbikgewogICAgICAgIGZhY3QucmVzaXplKG4gKyAxKTsKICAgICAgICBpbnZmYWN0LnJlc2l6ZShuICsgMSk7CiAgICAgICAgZmFjdFswXSA9IDE7CiAgICAgICAgZm9yIChpbnQgaSA9IDE7IGkgPD0gbjsgaSsrKSB7CiAgICAgICAgICAgIGZhY3RbaV0gPSAoaW50KSgoMUxMICogZmFjdFtpIC0gMV0gKiBpKSAlIE1PRCk7CiAgICAgICAgfQogICAgICAgIGludmZhY3Rbbl0gPSBtb2Rwb3coZmFjdFtuXSwgTU9EIC0gMik7CiAgICAgICAgZm9yIChpbnQgaSA9IG4gLSAxOyBpID49IDA7IGktLSkgewogICAgICAgICAgICBpbnZmYWN0W2ldID0gKGludCkoKDFMTCAqIGludmZhY3RbaSArIDFdICogKGkgKyAxKSkgJSBNT0QpOwogICAgICAgIH0KICAgIH0KICAgIGludCBuQ3IoaW50IG4sIGludCByKSB7CiAgICAgICAgaWYgKHIgPiBuIHx8IHIgPCAwKSByZXR1cm4gMDsKICAgICAgICByZXR1cm4gKGludCkoKDFMTCAqIGZhY3Rbbl0gKiBpbnZmYWN0W3JdICUgTU9EKSAqIGludmZhY3RbbiAtIHJdICUgTU9EKTsKICAgIH0KICAgIGludCBjYXRhbGFuKGludCBuKSB7CiAgICAgICAgaWYgKG4gPT0gMCkgcmV0dXJuIDE7CiAgICAgICAgLy8gQ19uID0gKDEvKG4rMSkpICogQygybixuKSBtb2QKICAgICAgICBpbnQgYyA9IG5DcigyICogbiwgbik7CiAgICAgICAgYyA9IChpbnQpKCgxTEwgKiBjICogbW9kcG93KG4gKyAxLCBNT0QgLSAyKSkgJSBNT0QpOwogICAgICAgIHJldHVybiBjOwogICAgfQp9OwoKLy8gU2VnbWVudCB0cmVlIHRvIHN0b3JlIHRoZSBwcm9kdWN0IG9mIHdheXMgZm9yIGludGVydmFscwovLyBXZSB3aWxsIHJlcHJlc2VudCB0aGUgYmFsYW5jZWQgc2VxdWVuY2UgYXMgaW50ZXJ2YWxzIG9mIGdvb2QgcGFpcnMuCi8vIFRoZSBjbHVlcyBidWlsZCBhIGZvcmVzdCBvZiBpbnRlcnZhbHMsIGVhY2ggY29ycmVzcG9uZGluZyB0byBhIGJhbGFuY2VkIHN1YnNlcXVlbmNlLgoKLy8gV2Ugd2lsbCB1c2UgYSBkYXRhIHN0cnVjdHVyZSB0byBtYWludGFpbiB0aGUga25vd24gaW50ZXJ2YWxzIGFuZCBtdWx0aXBseSB0aGVpciBjYXRhbGFuIGNvdW50cy4KCi8vIFRoZSBtYWluIGluc2lnaHQgaXMgdGhhdCBlYWNoIGNsdWUgKGwscikgY29ycmVzcG9uZHMgdG8gYSBrbm93biBnb29kIHBhaXIgaW50ZXJ2YWwuCi8vIFRoZSBpbnRlcnZhbHMgYXJlIG5vbi1vdmVybGFwcGluZyBvciBuZXN0ZWQgYWNjb3JkaW5nIHRvIHRoZSBwcm9ibGVtIGNvbnN0cmFpbnRzLgoKLy8gV2Ugd2lsbCBtYWludGFpbiBhIGRhdGEgc3RydWN0dXJlIG9mIGRpc2pvaW50IGludGVydmFscyBjb3ZlcmluZyBwYXJ0cyBvZiBbMS4uMm5dLgovLyBJbml0aWFsbHksIG5vIGludGVydmFscyBhcmUga25vd24sIHNvIHRoZSBudW1iZXIgb2Ygc2VxdWVuY2VzIGlzIGNhdGFsYW4obikuCi8vIEFmdGVyIGFkZGluZyBlYWNoIGludGVydmFsLCB3ZSBtZXJnZSBpbnRlcnZhbHMgYXMgbmVlZGVkIGFuZCB1cGRhdGUgdGhlIHByb2R1Y3Qgb2YgY2F0YWxhbiBjb3VudHMuCgovLyBCZWNhdXNlIGludGVydmFscyBjYW4gYmUgbmVzdGVkIGFuZC9vciBjb25jYXRlbmF0ZWQsIGludGVydmFscyBmb3JtIGEgcGFydGl0aW9uIG9mIFsxLi4ybl0uCgovLyBEYXRhIHN0cnVjdHVyZXM6Ci8vIG1hcDxpbnQsaW50PiBpbnRlcnZhbHM7IC8vIGtleSA9IGxlZnQgZW5kcG9pbnQsIHZhbHVlID0gcmlnaHQgZW5kcG9pbnQKLy8gbWFwPGludCxpbnQ+IHdheXM7IC8vIGtleSA9IGxlZnQgZW5kcG9pbnQsIHZhbHVlID0gbnVtYmVyIG9mIHdheXMgZm9yIGludGVydmFsCgoKaW50IG1haW4oKSB7CiAgICBpb3M6OnN5bmNfd2l0aF9zdGRpbyhmYWxzZSk7CiAgICBjaW4udGllKG51bGxwdHIpOwoKICAgIGludCB0OyBjaW4gPj4gdDsKCiAgICAvLyBCZWNhdXNlIHN1bSBvZiBuIGNhbiBiZSB1cCB0byAzKjEwXjUsIHByZWNvbXB1dGUgZmFjdG9yaWFscyB1cCB0byA2KjEwXjUKICAgIC8vIChzaW5jZSBtYXggMipuID0gdXAgdG8gNioxMF41KQogICAgRmFjdCBmYWN0KDYwMDAwMCk7CgogICAgd2hpbGUgKHQtLSkgewogICAgICAgIGludCBuOyBjaW4gPj4gbjsKICAgICAgICB2ZWN0b3I8cGFpcjxpbnQsaW50Pj4gY2x1ZXMobik7CiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgY2luID4+IGNsdWVzW2ldLmZpcnN0ID4+IGNsdWVzW2ldLnNlY29uZDsKICAgICAgICB9CgogICAgICAgIC8vIEluaXRpYWxseSwgZnVsbCBpbnRlcnZhbCBbMSwybl0gaXMgdW5rbm93biA9PiB3YXlzID0gY2F0YWxhbihuKQogICAgICAgIC8vIFdlIG1haW50YWluIGludGVydmFscyBvZiBrbm93biBnb29kIHBhaXJzLCBlYWNoIHdpdGggd2F5cyBjb21wdXRlZAogICAgICAgIC8vIEluaXRpYWxseSBubyBrbm93biBpbnRlcnZhbHMsIHNvIHdheXMgPSBjYXRhbGFuKG4pCgogICAgICAgIC8vIFdlJ2xsIHVzZSBhIG1hcCBmcm9tIGxlZnQgZW5kcG9pbnQgdG8gcGFpcihyaWdodCBlbmRwb2ludCwgd2F5cykKICAgICAgICAvLyBpbnRlcnZhbHMgYXJlIGRpc2pvaW50IGFuZCBjb3ZlciBwYXJ0IG9mIFsxLi4ybl0KCiAgICAgICAgbWFwPGludCwgcGFpcjxpbnQsaW50Pj4gaW50ZXJ2YWxzOwoKICAgICAgICAvLyBJbml0aWFsbHkgbm8gaW50ZXJ2YWxzIGtub3duCiAgICAgICAgLy8gdG90YWwgd2F5cyA9IGNhdGFsYW4obikKICAgICAgICBpbnQgdG90YWxfd2F5cyA9IGZhY3QuY2F0YWxhbihuKTsKCiAgICAgICAgLy8gT3V0cHV0IGFuc3dlciBiZWZvcmUgYW55IGNsdWVzCiAgICAgICAgY291dCA8PCB0b3RhbF93YXlzOwoKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG47IGkrKykgewogICAgICAgICAgICBpbnQgbCA9IGNsdWVzW2ldLmZpcnN0OwogICAgICAgICAgICBpbnQgciA9IGNsdWVzW2ldLnNlY29uZDsKCiAgICAgICAgICAgIC8vIFdlIGFkZCBpbnRlcnZhbCBbbCxyXSByZXByZXNlbnRpbmcgYSBrbm93biBnb29kIHBhaXIKICAgICAgICAgICAgLy8gV2UgbmVlZCB0byBtZXJnZSBpbnRlcnZhbHMgb3ZlcmxhcHBpbmcgb3IgYWRqYWNlbnQgd2l0aCBbbCxyXQoKICAgICAgICAgICAgLy8gRmluZCBpbnRlcnZhbHMgb3ZlcmxhcHBpbmcgb3IgYWRqYWNlbnQgd2l0aCBbbCxyXQogICAgICAgICAgICBhdXRvIGl0ID0gaW50ZXJ2YWxzLmxvd2VyX2JvdW5kKGwpOwogICAgICAgICAgICAvLyBDaGVjayBpZiBwcmV2aW91cyBpbnRlcnZhbCBvdmVybGFwcyBvciBhZGphY2VudAogICAgICAgICAgICBpZiAoaXQgIT0gaW50ZXJ2YWxzLmJlZ2luKCkpIHsKICAgICAgICAgICAgICAgIGF1dG8gcHJldiA9IHByZXYoaXQpOwogICAgICAgICAgICAgICAgaWYgKHByZXYtPnNlY29uZC5maXJzdCA+PSBsIC0gMSkgewogICAgICAgICAgICAgICAgICAgIGl0ID0gcHJldjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaW50IG5ld19sID0gbCwgbmV3X3IgPSByOwogICAgICAgICAgICBsb25nIGxvbmcgbWVyZ2VkX3dheXMgPSAxOwoKICAgICAgICAgICAgLy8gV2Ugd2lsbCBtZXJnZSBvdmVybGFwcGluZyBpbnRlcnZhbHMKICAgICAgICAgICAgdmVjdG9yPG1hcDxpbnQscGFpcjxpbnQsaW50Pj46Oml0ZXJhdG9yPiB0b19lcmFzZTsKCiAgICAgICAgICAgIHdoaWxlIChpdCAhPSBpbnRlcnZhbHMuZW5kKCkgJiYgaXQtPmZpcnN0IDw9IHIgKyAxKSB7CiAgICAgICAgICAgICAgICBpbnQgaWwgPSBpdC0+Zmlyc3Q7CiAgICAgICAgICAgICAgICBpbnQgaXIgPSBpdC0+c2Vjb25kLmZpcnN0OwogICAgICAgICAgICAgICAgaW50IGl3ID0gaXQtPnNlY29uZC5zZWNvbmQ7CgogICAgICAgICAgICAgICAgaWYgKGlyIDwgbCkgewogICAgICAgICAgICAgICAgICAgICsraXQ7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy8gTWVyZ2UgaW50ZXJ2YWxzCiAgICAgICAgICAgICAgICBtZXJnZWRfd2F5cyA9IChtZXJnZWRfd2F5cyAqIDFMTCAqIGl3KSAlIE1PRDsKCiAgICAgICAgICAgICAgICBuZXdfbCA9IG1pbihuZXdfbCwgaWwpOwogICAgICAgICAgICAgICAgbmV3X3IgPSBtYXgobmV3X3IsIGlyKTsKCiAgICAgICAgICAgICAgICB0b19lcmFzZS5wdXNoX2JhY2soaXQpOwogICAgICAgICAgICAgICAgKytpdDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gUmVtb3ZlIG9sZCBpbnRlcnZhbHMKICAgICAgICAgICAgZm9yIChhdXRvICZyZW1faXQgOiB0b19lcmFzZSkgewogICAgICAgICAgICAgICAgLy8gUmVtb3ZlIG9sZCB3YXlzIGZyb20gdG90YWwKICAgICAgICAgICAgICAgIHRvdGFsX3dheXMgPSAoaW50KSgoMUxMICogdG90YWxfd2F5cyAqIG1vZHBvdyhyZW1faXQtPnNlY29uZC5zZWNvbmQsIE1PRC0yKSkgJSBNT0QpOwogICAgICAgICAgICAgICAgaW50ZXJ2YWxzLmVyYXNlKHJlbV9pdCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIENhbGN1bGF0ZSB3YXlzIGZvciB0aGUgbmV3IG1lcmdlZCBpbnRlcnZhbAogICAgICAgICAgICAvLyBUaGUgaW50ZXJ2YWwgbGVuZ3RoIGlzIG5ld19yIC0gbmV3X2wgKyAxCiAgICAgICAgICAgIGludCBsZW5ndGggPSBuZXdfciAtIG5ld19sICsgMTsKICAgICAgICAgICAgaW50IHBhaXJzX2luX2ludGVydmFsID0gbGVuZ3RoIC8gMjsKICAgICAgICAgICAgaW50IHdheXNfaW50ZXJ2YWwgPSBmYWN0LmNhdGFsYW4ocGFpcnNfaW5faW50ZXJ2YWwpOwoKICAgICAgICAgICAgLy8gUmVtb3ZlIHRoZSB3YXlzIGZvciB0aGUgbWVyZ2VkIGludGVydmFscyBhbmQgYWRkIHdheXNfaW50ZXJ2YWwKICAgICAgICAgICAgbWVyZ2VkX3dheXMgPSAobWVyZ2VkX3dheXMgKiAxTEwgKiB3YXlzX2ludGVydmFsKSAlIE1PRDsKCiAgICAgICAgICAgIC8vIEhvd2V2ZXIsIG1lcmdlZF93YXlzIGluY2x1ZGVzIHRoZSBvbGQgaW50ZXJ2YWxzJyB3YXlzIG11bHRpcGxpZWQgYnkgd2F5c19pbnRlcnZhbCBhZ2Fpbj8KICAgICAgICAgICAgLy8gQWN0dWFsbHksIHRoZSBuZXcgaW50ZXJ2YWwgY292ZXJzIGFsbCBtZXJnZWQgaW50ZXJ2YWxzLCBzbyBpdHMgd2F5cyBpcyBjYXRhbGFuKHBhaXJzX2luX2ludGVydmFsKS4KICAgICAgICAgICAgLy8gVGhlIG9sZCBpbnRlcnZhbHMgd2F5cyBhcmUgcmVtb3ZlZCBmcm9tIHRvdGFsX3dheXMgYWxyZWFkeS4KICAgICAgICAgICAgLy8gU28gd2Ugc2hvdWxkIGFkZCB3YXlzX2ludGVydmFsIG9uY2UuCgogICAgICAgICAgICAvLyBBZGQgdGhlIG5ldyBpbnRlcnZhbAogICAgICAgICAgICBpbnRlcnZhbHNbbmV3X2xdID0ge25ld19yLCB3YXlzX2ludGVydmFsfTsKCiAgICAgICAgICAgIC8vIFVwZGF0ZSB0b3RhbCB3YXlzCiAgICAgICAgICAgIHRvdGFsX3dheXMgPSAoaW50KSgoMUxMICogdG90YWxfd2F5cyAqIHdheXNfaW50ZXJ2YWwpICUgTU9EKTsKCiAgICAgICAgICAgIGNvdXQgPDwgIiAiIDw8IHRvdGFsX3dheXM7CiAgICAgICAgfQogICAgICAgIGNvdXQgPDwgIlxuIjsKICAgIH0KICAgIHJldHVybiAwOwp9Cg==' | base64 -d > /app/main.cpp", 'Enter']
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
['C-d']
