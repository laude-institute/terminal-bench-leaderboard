{
    "id": "c33a880c-8d6e-48cc-90c3-7fb89f3f5670",
    "trial_name": "lcbpro-1983c.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-1983c",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1983C)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nAlice, Bob and Charlie want to share a rectangular cake cut into $n$ pieces. Each person considers every piece to be worth a different value. The $i$-th piece is considered to be of value $a_i$ by Alice, $b_i$ by Bob and $c_i$ by Charlie.\n\nThe sum over all $a_i$, all $b_i$ and all $c_i$ individually is the same, equal to $tot$.\n\nGiven the values of each piece of the cake for each person, you need to give each person a contiguous slice of cake. In other words, the indices at the left and right ends of these subarrays (the slices given to each person) can be represented as $(l_a, r_a)$, $(l_b, r_b)$ and $(l_c, r_c)$ respectively for Alice, Bob and Charlie. The division needs to satisfy the following constraints:\n\n- No piece is assigned to more than one person, i.e., no two subarrays among $[l_a,\\ldots,r_a]$, $[l_b, \\ldots, r_b]$ and $[l_c, \\ldots, r_c]$ intersect.\n- $ \\sum_{i = l_a}^{r_a} a_i, \\sum_{i = l_b}^{r_b} b_i, \\sum_{i = l_c}^{r_c} c_i \\geq \\lceil \\frac{tot}{3} \\rceil$.\n\nHere, the notation $\\lceil \\frac{a}{b} \\rceil$ represents ceiling division. It is defined as the smallest integer greater than or equal to the exact division of $a$ by $b$. In other words, it rounds up the division result to the nearest integer. For instance $\\lceil \\frac{10}{3} \\rceil = 4$ and $\\lceil \\frac{15}{3} \\rceil = 5$.\n\n### Input\n\nThe first line contains an integer $t$, the number of testcases, ($1 \\le t \\le 10^4$)\n\nFor each testcase:\n\nThe first line contains the integer $n$ ($3 \\le n \\le 2 \\cdot 10^5$).\n\nThe following three lines contain $n$ integers each:\n\nOne line with $n$ integers $a_1, a_2, \\ldots, a_n$ represents the values for Alice ($1 \\le a_i \\le 10^6$).\n\nThe next line with $n$ integers $b_1, b_2, \\ldots, b_n$ represents the values for Bob ($1 \\le b_i \\le 10^6$).\n\nThe next line with $n$ integers $c_1, c_2, \\ldots, c_n$ represents the values for Charlie ($1 \\le c_i \\le 10^6$).\n\nIt is guaranteed that $ \\sum_{i = 1}^{n} a_i = \\sum_{i = 1}^{n} b_i = \\sum_{i = 1}^{n} c_i$.\n\nThe sum of $n$ over all testcases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each testcase, output $-1$ if the required condition is impossible.\n\nOtherwise, output six numbers -- $l_a, r_a, l_b, r_b, l_c, r_c$, the respective starting and ending indices ($1$-indexed) of the subarrays for Alice, Bob and Charlie, respectively.\n\n### Example\n\n#### Input #1\n\n```\n\n10\n\n5\n\n5 1 1 1 1\n\n1 1 5 1 1\n\n1 1 1 1 5\n\n6\n\n1 2 3 4 5 6\n\n5 6 1 2 3 4\n\n3 4 5 6 1 2\n\n4\n\n4 4 4 4\n\n4 4 4 4\n\n4 4 4 4\n\n5\n\n5 10 5 2 10\n\n9 6 9 7 1\n\n10 7 10 2 3\n\n3\n\n4 5 2\n\n6 1 4\n\n1 8 2\n\n3\n\n10 4 10\n\n8 7 9\n\n10 4 10\n\n7\n\n57113 65383 19795 53580 74452 3879 23255\n\n12917 16782 89147 93107 27365 15044 43095\n\n33518 63581 33565 34112 46774 44151 41756\n\n6\n\n6 3 1 8 7 1\n\n10 2 6 2 2 4\n\n10 9 2 1 2 2\n\n5\n\n5 5 4 5 5\n\n1 6 3 8 6\n\n2 4 1 9 8\n\n10\n\n1 1 1 1 1001 1 1 1001 1 1\n\n1 1 1 1 1 1 2001 1 1 1\n\n1 1 1 1 1 1001 1 1 1 1001\n\n```\n\n#### Output #1\n\n```\n1 1 2 3 4 5\n5 6 1 2 3 4\n-1\n-1\n1 1 3 3 2 2\n-1\n1 2 3 4 5 7\n3 6 1 1 2 2\n1 2 3 4 5 5\n1 5 6 7 8 10\n```\n\n### Note\n\nIn the first testcase, the sum of either of the three arrays is $9$. Each person needs a cake slice corresponding to a subarray with a total value of at least $\\lceil \\frac{9}{3} \\rceil = 3$.\n\nIf we assign the subarray ($1$,$1$) to Alice, its total value to her is $5$, which is $\\ge 3$; the subarray ($2$,$3$) to Bob, its total value to him is $1 + 5 = 6$, which is $\\ge 3$; and the subarray ($4$,$5$) to Charlie, its total value to him $1 + 5 = 6$, which is also $\\ge 3$. Each person gets their own separate pieces of the cake, and no piece is common to two or more people.\n\nIt can be shown that for the third test case, it is not possible to give slices of the cake in a way that satisfies the given constraints.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-1983c/lcbpro-1983c.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1852,
    "total_output_tokens": 1735,
    "trial_started_at": "2025-09-06T01:16:28.592530+00:00",
    "trial_ended_at": "2025-09-06T01:17:42.091718+00:00",
    "agent_started_at": "2025-09-06T01:16:43.033000+00:00",
    "agent_ended_at": "2025-09-06T01:17:19.399907+00:00",
    "test_started_at": "2025-09-06T01:17:21.893501+00:00",
    "test_ended_at": "2025-09-06T01:17:25.753465+00:00"
}