{
    "id": "10e60370-5039-417a-80c0-628df4c1bccd",
    "trial_name": "lcbpro-2051f.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2051f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2051F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nConsider a deck of $n$ cards. The positions in the deck are numbered from $1$ to $n$ from top to bottom. A joker is located at position $m$.\n\n$q$ operations are applied sequentially to the deck. During the $i$-th operation, you need to take the card at position $a_i$ and move it either to the beginning or to the end of the deck. For example, if the deck is $[2, 1, 3, 5, 4]$, and $a_i=2$, then after the operation the deck will be either $[1, 2, 3, 5, 4]$ (the card from the second position moved to the beginning) or $[2, 3, 5, 4, 1]$ (the card from the second position moved to the end).\n\nYour task is to calculate the number of distinct positions where the joker can be after each operation.\n\n### Input\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$) -- the number of test cases.\n\nThe first line of each test case contains three integers $n$, $m$, and $q$ ($2 \\le n \\le 10^9$; $1 \\le m \\le n$; $1 \\le q \\le 2 \\cdot 10^5$).\n\nThe second line contains $q$ integers $a_1, a_2, \\dots, a_q$ ($1 \\le a_i \\le n$).\n\nAdditional constraint on the input: the sum of $q$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, print $q$ integers -- the number of distinct positions where the joker can be after each operation.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n6 5 3\n\n1 2 3\n\n2 1 4\n\n2 1 1 2\n\n5 3 1\n\n3\n\n3 2 4\n\n2 1 1 1\n\n18 15 4\n\n13 15 1 16\n\n```\n\n#### Output #1\n\n```\n2 3 5\n2 2 2 2\n2\n2 3 3 3\n2 4 6 8\n```",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2051f/lcbpro-2051f.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 916,
    "total_output_tokens": 344,
    "trial_started_at": "2025-09-06T01:39:49.667607+00:00",
    "trial_ended_at": "2025-09-06T01:40:42.353887+00:00",
    "agent_started_at": "2025-09-06T01:40:14.926997+00:00",
    "agent_ended_at": "2025-09-06T01:40:19.840511+00:00",
    "test_started_at": "2025-09-06T01:40:24.032629+00:00",
    "test_ended_at": "2025-09-06T01:40:27.190466+00:00"
}