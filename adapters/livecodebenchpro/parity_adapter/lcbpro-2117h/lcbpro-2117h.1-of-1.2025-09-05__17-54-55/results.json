{
    "id": "ea53eb18-2d32-4eaf-b812-266787a291d6",
    "trial_name": "lcbpro-2117h.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2117h",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2117H)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nNote the unusual memory limit.\n\nSilver Wolf gives you an array $a$ of length $n$ and $q$ queries. In each query, she replaces an element in $a$. After each query, she asks you to output the maximum integer $k$ such that there exists an integer $x$ such that it is the $k$-majority of a subarray$^{\\text{∗}}$ of $a$.\n\nAn integer $y$ is the $k$-majority of array $b$ if $y$ appears at least $\\lfloor \\frac{|b|+1}{2} \\rfloor +k$ times in $b$, where $|b|$ represents the length of $b$. Note that $b$ may not necessarily have a $k$-majority.\n\n$^{\\text{∗}}$An array $b$ is a subarray of an array $a$ if $b$ can be obtained from $a$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.\n\n### Input\n\nThe first line contains an integer $t$ ($1 \\leq t \\leq 10^4$)  -- the number of test cases.\n\nThe first line of each test case contains two integers $n$ and $q$ ($1 \\leq n, q \\leq 3 \\cdot 10^5$)  -- the length of $a$ and the number of queries.\n\nThe following line contains $n$ space-separated integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq n$).\n\nThe following $q$ lines contain two integers $i$ and $x$, denoting the query that replaces $a_i$ with $x$ ($1 \\leq i, x \\leq n$).\n\nIt is guaranteed that the sum of $n$ and the sum of $q$ over all test cases does not exceed $3 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output the answer to all queries on a single new line, separated by a space.\n\n### Example\n\n#### Input #1\n\n```\n\n2\n\n5 5\n\n1 2 3 4 5\n\n3 4\n\n1 4\n\n2 4\n\n4 3\n\n2 3\n\n7 8\n\n3 2 3 3 2 2 3\n\n2 3\n\n5 3\n\n6 3\n\n3 4\n\n4 4\n\n7 4\n\n6 4\n\n2 4\n\n```\n\n#### Output #1\n\n```\n1 1 2 1 0\n2 2 3 2 1 1 1 2\n```",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2117h/lcbpro-2117h.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1010,
    "total_output_tokens": 2407,
    "trial_started_at": "2025-09-06T00:57:54.756119+00:00",
    "trial_ended_at": "2025-09-06T00:59:27.759481+00:00",
    "agent_started_at": "2025-09-06T00:58:12.619549+00:00",
    "agent_ended_at": "2025-09-06T00:58:52.382572+00:00",
    "test_started_at": "2025-09-06T00:58:55.294699+00:00",
    "test_ended_at": "2025-09-06T00:59:01.746481+00:00"
}