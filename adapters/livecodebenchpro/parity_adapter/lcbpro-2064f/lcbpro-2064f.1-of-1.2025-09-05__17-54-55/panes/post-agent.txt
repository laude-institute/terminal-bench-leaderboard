root@29eeb0cd96ca:/app# echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgppbnQgbWFpbigpIHsKICAgIGlvczo6c3luY193aXRoX3N0ZGlvKGZhbHNlKTsKICAgIG
Npbi50aWUobnVsbHB0cik7CgogICAgaW50IHQ7CiAgICBjaW4gPj4gdDsKICAgIHdoaWxlKHQtLSkgewogICAgICAgIGludCBuLCBrOwogICAgICAgIGNpbiA+PiBuID4+IGs7CiAgICAgICAgdmVjdG9yPGludD
4gYShuKTsKICAgICAgICBmb3IoaW50IGkgPSAwOyBpIDwgbjsgaSsrKSBjaW4gPj4gYVtpXTsKCiAgICAgICAgLy8gV2Ugd2FudCB0byBjb3VudCB0aGUgbnVtYmVyIG9mIHN1YmFycmF5cyBiIHdoZXJlIGV4aX
N0cyBpICgxIDw9IGkgPCBtKQogICAgICAgIC8vIHN1Y2ggdGhhdCBtaW4oYlsxLi5pXSkgKyBtYXgoYltpKzEuLm1dKSA9IGsKCiAgICAgICAgLy8gQXBwcm9hY2g6CiAgICAgICAgLy8gRm9yIGVhY2ggc3ViYX
JyYXksIGNvbnNpZGVyIGFsbCBwb3NzaWJsZSBzcGxpdHMuCiAgICAgICAgLy8gQnV0IHRoaXMgaXMgTyhuXjMpIG5haXZlLgoKICAgICAgICAvLyBJbnN0ZWFkLCBmaXggdGhlIHN1YmFycmF5IFtsLCByXS4gRm
9yIGVhY2ggcG9zaXRpb24gaSBpbiBbbCwgci0xXSwKICAgICAgICAvLyBjaGVjayBpZiBtaW4gaW4gW2wsaV0gKyBtYXggaW4gW2krMSxyXSA9PSBrLgoKICAgICAgICAvLyBUbyBvcHRpbWl6ZToKICAgICAgIC
AvLyBXZSBjYW4gZml4IHRoZSBzcGxpdCBwb2ludCBpLCBhbmQgY291bnQgc3ViYXJyYXlzIHdoZXJlIG1pbiBvbiBsZWZ0CiAgICAgICAgLy8gYW5kIG1heCBvbiByaWdodCBzYXRpc2Z5IHRoZSBjb25kaXRpb2
4uCgogICAgICAgIC8vIE9ic2VydmF0aW9uOgogICAgICAgIC8vIEZvciBmaXhlZCBpLCBtaW4gb24gW2wsaV0gY2FuIGJlIG1haW50YWluZWQgYnkgYSBtb25vdG9uaWMgc3RhY2svZGVxdWUgZ29pbmcgbGVmdC
4KICAgICAgICAvLyBtYXggb24gW2krMSxyXSBhbHNvIG1haW50YWluZWQgYnkgYW5vdGhlciBzdHJ1Y3R1cmUgZ29pbmcgcmlnaHQuCgogICAgICAgIC8vIEhvd2V2ZXIsIHRoaXMgaXMgc3RpbGwgY29tcGxleC
4KCiAgICAgICAgLy8gQWx0ZXJuYXRpdmUgYXBwcm9hY2g6CiAgICAgICAgLy8gRm9yIGVhY2ggc3BsaXQgcG9pbnQgaSAoMSA8PSBpIDwgbiksCiAgICAgICAgLy8gV2Ugd2FudCB0byBmaW5kIGNvdW50IG9mIH
BhaXJzIChsLCByKSB3aXRoIGwgPD0gaSA8IHIsCiAgICAgICAgLy8gc3VjaCB0aGF0IG1pbihhW2wuLmldKSArIG1heChhW2krMS4ucl0pID09IGsuCgogICAgICAgIC8vIFNvIGZvciBlYWNoIGksIHdlIGNvbn
NpZGVyIHJhbmdlcyBbbC4uaV0gYW5kIFtpKzEuLnJdLgoKICAgICAgICAvLyBUbyBlZmZpY2llbnRseSBwcm9jZXNzIG1pbiBhbmQgbWF4IGZvciBpbnRlcnZhbHMgZW5kaW5nIG9yIHN0YXJ0aW5nIGF0IGksCi
AgICAgICAgLy8gd2UgY2FuIHByZWNvbXB1dGUgc3RydWN0dXJlcyB0byBxdWVyeSBtaW4vbWF4IG9uIGludGVydmFscy4KCiAgICAgICAgLy8gQnV0IHN0aWxsIHRyaWNreSB0byBjb3VudCBlZmZpY2llbnRseS
4KCiAgICAgICAgLy8gQW5vdGhlciBpZGVhOgogICAgICAgIC8vIFNpbmNlIGFfaSBpbiBbMS4ubl0sIGFuZCBrIGluIChuLCAybiksIHdlIGNhbiBwcmVjb21wdXRlIHByZWZpeCBtaW5zIGFuZCBzdWZmaXggbW
F4cy4KCiAgICAgICAgLy8gRm9yIGVhY2ggaSwgd2UgZml4IGxlZnQgc2lkZSBtaW4gdmFsdWVzIGZvciBpbnRlcnZhbHMgZW5kaW5nIGF0IGkuCiAgICAgICAgLy8gRm9yIGVhY2ggbWluIHZhbHVlLCB3ZSByZW
NvcmQgdGhlIGxlZnRtb3N0IHBvc2l0aW9uIGwgd2hlcmUgbWluIGlzIHRoYXQgdmFsdWUgZm9yIFtsLi5pXS4KCiAgICAgICAgLy8gU2ltaWxhcmx5IGZvciByaWdodCBzaWRlIG1heCBpbnRlcnZhbHMgc3Rhcn
RpbmcgYXQgaSsxLgoKICAgICAgICAvLyBUaGVuIHRyeSB0byBtYXRjaCBwYWlycyBtaW4gKyBtYXggPSBrLgoKICAgICAgICAvLyBXZSB3aWxsIGltcGxlbWVudCBhIHR3byBwb2ludGVyIGFwcHJvYWNoIHdpdG
ggc3RhY2tzIHRvIGdlbmVyYXRlIGFsbCBtaW4gaW50ZXJ2YWxzIGVuZGluZyBhdCBpLAogICAgICAgIC8vIGFuZCBhbGwgbWF4IGludGVydmFscyBzdGFydGluZyBhdCBpKzEuCgogICAgICAgIC8vIFdlIHdpbG
wgZ2F0aGVyIGludGVydmFscyBmb3IgZWFjaCBpIGFuZCBjb3VudCBwYWlycyB3aXRoIG1pbiArIG1heCA9IGsuCgogICAgICAgIC8vIEltcGxlbWVudGF0aW9uIGRldGFpbDoKICAgICAgICAvLyBGb3IgZWFjaC
BpOgogICAgICAgIC8vICAgLSBnZXQgYSB2ZWN0b3Igb2YgKG1pbl92YWx1ZSwgY291bnRfb2ZfaW50ZXJ2YWxzKSBmb3IgYWxsIHN1YmFycmF5cyBlbmRpbmcgYXQgaQogICAgICAgIC8vICAgLSBnZXQgYSB2ZW
N0b3Igb2YgKG1heF92YWx1ZSwgY291bnRfb2ZfaW50ZXJ2YWxzKSBmb3IgYWxsIHN1YmFycmF5cyBzdGFydGluZyBhdCBpKzEKICAgICAgICAvLyAgIC0gbWVyZ2UgY291bnRfb2ZfaW50ZXJ2YWxzIHdoZXJlIG
1pbl92YWx1ZSArIG1heF92YWx1ZSA9IGsKCiAgICAgICAgLy8gVG8gZ2V0IGludGVydmFscyB3aXRoIG1pbiBlbmRzIGF0IGk6CiAgICAgICAgLy8gVXNlIGEgbW9ub3RvbmljIGluY3JlYXNpbmcgc3RhY2sgZm
9yIG1pbgogICAgICAgIC8vIEZvciBtYXggc3RhcnQgYXQgaSsxOgogICAgICAgIC8vIFVzZSBhIG1vbm90b25pYyBkZWNyZWFzaW5nIHN0YWNrIGZvciBtYXgKCiAgICAgICAgLy8gRmluYWxseSBzdW0gYWxsIG
NvdW50cwoKICAgICAgICAvLyBQcmVjb21wdXRlIG1pbiBpbnRlcnZhbHMgZW5kaW5nIGF0IGVhY2ggcG9zaXRpb24KICAgICAgICB2ZWN0b3I8dmVjdG9yPHBhaXI8aW50LGludD4+PiBtaW5faW50ZXJ2YWxzKG
4pOwogICAgICAgIHsKICAgICAgICAgICAgdmVjdG9yPGludD4gc3RhY2s7CiAgICAgICAgICAgIGludCBsYXN0ID0gMDsKICAgICAgICAgICAgZm9yKGludCBpID0gMDsgaSA8IG47IGkrKykgewogICAgICAgIC
AgICAgICAgaW50IGNvdW50ID0gMTsKICAgICAgICAgICAgICAgIHdoaWxlKCFzdGFjay5lbXB0eSgpICYmIGFbc3RhY2suYmFjaygpXSA+IGFbaV0pIHsKICAgICAgICAgICAgICAgICAgICBjb3VudCArPSBtaW
5faW50ZXJ2YWxzW2kgLSAxXVttaW5faW50ZXJ2YWxzW2kgLSAxXS5zaXplKCktMV0uc2Vjb25kOwogICAgICAgICAgICAgICAgICAgIHN0YWNrLnBvcF9iYWNrKCk7CiAgICAgICAgICAgICAgICAgICAgbWluX2
ludGVydmFsc1tpXS5wb3BfYmFjaygpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYobWluX2ludGVydmFsc1tpXS5lbXB0eSgpKSB7CiAgICAgICAgICAgICAgICAgICAgbWluX2ludGVydm
Fsc1tpXS5lbXBsYWNlX2JhY2soYVtpXSwgY291bnQpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBhdXRvICZsYXN0X3BhaXIgPSBtaW5faW50ZXJ2YWxzW2ldLmJhY2soKT
sKICAgICAgICAgICAgICAgICAgICBpZihsYXN0X3BhaXIuZmlyc3QgPT0gYVtpXSkgbGFzdF9wYWlyLnNlY29uZCArPSBjb3VudDsKICAgICAgICAgICAgICAgICAgICBlbHNlIG1pbl9pbnRlcnZhbHNbaV0uZW
1wbGFjZV9iYWNrKGFbaV0sIGNvdW50KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gVGhlIGFib3ZlIGNvZGUgaXMgd3JvbmcgYW5kIGluY29tcGxldGUsIG
xldCdzIHJld3JpdGUgcHJvcGVybHkKCiAgICAgICAgLy8gTGV0J3MgaW1wbGVtZW50IGEgZnVuY3Rpb24gdG8gZ2V0IGZvciBlYWNoIHBvc2l0aW9uIGksIGEgdmVjdG9yIG9mICh2YWx1ZSwgY291bnQpIG9mIG
ludGVydmFscyBlbmRpbmcgYXQgaSB3aXRoIHRoYXQgbWluCiAgICAgICAgYXV0byBnZXRfbWluX2ludGVydmFscyA9IFsmXShjb25zdCB2ZWN0b3I8aW50PiAmYXJyKSB7CiAgICAgICAgICAgIGludCBuID0gKG
ludClhcnIuc2l6ZSgpOwogICAgICAgICAgICB2ZWN0b3I8dmVjdG9yPHBhaXI8aW50LGludD4+PiByZXMobik7CiAgICAgICAgICAgIHZlY3RvcjxwYWlyPGludCxpbnQ+PiBzdGFjazsgLy8gcGFpcjogKHZhbH
VlLCBjb3VudCBvZiBpbnRlcnZhbHMpCiAgICAgICAgICAgIGZvcihpbnQgaT0wOyBpPG47IGkrKykgewogICAgICAgICAgICAgICAgaW50IGNvdW50ID0gMTsKICAgICAgICAgICAgICAgIHdoaWxlKCFzdGFjay
5lbXB0eSgpICYmIHN0YWNrLmJhY2soKS5maXJzdCA+PSBhcnJbaV0pIHsKICAgICAgICAgICAgICAgICAgICBjb3VudCArPSBzdGFjay5iYWNrKCkuc2Vjb25kOwogICAgICAgICAgICAgICAgICAgIHN0YWNrLn
BvcF9iYWNrKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBzdGFjay5lbXBsYWNlX2JhY2soYXJyW2ldLCBjb3VudCk7CiAgICAgICAgICAgICAgICByZXNbaV0gPSBzdGFjazsKICAgICAgIC
AgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzOwogICAgICAgIH07CgogICAgICAgIC8vIFNpbWlsYXJseSBmb3IgbWF4IGludGVydmFscyBzdGFydGluZyBhdCBpCiAgICAgICAgYXV0byBnZXRfbWF4X2ludG
VydmFscyA9IFsmXShjb25zdCB2ZWN0b3I8aW50PiAmYXJyKSB7CiAgICAgICAgICAgIGludCBuID0gKGludClhcnIuc2l6ZSgpOwogICAgICAgICAgICB2ZWN0b3I8dmVjdG9yPHBhaXI8aW50LGludD4+PiByZX
Mobik7CiAgICAgICAgICAgIHZlY3RvcjxwYWlyPGludCxpbnQ+PiBzdGFjazsgLy8gcGFpcjogKHZhbHVlLCBjb3VudCBvZiBpbnRlcnZhbHMpCiAgICAgICAgICAgIGZvcihpbnQgaT1uLTE7IGk+PTA7IGktLS
kgewogICAgICAgICAgICAgICAgaW50IGNvdW50ID0gMTsKICAgICAgICAgICAgICAgIHdoaWxlKCFzdGFjay5lbXB0eSgpICYmIHN0YWNrLmJhY2soKS5maXJzdCA8PSBhcnJbaV0pIHsKICAgICAgICAgICAgIC
AgICAgICBjb3VudCArPSBzdGFjay5iYWNrKCkuc2Vjb25kOwogICAgICAgICAgICAgICAgICAgIHN0YWNrLnBvcF9iYWNrKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBzdGFjay5lbXBsYW
NlX2JhY2soYXJyW2ldLCBjb3VudCk7CiAgICAgICAgICAgICAgICByZXNbaV0gPSBzdGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzOwogICAgICAgIH07CgogICAgICAgIGF1dG8gbW
luX2ludGVydmFscyA9IGdldF9taW5faW50ZXJ2YWxzKGEpOwogICAgICAgIGF1dG8gbWF4X2ludGVydmFscyA9IGdldF9tYXhfaW50ZXJ2YWxzKGEpOwoKICAgICAgICBsb25nIGxvbmcgYW5zd2VyID0gMDsKCi
AgICAgICAgLy8gRm9yIGV2ZXJ5IHBvc3NpYmxlIHNwbGl0IGkgKGJldHdlZW4gMCBhbmQgbi0xKQogICAgICAgIC8vIFdlIHdhbnQgdG8gY291bnQgcGFpcnMgKG1pbl92YWx1ZSwgbWF4X3ZhbHVlKSB3aXRoIG
1pbl92YWx1ZSArIG1heF92YWx1ZSA9PSBrCiAgICAgICAgLy8gbWluX3ZhbHVlIGZyb20gaW50ZXJ2YWxzIGVuZGluZyBhdCBpCiAgICAgICAgLy8gbWF4X3ZhbHVlIGZyb20gaW50ZXJ2YWxzIHN0YXJ0aW5nIG
F0IGkrMQoKICAgICAgICBmb3IoaW50IGkgPSAwOyBpIDwgbi0xOyBpKyspIHsKICAgICAgICAgICAgLy8gR2V0IG1pbiBpbnRlcnZhbHMgZW5kaW5nIGF0IGkKICAgICAgICAgICAgLy8gRWFjaCBwYWlyOiAodm
FsdWUsIGNvdW50KQogICAgICAgICAgICB2ZWN0b3I8cGFpcjxpbnQsaW50Pj4gJm1pbnMgPSBtaW5faW50ZXJ2YWxzW2ldOwogICAgICAgICAgICAvLyBHZXQgbWF4IGludGVydmFscyBzdGFydGluZyBhdCBpKz
EKICAgICAgICAgICAgdmVjdG9yPHBhaXI8aW50LGludD4+ICZtYXhzID0gbWF4X2ludGVydmFsc1tpKzFdOwoKICAgICAgICAgICAgLy8gV2Ugd2lsbCB1c2UgdHdvIHBvaW50ZXJzIHRvIGZpbmQgcGFpcnMgdG
hhdCBzdW0gdG8gawogICAgICAgICAgICBpbnQgcDEgPSAwLCBwMiA9IChpbnQpbWF4cy5zaXplKCktMTsKICAgICAgICAgICAgd2hpbGUocDEgPCAoaW50KW1pbnMuc2l6ZSgpICYmIHAyID49IDApIHsKICAgIC
AgICAgICAgICAgIGludCBzdW0gPSBtaW5zW3AxXS5maXJzdCArIG1heHNbcDJdLmZpcnN0OwogICAgICAgICAgICAgICAgaWYoc3VtID09IGspIHsKICAgICAgICAgICAgICAgICAgICBhbnN3ZXIgKz0gMUxMIC
ogbWluc1twMV0uc2Vjb25kICogbWF4c1twMl0uc2Vjb25kOwogICAgICAgICAgICAgICAgICAgIHAxKys7CiAgICAgICAgICAgICAgICAgICAgcDItLTsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZihzdW0gPC
BrKSB7CiAgICAgICAgICAgICAgICAgICAgcDErKzsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcDItLTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgIC
AgIH0KCiAgICAgICAgY291dCA8PCBhbnN3ZXIgPDwgIlxuIjsKICAgIH0KCiAgICByZXR1cm4gMDsKfQo=' | base64 -d > /app/main.cpp; tmux wait -S done
root@29eeb0cd96ca:/app#
