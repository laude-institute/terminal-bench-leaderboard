{
    "id": "5444af71-2035-4f54-b173-805e7f7a6bbd",
    "trial_name": "lcbpro-2030a.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2030a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2030A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nWhile exploring the jungle, you have bumped into a rare orangutan with a bow tie! You shake hands with the orangutan and offer him some food and water. In return...\n\nThe orangutan has gifted you an array $a$ of length $n$. Using $a$, you will construct two arrays $b$ and $c$, both containing $n$ elements, in the following manner:\n\n- $b_i = \\min(a_1, a_2, \\ldots, a_i)$ for each $1 \\leq i \\leq n$.\n- $c_i = \\max(a_1, a_2, \\ldots, a_i)$ for each $1 \\leq i \\leq n$.\n\nDefine the score of $a$ as $\\sum_{i=1}^n c_i - b_i$ (i.e. the sum of $c_i - b_i$ over all $1 \\leq i \\leq n$). Before you calculate the score, you can shuffle the elements of $a$ however you want.\n\nFind the maximum score that you can get if you shuffle the elements of $a$ optimally.\n\n### Input\n\nThe first line contains $t$ ($1 \\leq t \\leq 100$) -- the number of test cases.\n\nThe first line of each test case contains an integer $n$ ($1 \\leq n \\leq 1000$) -- the number of elements in $a$.\n\nThe following line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 1000$) -- the elements of the array $a$.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $1000$.\n\n### Output\n\nFor each test case, output the maximum score that you can get.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n1\n\n69\n\n3\n\n7 6 5\n\n5\n\n1 1 1 2 2\n\n```\n\n#### Output #1\n\n```\n0\n4\n4\n```\n\n### Note\n\nIn the first test case, there is no other way to rearrange $a$. So, $b = [69]$ and $c = [69]$. The only possible score is $69 - 69 = 0$.\n\nIn the second test case, you can rearrange $a$ as $[7, 5, 6]$. Here, $b = [7, 5, 5]$ and $c = [7, 7, 7]$. The score in this case is $(7 - 7) + (7 - 5) + (7 - 5) = 4$. It can be shown this is the maximum possible score.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2030a/lcbpro-2030a.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1009,
    "total_output_tokens": 334,
    "trial_started_at": "2025-09-06T01:13:14.626611+00:00",
    "trial_ended_at": "2025-09-06T01:13:57.938436+00:00",
    "agent_started_at": "2025-09-06T01:13:28.633900+00:00",
    "agent_ended_at": "2025-09-06T01:13:33.123758+00:00",
    "test_started_at": "2025-09-06T01:13:36.778439+00:00",
    "test_ended_at": "2025-09-06T01:13:41.997343+00:00"
}