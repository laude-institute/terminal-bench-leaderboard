{
    "id": "00f59208-2724-46c6-be4c-ff318ceba39c",
    "trial_name": "lcbpro-2004a.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2004a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2004A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nConsider a set of points on a line. The distance between two points $i$ and $j$ is $|i - j|$.\n\nThe point $i$ from the set is the closest to the point $j$ from the set, if there is no other point $k$ in the set such that the distance from $j$ to $k$ is strictly less than the distance from $j$ to $i$. In other words, all other points from the set have distance to $j$ greater or equal to $|i - j|$.\n\nFor example, consider a set of points $\\{1, 3, 5, 8\\}$:\n\n- for the point $1$, the closest point is $3$ (other points have distance greater than $|1-3| = 2$);\n- for the point $3$, there are two closest points: $1$ and $5$;\n- for the point $5$, the closest point is $3$ (but not $8$, since its distance is greater than $|3-5|$);\n- for the point $8$, the closest point is $5$.\n\nYou are given a set of points. You have to add an integer point into this set in such a way that it is different from every existing point in the set, and it becomes the closest point to every point in the set. Is it possible?\n\n### Input\n\nThe first line contains one integer $t$ ($1 \\le t \\le 1000$) -- the number of test cases.\n\nEach test case consists of two lines:\n\n- the first line contains one integer $n$ ($2 \\le n \\le 40$) -- the number of points in the set;\n- the second line contains $n$ integers $x_1, x_2, \\dots, x_n$ ($1 \\le x_1 < x_2 < \\dots < x_n \\le 100$) -- the points from the set.\n\n### Output\n\nFor each test case, print YES if it is possible to add a new point according to the conditions from the statement. Otherwise, print NO.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n2\n\n3 8\n\n2\n\n5 6\n\n6\n\n1 2 3 4 5 10\n\n```\n\n#### Output #1\n\n```\nYES\nNO\nNO\n```\n\n### Note\n\nIn the first example, the point $7$ will be the closest to both $3$ and $8$.\n\nIn the second example, it is impossible to add an integer point so that it becomes the closest to both $5$ and $6$, and is different from both of them.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2004a/lcbpro-2004a.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 975,
    "total_output_tokens": 663,
    "trial_started_at": "2025-09-06T01:03:43.070499+00:00",
    "trial_ended_at": "2025-09-06T01:04:35.520211+00:00",
    "agent_started_at": "2025-09-06T01:03:58.096844+00:00",
    "agent_ended_at": "2025-09-06T01:04:12.867148+00:00",
    "test_started_at": "2025-09-06T01:04:16.108801+00:00",
    "test_ended_at": "2025-09-06T01:04:20.039839+00:00"
}