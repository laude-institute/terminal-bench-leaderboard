{"version": 2, "width": 160, "height": 40, "timestamp": 1757121940, "env": {"SHELL": "/bin/bash", "TERM": "tmux-256color"}}
[0.042898, "o", "\u001b[?2004hroot@0ddddc6ef50a:/app# "]
[0.719379, "i", "clear\r"]
[0.752814, "o", "clear\r\n\u001b[?2004l\r"]
[0.804331, "o", "\u001b[H\u001b[J\u001b[3J"]
[0.812655, "o", "\u001b[?2004hroot@0ddddc6ef50a:/app# "]
[36.518714, "i", "echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgovLyBQcm9ibGVtOiBMaXZlQ29kZUJlbmNoIFBybyAoTWluaSkgLSBleHRlcm5hbCBqdWRnZQovLyBBdXRob3I6IEFJIGFzc2lzdGFudAovLyBMYW5ndWFnZTogQysrMTcKCi8vIEV4cGxhbmF0aW9uOgovLyBXZSBuZWVkIHRvIHNlbGVjdCBhIHN1YmFycmF5IG9mIGRyaW5rcyBlYWNoIGRheS4KLy8gRm9yIGRheSAxLCBzZWxlY3QgYW55IHN1YmFycmF5IHRvIG1heGltaXplIHN1bS4KLy8gRm9yIHN1YnNlcXVlbnQgZGF5cywgdGhlIHN1YmFycmF5IG11c3Qgb3ZlcmxhcCB3aXRoIHByZXZpb3VzIGRheSdzIHN1YmFycmF5Ci8vIGJ1dCBub3QgYmUgaWRlbnRpY2FsIChtdXN0IGhhdmUgYXQgbGVhc3Qgb25lIG5ldyBhbmQgb25lIG92ZXJsYXBwaW5nIGRyaW5rIHR5cGUpLgovLyBIZW5jZSwgaW50ZXJ2YWxzIG11c3Qgc2hpZnQgYnkgYXQgbGVhc3Qgb25lIHBvc2l0aW9uIHRvIGxlZnQgb3IgcmlnaHQuCgovLyBBcHByb2FjaDoKLy8gVXNlIERQIHdpdGggc3RhdGVzIHJlcHJlc2VudGluZyB0aGUgY2hvc2VuIGludGVydmFsIFtsLCByXSBvbiBwcmV2aW91cyBkYXkuCi8vIEJ1dCBtIGNhbiBiZSBsYXJnZSwgc28gTyhuKm1eMikgaXMgaW1wb3NzaWJsZS4KLy8gV2UgY2FuIG9ubHkgc2hpZnQgdGhlIGludGVydmFsIGJ5IG1vdmluZyBsZWZ0IG9yIHJpZ2h0IGJvdW5kYXJ5IGJ5IG9uZSBwb3NpdGlvbi4KLy8gU28gZnJvbSBkYXkgaS0xIGludGVydmFsIFtsLCByXSwgZGF5IGkgaW50ZXJ2YWwgY2FuIGJlIGVpdGhlciBbbC0xLCByXSwgW2wsIHIrMV0sIG9yIFtsKzEsIHJdLCBbbCwgci0xXSAobXVzdCBrZWVwIGF0IGxlYXN0IG9uZSBvdmVybGFwcGluZyBlbGVtZW50KS4KLy8gQnV0IHRvIGtlZXAgTyhuKm0pIGNvbXBsZXhpdHksIHdlIGNvbnNpZGVyIGludGVydmFscyB0aGF0IGV4cGFuZCBvciBzaHJpbmsgYnkgb25lIG9uIGVpdGhlciBzaWRlLgoKLy8gV2Ugd2lsbCBtYWludGFpbiBEUCBhcnJheXMgZm9yIGludGVydmFscyBlbmRpbmcgYXQgZWFjaCBwb3NpdGlvbiB3aXRoIGxlbmd0aCA+PTE6Ci8vIEZvciBlYWNoIGRheSwgd2UgcHJlY29tcHV0ZSBwcmVmaXggc3VtcyB0byBnZXQgc3ViYXJyYXkgc3VtcyBpbiBPKDEpLgovLyBUaGVuIGZvciBkYXkgMSwgRFBbbF1bcl0gPSBzdW0gb2YgQVsxXVtsLi5yXQovLyBGb3IgZGF5IGk+MSwgRFBbbF1bcl0gPSBtYXggb2YgRFAgZnJvbSBkYXkgaS0xIGZvciBpbnRlcnZhbHMgb3ZlcmxhcHBpbmcgd2l0aCBbbCxyXSBhbmQgbWVldGluZyBjb25kaXRpb25zLgoKLy8gVG8gb3B0aW1pemUgdHJhbnNpdGlvbnMsIHdlIGNvbnNpZGVyIG9ubHkgaW50ZXJ2YWxzIHRoYXQgZGlmZmVyIGJ5IG9uZSBlbGVtZW50IGZyb20gcHJldmlvdXMgZGF5IGludGVydmFscy4KLy8gV2UgdHJhY2sgZm9yIGVhY2ggcG9zc2libGUgaW50ZXJ2YWwgdGhlIGJlc3QgRFAgdmFsdWUuCgovLyBGaW5hbGx5LCBvdXRwdXQgbWF4IERQIGZvciBkYXkgbi4KCmludCBtYWluKCkgewogICAgaW9zOjpzeW5jX3dpdGhfc3RkaW8oZmFsc2UpOwogICAgY2luLnRpZShudWxscHRyKTsKCiAgICBpbnQgdDsKICAgIGNpbiA+PiB0OwogICAgd2hpbGUgKHQtLSkgewogICAgICAgIGludCBuLCBtOwogICAgICAgIGNpbiA+PiBuID4+IG07CgogICAgICAgIHZlY3Rvcjx2ZWN0b3I8bG9uZyBsb25nPj4gQShuLCB2ZWN0b3I8bG9uZyBsb25nPihtKSk7CiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBtOyBqKyspIHsKICAgICAgICAgICAgICAgIGNpbiA+PiBBW2ldW2pdOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyBQcmVjb21wdXRlIHByZWZpeCBzdW1zIGZvciBlYWNoIGRheQogICAgICAgIHZlY3Rvcjx2ZWN0b3I8bG9uZyBsb25nPj4gcHJlZml4KG4sIHZlY3Rvcjxsb25nIGxvbmc+KG0gKyAxLCAwKSk7CiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBtOyBqKyspIHsKICAgICAgICAgICAgICAgIHByZWZpeFtpXVtqKzFdID0gcHJlZml4W2ldW2pdICsgQVtpXVtqXTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gRm9yIGRheSAxLCBkcCBpbnRlcnZhbHM6IGRwW3JdID0gbWF4IHByb2ZpdCBmb3IgaW50ZXJ2YWxzIGVuZGluZyBhdCByICh3ZSBzdG9yZSBpbnRlcnZhbHMgYnkgdGhlaXIgc3RhcnQsIGVuZCkKICAgICAgICAvLyBUbyByZWR1Y2UgY29tcGxleGl0eSwgd2UgcmVwcmVzZW50IGludGVydmFscyBvbmx5IGJ5IHRoZWlyIHN0YXJ0IGFuZCBlbmQuCiAgICAgICAgLy8gV2UnbGwgc3RvcmUgZHAgYXMgYSBtYXAgZnJvbSBpbnRlcnZhbHMgb3IgYmV0dGVyLCBhcyB0d28gYXJyYXlzIGRwX3N0YXJ0IGFuZCBkcF9lbmQuCgogICAgICAgIC8vIFdlIHVzZSBhcnJheXMgdG8gc3RvcmUgZHA6IGRwW2xdW3JdIGlzIG5vdCBmZWFzaWJsZSwgc28gd2Ugc3RvcmUgb25seSBpbnRlcnZhbHMgcmVwcmVzZW50aW5nIHN1YmFycmF5cwogICAgICAgIC8vIEJ1dCBtIGNhbiBiZSAyZTUsIHNvIE8obV4yKSBpcyB0b28gbGFyZ2UuCgogICAgICAgIC8vIE9ic2VydmF0aW9uOgogICAgICAgIC8vIFdlIG11c3QgZmluZCBhIHNvbHV0aW9uIGluIE8obiptKSBvciBPKG4qbSpsb2cgbSkuCgogICAgICAgIC8vIEtleSBpbnNpZ2h0OgogICAgICAgIC8vIE9uIGVhY2ggZGF5LCB0aGUgY2hvc2VuIGludGVydmFsIG11c3Qgb3ZlcmxhcCB3aXRoIHByZXZpb3VzIGRheSdzIGludGVydmFsCiAgICAgICAgLy8gYW5kIGRpZmZlciBieSBhdCBsZWFzdCBvbmUgZWxlbWVudC4KCiAgICAgICAgLy8gTGV0J3MgbWFpbnRhaW4gZHAgYXJyYXlzIGZvciBpbnRlcnZhbHMgZGVmaW5lZCBieSB0aGVpciBzdGFydCBhbmQgZW5kIHBvc2l0aW9ucy4KCiAgICAgICAgLy8gVG8gb3B0aW1pemUsIHdlIG1haW50YWluIHR3byBhcnJheXM6CiAgICAgICAgLy8gZHBfbGVmdFtpXTogbWF4aW11bSBkcCBmb3IgaW50ZXJ2YWxzIGVuZGluZyBhdCBwb3Npd"]
[36.519428, "i", "GlvbiBpCiAgICAgICAgLy8gZHBfcmlnaHRbaV06IG1heGltdW0gZHAgZm9yIGludGVydmFscyBzdGFydGluZyBhdCBwb3NpdGlvbiBpCgogICAgICAgIC8vIEZvciBkYXkgMSwgZHAgaW50ZXJ2YWxzIGFyZSBhbGwgc3ViYXJyYXlzIGFuZCB0aGVpciBzdW1zLgogICAgICAgIC8vIEJ1dCBlbnVtZXJhdGluZyBhbGwgc3ViYXJyYXlzIGlzIE8obV4yKSwgdG9vIGxhcmdlLgoKICAgICAgICAvLyBXZSBjYW4gY29uc2lkZXIgb25seSBpbnRlcnZhbHMgb2YgbGVuZ3RoIDEgZm9yIGRheSAxIHRvIHN0YXJ0LgogICAgICAgIC8vIEJ1dCBwcm9ibGVtIHN0YXRlcyBhdCBsZWFzdCBvbmUgdHlwZSBtdXN0IGJlIHNvbGQsIHNvIGxlbmd0aCA+PSAxLgoKICAgICAgICAvLyBBbHRlcm5hdGl2ZSBhcHByb2FjaDoKICAgICAgICAvLyBGb3IgZGF5IDEsIHdlIGNhbiBwaWNrIGFueSBzdWJhcnJheSB3aXRoIG1heGltdW0gc3VtLgogICAgICAgIC8vIFNvIHdlIGZpbmQgbWF4aW11bSBzdWJhcnJheSBzdW0gZm9yIGRheSAxLgoKICAgICAgICAvLyBGb3Igc3Vic2VxdWVudCBkYXlzOgogICAgICAgIC8vIFRoZSBuZXcgc3ViYXJyYXkgbXVzdCBvdmVybGFwIHByZXZpb3VzIGRheSdzIHN1YmFycmF5IGFuZCBkaWZmZXIgYnkgYXQgbGVhc3Qgb25lIGVsZW1lbnQuCgogICAgICAgIC8vIFNvIGludGVydmFscyBtdXN0IGludGVyc2VjdCBidXQgbm90IGJlIGlkZW50aWNhbC4KCiAgICAgICAgLy8gRFAgYXBwcm9hY2g6CiAgICAgICAgLy8gRm9yIGRheSBpLCB3ZSBrZWVwIHRyYWNrIG9mIGJlc3QgaW50ZXJ2YWxzIFtsLHJdIHdpdGggZHAgdmFsdWUuCiAgICAgICAgLy8gRm9yIHBlcmZvcm1hbmNlLCB3ZSBvbmx5IGtlZXAgaW50ZXJ2YWxzIHRoYXQgY2FuIGJlIHJlYWNoZWQgYnkgZXhwYW5kaW5nIG9yIHNocmlua2luZyBwcmV2aW91cyBpbnRlcnZhbHMgYnkgMS4KCiAgICAgICAgLy8gTGV0J3MgbWFpbnRhaW4gbGVmdCBhbmQgcmlnaHQgYm91bmRhcmllcyBhcnJheXMgZm9yIGRheSBpOgogICAgICAgIC8vIEZvciBkYXkgMSwgZmluZCBtYXhpbXVtIHN1YmFycmF5IHN1bSBhbmQgcmVjb3JkIGl0cyBpbnRlcnZhbC4KCiAgICAgICAgLy8gVG8gZmluZCBtYXhpbXVtIHN1YmFycmF5IHN1bSBhbmQgaW50ZXJ2YWwgZm9yIGRheSAxOgogICAgICAgIGxvbmcgbG9uZyBtYXhfc3VtID0gTExPTkdfTUlOOwogICAgICAgIGludCBtYXhfbCA9IDAsIG1heF9yID0gMDsKICAgICAgICBsb25nIGxvbmcgY3VyX3N1bSA9IDA7CiAgICAgICAgaW50IGN1cl9zdGFydCA9IDA7CgogICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgbTsgaisrKSB7CiAgICAgICAgICAgIGlmIChjdXJfc3VtIDwgMCkgewogICAgICAgICAgICAgICAgY3VyX3N1bSA9IEFbMF1bal07CiAgICAgICAgICAgICAgICBjdXJfc3RhcnQgPSBqOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY3VyX3N1bSArPSBBWzBdW2pdOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChjdXJfc3VtID4gbWF4X3N1bSkgewogICAgICAgICAgICAgICAgbWF4X3N1bSA9IGN1cl9zdW07CiAgICAgICAgICAgICAgICBtYXhfbCA9IGN1cl9zdGFydDsKICAgICAgICAgICAgICAgIG1heF9yID0gajsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gRm9yIGRheSAxLCBzdG9yZSBvbmx5IG9uZSBpbnRlcnZhbDogbWF4X2wuLm1heF9yIHdpdGggZHAgdmFsdWUgbWF4X3N1bQogICAgICAgIC8vIEZvciBkYXkgMiBhbmQgb253YXJkcywgd2Ugd2lsbCBrZWVwIGEgc2V0IG9mIGNhbmRpZGF0ZSBpbnRlcnZhbHMgKGludGVydmFscyB0aGF0IGNhbiBiZSBmb3JtZWQgYnkgc2hpZnRpbmcgcHJldmlvdXMgaW50ZXJ2YWwgYnkgMSkKCiAgICAgICAgLy8gV2Ugd2lsbCBzdG9yZSBpbnRlcnZhbHMgYXMgcGFpcnMgKGwscikgYW5kIHRoZWlyIGRwIHZhbHVlcy4KCiAgICAgICAgdmVjdG9yPHR1cGxlPGludCxpbnQsbG9uZyBsb25nPj4gaW50ZXJ2YWxzOwogICAgICAgIGludGVydmFscy5lbXBsYWNlX2JhY2sobWF4X2wsIG1heF9yLCBtYXhfc3VtKTsKCiAgICAgICAgZm9yIChpbnQgZGF5ID0gMTsgZGF5IDwgbjsgZGF5KyspIHsKICAgICAgICAgICAgLy8gRm9yIGRheSBkYXksIHdlIHdpbGwgZ2VuZXJhdGUgbmV3IGNhbmRpZGF0ZSBpbnRlcnZhbHMgYnkgc2hpZnRpbmcgcHJldmlvdXMgaW50ZXJ2YWxzIGJ5IDEgb24gbGVmdCBvciByaWdodCBzaWRlCiAgICAgICAgICAgIC8vIENvbmRpdGlvbnM6CiAgICAgICAgICAgIC8vIDEpIEludGVydmFscyBvdmVybGFwIHdpdGggcHJldmlvdXMgaW50ZXJ2YWwKICAgICAgICAgICAgLy8gMikgSW50ZXJ2YWxzIGRpZmZlciBieSBhdCBsZWFzdCBvbmUgZWxlbWVudCAoYXQgbGVhc3Qgb25lIG5ldyBhbmQgb25lIG9sZCBlbGVtZW50KQoKICAgICAgICAgICAgLy8gRm9yIGVhY2ggcHJldmlvdXMgaW50ZXJ2YWwgW2wsIHJdOgogICAgICAgICAgICAvLyBQb3NzaWJsZSBuZXcgaW50ZXJ2YWxzOgogICAgICAgICAgICAvLyBbbC0xLCByXSBpZiBsID4gMAogICAgICAgICAgICAvLyBbbCwgcisxXSBpZiByIDwgbS0xCiAgICAgICAgICAgIC8vIFtsKzEsIHJdIGlmIGwgPCByCiAgICAgICAgICAgIC8vIFtsLCByLTFdIGlmIHIgPiBsCgogICAgICAgICAgICAvLyBGb3IgZWFjaCBuZXcgaW50ZXJ2YWwsIGNvbXB1dGUgc3VtIGZyb20gcHJlZml4IHN1bXMKICAgICAgICAgICAgLy8gVGhlbiBkcFtuZXdfaW50ZXJ2YWxdID0gbWF4KGRwW25ld19pbnRlcnZhbF0sIGRwW3ByZXZpb3VzX2ludGVydmFsXSArIHN1bV9uZXdfaW50ZXJ2YWwpCgogICAgICAgICAgICAvLyBUbyBhdm9pZCBkdXBsaWNhdGVzLCB1c2UgbWFwIGZyb20gcGFpcjxpbnQsaW50PiB0byBkcCB2YWx1ZQogICAgICAgICAgICB1bm9yZGVyZWRfbWFwPGxvbmcgbG9uZywgbG9uZyBsb25nPiBuZXdfZHA7CgogICAgICAgICAgICBhdXRvIGhhc2hfaW50ZXJ2YWwgPSBbbV0oaW50IGwsIGludCByKSAtPiBsb25nIGxvbmcgewogICAgICAgICAgICAgICAgcmV0dXJuIChsb25nIGxvbmcpbCAqIChtKzEpICsgcjsKICAgICAgICAgICAgfTsKCiAgICAgICAgICAg"]
[36.519565, "i", "IC8vIExhbWJkYSB0byBnZXQgc3ViYXJyYXkgc3VtCiAgICAgICAgICAgIGF1dG8gZ2V0X3N1bSA9IFsmXShpbnQgZGF5LCBpbnQgbCwgaW50IHIpIC0+IGxvbmcgbG9uZyB7CiAgICAgICAgICAgICAgICByZXR1cm4gcHJlZml4W2RheV1bcisxXSAtIHByZWZpeFtkYXldW2xdOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgLy8gRm9yIGVhY2ggcHJldmlvdXMgaW50ZXJ2YWwKICAgICAgICAgICAgZm9yIChhdXRvICZbbCwgciwgdmFsXSA6IGludGVydmFscykgewogICAgICAgICAgICAgICAgdmVjdG9yPHBhaXI8aW50LGludD4+IGNhbmRpZGF0ZXM7CiAgICAgICAgICAgICAgICAvLyBsLTEsIHIKICAgICAgICAgICAgICAgIGlmIChsID4gMCkgY2FuZGlkYXRlcy5lbXBsYWNlX2JhY2sobC0xLCByKTsKICAgICAgICAgICAgICAgIC8vIGwsIHIrMQogICAgICAgICAgICAgICAgaWYgKHIgPCBtLTEpIGNhbmRpZGF0ZXMuZW1wbGFjZV9iYWNrKGwsIHIrMSk7CiAgICAgICAgICAgICAgICAvLyBsKzEsIHIKICAgICAgICAgICAgICAgIGlmIChsIDwgcikgY2FuZGlkYXRlcy5lbXBsYWNlX2JhY2sobCsxLCByKTsKICAgICAgICAgICAgICAgIC8vIGwsIHItMQogICAgICAgICAgICAgICAgaWYgKHIgPiBsKSBjYW5kaWRhdGVzLmVtcGxhY2VfYmFjayhsLCByLTEpOwoKICAgICAgICAgICAgICAgIGZvciAoYXV0byAmW25sLCBucl0gOiBjYW5kaWRhdGVzKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gQ2hlY2sgb3ZlcmxhcCBhbmQgZGlmZmVyZW5jZSBjb25kaXRpb246CiAgICAgICAgICAgICAgICAgICAgLy8gb3ZlcmxhcDogaW50ZXJ2YWxzIG11c3QgaW50ZXJzZWN0CiAgICAgICAgICAgICAgICAgICAgLy8gZGlmZmVyZW5jZTogaW50ZXJ2YWxzIG11c3QgZGlmZmVyIGJ5IGF0IGxlYXN0IG9uZSBlbGVtZW50CiAgICAgICAgICAgICAgICAgICAgLy8gSGVyZSwgc2luY2Ugd2UgbW92ZSBib3VuZGFyeSBieSAxLCBvdmVybGFwIGFsd2F5cyA+PSAxCiAgICAgICAgICAgICAgICAgICAgLy8gZGlmZmVyZW5jZSBhbHNvIGd1YXJhbnRlZWQgc2luY2UgaW50ZXJ2YWwgY2hhbmdlZAoKICAgICAgICAgICAgICAgICAgICAvLyBzdW0gb2YgbmV3IGludGVydmFsCiAgICAgICAgICAgICAgICAgICAgbG9uZyBsb25nIHMgPSBnZXRfc3VtKGRheSwgbmwsIG5yKTsKICAgICAgICAgICAgICAgICAgICBsb25nIGxvbmcgbmV3X3ZhbCA9IHZhbCArIHM7CiAgICAgICAgICAgICAgICAgICAgbG9uZyBsb25nIGggPSBoYXNoX2ludGVydmFsKG5sLCBucik7CiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld19kcC5maW5kKGgpID09IG5ld19kcC5lbmQoKSB8fCBuZXdfZHBbaF0gPCBuZXdfdmFsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5ld19kcFtoXSA9IG5ld192YWw7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBDb252ZXJ0IG5ld19kcCB0byBpbnRlcnZhbHMgdmVjdG9yCiAgICAgICAgICAgIGludGVydmFscy5jbGVhcigpOwogICAgICAgICAgICBmb3IgKGF1dG8gJltoLCB2YWxdIDogbmV3X2RwKSB7CiAgICAgICAgICAgICAgICBpbnQgbCA9IChpbnQpKGggLyAobSsxKSk7CiAgICAgICAgICAgICAgICBpbnQgciA9IChpbnQpKGggJSAobSsxKSk7CiAgICAgICAgICAgICAgICBpbnRlcnZhbHMuZW1wbGFjZV9iYWNrKGwsIHIsIHZhbCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIFRvIGxpbWl0IG1lbW9yeSwga2VlcCBvbmx5IHRvcCBLIGludGVydmFscwogICAgICAgICAgICAvLyBLID0gNTAgb3IgMTAwIChoZXVyaXN0aWMpCiAgICAgICAgICAgIGludCBLID0gNTA7CiAgICAgICAgICAgIHNvcnQoaW50ZXJ2YWxzLmJlZ2luKCksIGludGVydmFscy5lbmQoKSwgW10oYXV0byAmYSwgYXV0byAmYil7IHJldHVybiBnZXQ8Mj4oYSkgPiBnZXQ8Mj4oYik7IH0pOwogICAgICAgICAgICBpZiAoKGludClpbnRlcnZhbHMuc2l6ZSgpID4gSykgaW50ZXJ2YWxzLnJlc2l6ZShLKTsKICAgICAgICB9CgogICAgICAgIC8vIEZpbmQgbWF4IGRwIHZhbHVlIGluIGxhc3QgZGF5IGludGVydmFscwogICAgICAgIGxvbmcgbG9uZyBhbnMgPSBMTE9OR19NSU47CiAgICAgICAgZm9yIChhdXRvICZbbCwgciwgdmFsXSA6IGludGVydmFscykgewogICAgICAgICAgICBpZiAodmFsID4gYW5zKSBhbnMgPSB2YWw7CiAgICAgICAgfQoKICAgICAgICBjb3V0IDw8IGFucyA8PCAiXG4iOwogICAgfQoKICAgIHJldHVybiAwOwp9Cg==' | base64 -d > /app/main.cpp; tmux wait -S done\r"]
[36.635289, "o", "echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgovLyBQcm9ibGVtOiBMaXZlQ29kZUJlbmNoIFBybyAoTWluaSkgLSBleHRlcm5hbCBqdWRnZQovLyBBdXRob3I6IEFJIGFzc2lzdGFudAovLyBMYW5ndWFnZTogQysrMTcKCi8vIEV4cGxhbmF0aW9uOgovLyBXZSBuZWVkIHRvIHNlbGVjdCBhIHN1YmFycmF5IG9mIGRyaW5rcyBlYWNoIGRheS4KLy8gRm9yIGRheSAxLCBzZWxlY3QgYW55IHN1YmFycmF5IHRvIG1heGltaXplIHN1bS4KLy8gRm9yIHN1YnNlcXVlbnQgZGF5cywgdGhlIHN1YmFycmF5IG11c3Qgb3ZlcmxhcCB3aXRoIHByZXZpb3VzIGRheSdzIHN1YmFycmF5Ci8vIGJ1dCBub3QgYmUgaWRlbnRpY2FsIChtdXN0IGhhdmUgYXQgbGVhc3Qgb25lIG5ldyBhbmQgb25lIG92ZXJsYXBwaW5nIGRyaW5rIHR5cGUpLgovLyBIZW5jZSwgaW50ZXJ2YWxzIG11c3Qgc2hpZnQgYnkgYXQgbGVhc3Qgb25lIHBvc2l0aW9uIHRvIGxlZnQgb3IgcmlnaHQuCgovLyBBcHByb2FjaDoKLy8gVXNlIERQIHdpdGggc3RhdGVzIHJlcHJlc2VudGluZyB0aGUgY2hvc2VuIGludGVydmFsIFtsLCByXSBvbiBwcmV2aW91cyBkYXkuCi8vIEJ1dCBtIGNhbiBiZSBsYXJnZSwgc28gTyhuKm1eMikgaXMgaW1wb3NzaWJsZS4KLy8gV2UgY2FuIG9ubHkgc2hpZnQgdGhlIGludGVydmFsIGJ5IG1vdmluZyBsZWZ0IG9yIHJpZ2h0IGJvdW5kYXJ5IGJ5IG9uZSBwb3NpdGlvbi4KLy8gU28gZnJvbSBkYXkgaS0xIGludGVydmFsIFtsLCByXSwgZGF5IGkgaW50ZXJ2YWwgY2FuIGJlIGVpdGhlciBbbC0xLCByXSwgW2wsIHIrMV0sIG9yIFtsKzEsIHJdLCBbbCwgci0xXSAobXVzdCBrZWVwIGF0IGxlYXN0IG9uZSBvdmVybGFwcGluZyBlbGVtZW50KS4KLy8gQnV0IHRvIGtlZXAgTyhuKm0pIGNvbXBsZXhpdHksIHdlIGNvbnNpZGVyIGludGVydmFscyB0aGF0IGV4cGFuZCBvciBzaHJpbmsgYnkgb25lIG9uIGVpdGhlciBzaWRlLgoKLy8gV2Ugd2lsbCBtYWludGFpbiBEUCBhcnJheXMgZm9yIGludGVydmFscyBlbmRpbmcgYXQgZWFjaCBwb3NpdGlvbiB3aXRoIGxlbmd0aCA+PTE6Ci8vIEZvciBlYWNoIGRheSwgd2UgcHJlY29tcHV0ZSBwcmVmaXggc3VtcyB0byBnZXQgc3ViYXJyYXkgc3VtcyBpbiBPKDEpLgovLyBUaGVuIGZvciBkYXkgMSwgRFBbbF1bcl0gPSBzdW0gb2YgQVsxXVtsLi5yXQovLyBGb3IgZGF5IGk+MSwgRFBbbF1bcl0gPSBtYXggb2YgRFAgZnJvbSBkYXkgaS0xIGZvciBpbnRlcnZhbHMgb3ZlcmxhcHBpbmcgd2l0aCBbbCxyXSBhbmQgbWVldGluZyBjb25kaXRpb25zLgoKLy8gVG8gb3B0aW1pemUgdHJhbnNpdGlvbnMsIHdlIGNvbnNpZGVyIG9ubHkgaW50ZXJ2YWxzIHRoYXQgZGlmZmVyIGJ5IG9uZSBlbGVtZW50IGZyb20gcHJldmlvdXMgZGF5IGludGVydmFscy4KLy8gV2UgdHJhY2sgZm9yIGVhY2ggcG9zc2libGUgaW50ZXJ2YWwgdGhlIGJlc3QgRFAgdmFsdWUuCgovLyBGaW5hbGx5LCBvdXRwdXQgbWF4IERQIGZvciBkYXkgbi4KCmludCBtYWluKCkgewogICAgaW9zOjpzeW5jX3dpdGhfc3RkaW8oZmFsc2UpOwogICAgY2luLnRpZShudWxscHRyKTsKCiAgICBpbnQgdDsKICAgIGNpbiA+PiB0OwogICAgd2hpbGUgKHQtLSkgewogICAgICAgIGludCBuLCBtOwogICAgICAgIGNpbiA+PiBuID4+IG07CgogICAgICAgIHZlY3Rvcjx2ZWN0b3I8bG9uZyBsb25nPj4gQShuLCB2ZWN0b3I8bG9uZyBsb25nPihtKSk7CiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBtOyBqKyspIHsKICAgICAgICAgICAgICAgIGNpbiA+PiBBW2ldW2pdOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyBQcmVjb21wdXRlIHByZWZpeCBzdW1zIGZvciBlYWNoIGRheQogICAgICAgIHZlY3Rvcjx2ZWN0b3I8bG9uZyBsb25nPj4gcHJlZml4KG4sIHZlY3Rvcjxsb25nIGxvbmc+KG0gKyAxLCAwKSk7CiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgZm9yIChpbnQgaiA9IDA7IGogPCBtOyBqKyspIHsKICAgICAgICAgICAgICAgIHByZWZpeFtpXVtqKzFdID0gcHJlZml4W2ldW2pdICsgQVtpXVtqXTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gRm9yIGRheSAxLCBkcCBpbnRlcnZhbHM6IGRwW3JdID0gbWF4IHByb2ZpdCBmb3IgaW50ZXJ2YWxzIGVuZGluZyBhdCByICh3ZSBzdG9yZSBpbnRlcnZhbHMgYnkgdGhlaXIgc3RhcnQsIGVuZCkKICAgICAgICAvLyBUbyByZWR1Y2UgY29tcGxleGl0eSwgd2UgcmVwcmVzZW50IGludGVydmFscyBvbmx5IGJ5IHRoZWlyIHN0YXJ0IGFuZCBlbmQuCiAgICAgICAgLy8gV2UnbGwgc3RvcmUgZHAgYXMgYSBtYXAgZnJvbSBpbnRlcnZhbHMgb3IgYmV0dGVyLCBhcyB0d28gYXJyYXlzIGRwX3N0YXJ0IGFuZCBkcF9lbmQuCgogICAgICAgIC8vIFdlIHVzZSBhcnJheXMgdG8gc3RvcmUgZHA6IGRwW2xdW3JdIGlzIG5vdCBmZWFzaWJsZSwgc28gd2Ugc3RvcmUgb25seSBpbnRlcnZhbHMgcmVwcmVzZW50aW5nIHN1YmFycmF5cwogICAgICAgIC8vIEJ1dCBtIGNhbiBiZSAyZTUsIHNvIE8obV4yKSBpcyB0b28gbGFyZ2UuCgogICAgICAgIC8vIE9ic2VydmF0aW9uOgogICAgICAgIC8vIFdlIG11c3QgZmluZCBhIHNvbHV0aW9uIGluIE8obiptKSBvciBPKG4qbSpsb2cgbSkuCgogICAgICAgIC8vIEtleSBpbnNpZ2h0OgogICAgICAgIC8vIE9uIGVhY2ggZGF5LCB0aGUgY2hvc2VuIGludGVydmFsIG11c3Qgb3ZlcmxhcCB3aXRoIHByZXZpb3VzIGRheSdzIGludGVydmFsCiAgICAgICAgLy8gYW5kIGRpZmZlciBieSBhdCBsZWFzdCBvbmUgZWxlbWVudC4KCiAgICAgICAgLy8gTGV0J3MgbWFpbnRhaW4gZHAgYXJyYXlzIGZvciBpbnRlcnZhbHMgZGVmaW5lZCBieSB0aGVpciBzdGFydCBhbmQgZW5kIHBvc2l0aW9ucy4KCiAgICAgICAgLy8gVG8gb3B0aW1pemUsIHdlIG1haW50YWluIHR3byBhcnJheXM6CiAgICAgICAgLy8gZHBfbGVmdFtpXTogbWF4aW11bSBkcCBmb3IgaW50ZXJ2YWxzIGVuZGluZyBhdCBwb3Npd"]
[36.639013, "o", "GlvbiBpCiAgICAgICAgLy8gZHBfcmlnaHRbaV06IG1heGltdW0gZHAgZm9yIGludGVydmFscyBzdGFydGluZyBhdCBwb3NpdGlvbiBpCgogICAgICAgIC8vIEZvciBkYXkgMSwgZHAgaW50ZXJ2YWxzIGFyZSBhbGwgc3ViYXJyYXlzIGFuZCB0aGVpciBzdW1zLgogICAgICAgIC8vIEJ1dCBlbnVtZXJhdGluZyBhbGwgc3ViYXJyYXlzIGlzIE8obV4yKSwgdG9vIGxhcmdlLgoKICAgICAgICAvLyBXZSBjYW4gY29uc2lkZXIgb25seSBpbnRlcnZhbHMgb2YgbGVuZ3RoIDEgZm9yIGRheSAxIHRvIHN0YXJ0LgogICAgICAgIC8vIEJ1dCBwcm9ibGVtIHN0YXRlcyBhdCBsZWFzdCBvbmUgdHlwZSBtdXN0IGJlIHNvbGQsIHNvIGxlbmd0aCA+PSAxLgoKICAgICAgICAvLyBBbHRlcm5hdGl2ZSBhcHByb2FjaDoKICAgICAgICAvLyBGb3IgZGF5IDEsIHdlIGNhbiBwaWNrIGFueSBzdWJhcnJheSB3aXRoIG1heGltdW0gc3VtLgogICAgICAgIC8vIFNvIHdlIGZpbmQgbWF4aW11bSBzdWJhcnJheSBzdW0gZm9yIGRheSAxLgoKICAgICAgICAvLyBGb3Igc3Vic2VxdWVudCBkYXlzOgogICAgICAgIC8vIFRoZSBuZXcgc3ViYXJyYXkgbXVzdCBvdmVybGFwIHByZXZpb3VzIGRheSdzIHN1YmFycmF5IGFuZCBkaWZmZXIgYnkgYXQgbGVhc3Qgb25lIGVsZW1lbnQuCgogICAgICAgIC8vIFNvIGludGVydmFscyBtdXN0IGludGVyc2VjdCBidXQgbm90IGJlIGlkZW50aWNhbC4KCiAgICAgICAgLy8gRFAgYXBwcm9hY2g6CiAgICAgICAgLy8gRm9yIGRheSBpLCB3ZSBrZWVwIHRyYWNrIG9mIGJlc3QgaW50ZXJ2YWxzIFtsLHJdIHdpdGggZHAgdmFsdWUuCiAgICAgICAgLy8gRm9yIHBlcmZvcm1hbmNlLCB3ZSBvbmx5IGtlZXAgaW50ZXJ2YWxzIHRoYXQgY2FuIGJlIHJlYWNoZWQgYnkgZXhwYW5kaW5nIG9yIHNocmlua2luZyBwcmV2aW91cyBpbnRlcnZhbHMgYnkgMS4KCiAgICAgICAgLy8gTGV0J3MgbWFpbnRhaW4gbGVmdCBhbmQgcmlnaHQgYm91bmRhcmllcyBhcnJheXMgZm9yIGRheSBpOgogICAgICAgIC8vIEZvciBkYXkgMSwgZmluZCBtYXhpbXVtIHN1YmFycmF5IHN1bSBhbmQgcmVjb3JkIGl0cyBpbnRlcnZhbC4KCiAgICAgICAgLy8gVG8gZmluZCBtYXhpbXVtIHN1YmFycmF5IHN1bSBhbmQgaW50ZXJ2YWwgZm9yIGRheSAxOgogICAgICAgIGxvbmcgbG9uZyBtYXhfc3VtID0gTExPTkdfTUlOOwogICAgICAgIGludCBtYXhfbCA9IDAsIG1heF9yID0gMDsKICAgICAgICBsb25nIGxvbmcgY3VyX3N1bSA9IDA7CiAgICAgICAgaW50IGN1cl9zdGFydCA9IDA7CgogICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgbTsgaisrKSB7CiAgICAgICAgICAgIGlmIChjdXJfc3VtIDwgMCkgewogICAgICAgICAgICAgICAgY3VyX3N1bSA9IEFbMF1bal07CiAgICAgICAgICAgICAgICBjdXJfc3RhcnQgPSBqOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY3VyX3N1bSArPSBBWzBdW2pdOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChjdXJfc3VtID4gbWF4X3N1bSkgewogICAgICAgICAgICAgICAgbWF4X3N1bSA9IGN1cl9zdW07CiAgICAgICAgICAgICAgICBtYXhfbCA9IGN1cl9zdGFydDsKICAgICAgICAgICAgICAgIG1heF9yID0gajsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gRm9yIGRheSAxLCBzdG9yZSBvbmx5IG9uZSBpbnRlcnZhbDogbWF4X2wuLm1heF9yIHdpdGggZHAgdmFsdWUgbWF4X3N1bQogICAgICAgIC8vIEZvciBkYXkgMiBhbmQgb253YXJkcywgd2Ugd2lsbCBrZWVwIGEgc2V0IG9mIGNhbmRpZGF0ZSBpbnRlcnZhbHMgKGludGVydmFscyB0aGF0IGNhbiBiZSBmb3JtZWQgYnkgc2hpZnRpbmcgcHJldmlvdXMgaW50ZXJ2YWwgYnkgMSkKCiAgICAgICAgLy8gV2Ugd2lsbCBzdG9yZSBpbnRlcnZhbHMgYXMgcGFpcnMgKGwscikgYW5kIHRoZWlyIGRwIHZhbHVlcy4KCiAgICAgICAgdmVjdG9yPHR1cGxlPGludCxpbnQsbG9uZyBsb25nPj4gaW50ZXJ2YWxzOwogICAgICAgIGludGVydmFscy5lbXBsYWNlX2JhY2sobWF4X2wsIG1heF9yLCBtYXhfc3VtKTsKCiAgICAgICAgZm9yIChpbnQgZGF5ID0gMTsgZGF5IDwgbjsgZGF5KyspIHsKICAgICAgICAgICAgLy8gRm9yIGRheSBkYXksIHdlIHdpbGwgZ2VuZXJhdGUgbmV3IGNhbmRpZGF0ZSBpbnRlcnZhbHMgYnkgc2hpZnRpbmcgcHJldmlvdXMgaW50ZXJ2YWxzIGJ5IDEgb24gbGVmdCBvciByaWdodCBzaWRlCiAgICAgICAgICAgIC8vIENvbmRpdGlvbnM6CiAgICAgICAgICAgIC8vIDEpIEludGVydmFscyBvdmVybGFwIHdpdGggcHJldmlvdXMgaW50ZXJ2YWwKICAgICAgICAgICAgLy8gMikgSW50ZXJ2YWxzIGRpZmZlciBieSBhdCBsZWFzdCBvbmUgZWxlbWVudCAoYXQgbGVhc3Qgb25lIG5ldyBhbmQgb25lIG9sZCBlbGVtZW50KQoKICAgICAgICAgICAgLy8gRm9yIGVhY2ggcHJldmlvdXMgaW50ZXJ2YWwgW2wsIHJdOgogICAgICAgICAgICAvLyBQb3NzaWJsZSBuZXcgaW50ZXJ2YWxzOgogICAgICAgICAgICAvLyBbbC0xLCByXSBpZiBsID4gMAogICAgICAgICAgICAvLyBbbCwgcisxXSBpZiByIDwgbS0xCiAgICAgICAgICAgIC8vIFtsKzEsIHJdIGlmIGwgPCByCiAgICAgICAgICAgIC8vIFtsLCByLTFdIGlmIHIgPiBsCgogICAgICAgICAgICAvLyBGb3IgZWFjaCBuZXcgaW50ZXJ2YWwsIGNvbXB1dGUgc3VtIGZyb20gcHJlZml4IHN1bXMKICAgICAgICAgICAgLy8gVGhlbiBkcFtuZXdfaW50ZXJ2YWxdID0gbWF4KGRwW25ld19pbnRlcnZhbF0sIGRwW3ByZXZpb3VzX2ludGVydmFsXSArIHN1bV9uZXdfaW50ZXJ2YWwpCgogICAgICAgICAgICAvLyBUbyBhdm9pZCBkdXBsaWNhdGVzLCB1c2UgbWFwIGZyb20gcGFpcjxpbnQsaW50PiB0byBkcCB2YWx1ZQogICAgICAgICAgICB1bm9yZGVyZWRfbWFwPGxvbmcgbG9uZywgbG9uZyBsb25nPiBuZXdfZHA7CgogICAgICAgICAgICBhdXRvIGhhc2hfaW50ZXJ2YWwgPSBbbV0oaW50IGwsIGludCByKSAtPiBsb25nIGxvbmcgewogICAgICAgICAgICAgICAgcmV0dXJuIChsb25nIGxvbmcpbCAqIChtKzEpICsgcjsKICAgICAgICAgICAgfTsKCiAgICAgICAgICAg"]
[36.639123, "o", "IC8vIExhbWJkYSB0byBnZXQgc3ViYXJyYXkgc3VtCiAgICAgICAgICAgIGF1dG8gZ2V0X3N1bSA9IFsmXShpbnQgZGF5LCBpbnQgbCwgaW50IHIpIC0+IGxvbmcgbG9uZyB7CiAgICAgICAgICAgICAgICByZXR1cm4gcHJlZml4W2RheV1bcisxXSAtIHByZWZpeFtkYXldW2xdOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgLy8gRm9yIGVhY2ggcHJldmlvdXMgaW50ZXJ2YWwKICAgICAgICAgICAgZm9yIChhdXRvICZbbCwgciwgdmFsXSA6IGludGVydmFscykgewogICAgICAgICAgICAgICAgdmVjdG9yPHBhaXI8aW50LGludD4+IGNhbmRpZGF0ZXM7CiAgICAgICAgICAgICAgICAvLyBsLTEsIHIKICAgICAgICAgICAgICAgIGlmIChsID4gMCkgY2FuZGlkYXRlcy5lbXBsYWNlX2JhY2sobC0xLCByKTsKICAgICAgICAgICAgICAgIC8vIGwsIHIrMQogICAgICAgICAgICAgICAgaWYgKHIgPCBtLTEpIGNhbmRpZGF0ZXMuZW1wbGFjZV9iYWNrKGwsIHIrMSk7CiAgICAgICAgICAgICAgICAvLyBsKzEsIHIKICAgICAgICAgICAgICAgIGlmIChsIDwgcikgY2FuZGlkYXRlcy5lbXBsYWNlX2JhY2sobCsxLCByKTsKICAgICAgICAgICAgICAgIC8vIGwsIHItMQogICAgICAgICAgICAgICAgaWYgKHIgPiBsKSBjYW5kaWRhdGVzLmVtcGxhY2VfYmFjayhsLCByLTEpOwoKICAgICAgICAgICAgICAgIGZvciAoYXV0byAmW25sLCBucl0gOiBjYW5kaWRhdGVzKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gQ2hlY2sgb3ZlcmxhcCBhbmQgZGlmZmVyZW5jZSBjb25kaXRpb246CiAgICAgICAgICAgICAgICAgICAgLy8gb3ZlcmxhcDogaW50ZXJ2YWxzIG11c3QgaW50ZXJzZWN0CiAgICAgICAgICAgICAgICAgICAgLy8gZGlmZmVyZW5jZTogaW50ZXJ2YWxzIG11c3QgZGlmZmVyIGJ5IGF0IGxlYXN0IG9uZSBlbGVtZW50CiAgICAgICAgICAgICAgICAgICAgLy8gSGVyZSwgc2luY2Ugd2UgbW92ZSBib3VuZGFyeSBieSAxLCBvdmVybGFwIGFsd2F5cyA+PSAxCiAgICAgICAgICAgICAgICAgICAgLy8gZGlmZmVyZW5jZSBhbHNvIGd1YXJhbnRlZWQgc2luY2UgaW50ZXJ2YWwgY2hhbmdlZAoKICAgICAgICAgICAgICAgICAgICAvLyBzdW0gb2YgbmV3IGludGVydmFsCiAgICAgICAgICAgICAgICAgICAgbG9uZyBsb25nIHMgPSBnZXRfc3VtKGRheSwgbmwsIG5yKTsKICAgICAgICAgICAgICAgICAgICBsb25nIGxvbmcgbmV3X3ZhbCA9IHZhbCArIHM7CiAgICAgICAgICAgICAgICAgICAgbG9uZyBsb25nIGggPSBoYXNoX2ludGVydmFsKG5sLCBucik7CiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld19kcC5maW5kKGgpID09IG5ld19kcC5lbmQoKSB8fCBuZXdfZHBbaF0gPCBuZXdfdmFsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5ld19kcFtoXSA9IG5ld192YWw7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBDb252ZXJ0IG5ld19kcCB0byBpbnRlcnZhbHMgdmVjdG9yCiAgICAgICAgICAgIGludGVydmFscy5jbGVhcigpOwogICAgICAgICAgICBmb3IgKGF1dG8gJltoLCB2YWxdIDogbmV3X2RwKSB7CiAgICAgICAgICAgICAgICBpbnQgbCA9IChpbnQpKGggLyAobSsxKSk7CiAgICAgICAgICAgICAgICBpbnQgciA9IChpbnQpKGggJSAobSsxKSk7CiAgICAgICAgICAgICAgICBpbnRlcnZhbHMuZW1wbGFjZV9iYWNrKGwsIHIsIHZhbCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIFRvIGxpbWl0IG1lbW9yeSwga2VlcCBvbmx5IHRvcCBLIGludGVydmFscwogICAgICAgICAgICAvLyBLID0gNTAgb3IgMTAwIChoZXVyaXN0aWMpCiAgICAgICAgICAgIGludCBLID0gNTA7CiAgICAgICAgICAgIHNvcnQoaW50ZXJ2YWxzLmJlZ2luKCksIGludGVydmFscy5lbmQoKSwgW10oYXV0byAmYSwgYXV0byAmYil7IHJldHVybiBnZXQ8Mj4oYSkgPiBnZXQ8Mj4oYik7IH0pOwogICAgICAgICAgICBpZiAoKGludClpbnRlcnZhbHMuc2l6ZSgpID4gSykgaW50ZXJ2YWxzLnJlc2l6ZShLKTsKICAgICAgICB9CgogICAgICAgIC8vIEZpbmQgbWF4IGRwIHZhbHVlIGluIGxhc3QgZGF5IGludGVydmFscwogICAgICAgIGxvbmcgbG9uZyBhbnMgPSBMTE9OR19NSU47CiAgICAgICAgZm9yIChhdXRvICZbbCwgciwgdmFsXSA6IGludGVydmFscykgewogICAgICAgICAgICBpZiAodmFsID4gYW5zKSBhbnMgPSB2YWw7CiAgICAgICAgfQoKICAgICAgICBjb3V0IDw8IGFucyA8PCAiXG4iOwogICAgfQoKICAgIHJldHVybiAwOwp9Cg==' | base64 -d > /app/main.cpp; tmux wait -S done\r\n\u001b[?2004l\r"]
[36.674109, "o", "\u001b[?2004hroot@0ddddc6ef50a:/app# "]
[46.839274, "i", "\u0004"]
[46.851665, "o", "\u001b[?2004l\r\r\nexit\r\n"]
