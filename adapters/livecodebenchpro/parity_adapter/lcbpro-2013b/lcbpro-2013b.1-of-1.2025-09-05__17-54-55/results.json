{
    "id": "5ea69323-cb10-44de-93f8-5bab66e222ca",
    "trial_name": "lcbpro-2013b.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2013b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2013B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nEralim, being the mafia boss, manages a group of $n$ fighters. Fighter $i$ has a rating of $a_i$.\n\nEralim arranges a tournament of $n - 1$ battles, in each of which two not yet eliminated fighters $i$ and $j$ ($1 \\le i < j \\le n$) are chosen, and as a result of the battle, fighter $i$ is eliminated from the tournament, and the rating of fighter $j$ is reduced by the rating of fighter $i$. That is, $a_j$ is decreased by $a_i$. Note that fighter $j$'s rating can become negative. The fighters indexes do not change.\n\nEralim wants to know what maximum rating the last remaining fighter can preserve if he chooses the battles optimally.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($2 \\le n \\le 2 \\cdot 10^5$) -- the number of fighters.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots a_n$ ($1 \\le a_i \\le 10^9$) -- the ratings of the fighters.\n\nThe sum of $n$ over all testcases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each testcase, output a single integer -- the maximum rating that the last remaining fighter can preserve.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n2\n\n2 1\n\n3\n\n2 2 8\n\n4\n\n1 2 4 3\n\n5\n\n1 2 3 4 5\n\n5\n\n3 2 4 5 4\n\n```\n\n#### Output #1\n\n```\n-1\n8\n2\n7\n8\n```\n\n### Note\n\nIn the first example, you can arrange a fight between fighters with indices $1$ and $2$, where the fighter with index $2$ will win. The rating of the last fighter, that is, the fighter with index $2$, will be $1 - 2 = -1$.\n\nIn the second example, you can first conduct a fight between fighters with indices $1$ and $2$, where the fighter with index $2$ will win, and then conduct a fight between fighters with indices $2$ and $3$, where the fighter with index $3$ will win.\n\nThe rating of the fighter with index $2$ after the first fight will be $2 - 2 = 0$. The rating of the fighter with index $3$ after the second fight will be $8 - 0 = 8$.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2013b/lcbpro-2013b.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1016,
    "total_output_tokens": 352,
    "trial_started_at": "2025-09-06T01:17:04.559635+00:00",
    "trial_ended_at": "2025-09-06T01:17:40.762491+00:00",
    "agent_started_at": "2025-09-06T01:17:13.295947+00:00",
    "agent_ended_at": "2025-09-06T01:17:18.935816+00:00",
    "test_started_at": "2025-09-06T01:17:21.039977+00:00",
    "test_ended_at": "2025-09-06T01:17:24.046460+00:00"
}