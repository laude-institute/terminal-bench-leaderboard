{
    "id": "af41a08a-3421-40ba-9261-4aca2fead8eb",
    "trial_name": "lcbpro-2008e.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2008e",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2008E)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nSakurako really loves alternating strings. She calls a string $s$ of lowercase Latin letters an alternating string if characters in the even positions are the same, if characters in the odd positions are the same, and the length of the string is even.\n\nFor example, the strings 'abab' and 'gg' are alternating, while the strings 'aba' and 'ggwp' are not.\n\nAs a good friend, you decided to gift such a string, but you couldn't find one. Luckily, you can perform two types of operations on the string:\n\n1. Choose an index $i$ and delete the $i$-th character from the string, which will reduce the length of the string by $1$. This type of operation can be performed no more than $1$ time;\n2. Choose an index $i$ and replace $s_i$ with any other letter.\n\nSince you are in a hurry, you need to determine the minimum number of operations required to make the string an alternating one.\n\n### Input\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10^4$)  -- the number of test cases.\n\nThe first line of each test case contains a single number $n$ ($1 \\le n\\le 2\\cdot 10^5$)  -- the length of the string.\n\nThe second line of each test case contains a string $s$, consisting of lowercase Latin letters.\n\nIt is guaranteed that the sum of $n$ across all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output a single integer -- the minimum number of operations required to turn the string $s$ into an alternating one.\n\n### Example\n\n#### Input #1\n\n```\n\n10\n\n1\n\na\n\n2\n\nca\n\n3\n\naab\n\n5\n\nababa\n\n6\n\nacdada\n\n9\n\nejibmyyju\n\n6\n\nbbccbc\n\n6\n\nabacba\n\n5\n\nbcbca\n\n5\n\ndcbdb\n\n```\n\n#### Output #1\n\n```\n1\n0\n1\n1\n2\n6\n2\n3\n1\n1\n```\n\n### Note\n\nFor the string ababa, you can delete the first character to get baba, which is an alternating string.\n\nFor the string acdada, you can change the first two characters to get dadada, which is an alternating string.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2008e/lcbpro-2008e.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 916,
    "total_output_tokens": 684,
    "trial_started_at": "2025-09-06T01:42:27.317556+00:00",
    "trial_ended_at": "2025-09-06T01:43:19.445964+00:00",
    "agent_started_at": "2025-09-06T01:42:42.839969+00:00",
    "agent_ended_at": "2025-09-06T01:42:52.941495+00:00",
    "test_started_at": "2025-09-06T01:42:55.771461+00:00",
    "test_ended_at": "2025-09-06T01:43:00.087969+00:00"
}