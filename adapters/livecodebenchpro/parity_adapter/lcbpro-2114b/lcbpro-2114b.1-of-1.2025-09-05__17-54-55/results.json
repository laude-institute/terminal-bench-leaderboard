{
    "id": "2b4856c1-6f26-4128-9a79-172c46c43e2d",
    "trial_name": "lcbpro-2114b.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2114b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2114B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nVlad found a binary string$^{\\text{∗}}$ $s$ of even length $n$. He considers a pair of indices ($i, n - i + 1$), where $1 \\le i < n - i + 1$, to be good if $s_i = s_{n - i + 1}$ holds true.\n\nFor example, in the string '010001' there is only $1$ good pair, since $s_1 \\ne s_6$, $s_2 \\ne s_5$, and $s_3=s_4$. In the string '0101' there are no good pairs.\n\nVlad loves palindromes, but not too much, so he wants to rearrange some characters of the string so that there are exactly $k$ good pairs of indices.\n\nDetermine whether it is possible to rearrange the characters in the given string so that there are exactly $k$ good pairs of indices ($i, n - i + 1$).\n\n$^{\\text{∗}}$A string $s$ is called binary if it consists only of the characters '0' and '1'\n\n### Input\n\nThe first line contains an integer $t$ ($1 \\le t \\le 10^4$) -- the number of test cases.\n\nThe first line of each test case contains two integers $n$ and $k$ ($2 \\le n \\le 2 \\cdot 10^5$, $0 \\le k \\le \\frac{n}{2}$, $n$ is even) -- the length of the string and the required number of good pairs.\n\nThe second line of each test case contains a binary string $s$ of length $n$.\n\nIt is guaranteed that the sum of $n$ across all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output \"YES\" if there is a way to rearrange the characters of the string so that there are exactly $k$ good pairs, otherwise output \"NO\".\n\nYou may output each letter in any case (lowercase or uppercase). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be accepted as a positive answer.\n\n### Example\n\n#### Input #1\n\n```\n\n6\n\n6 2\n\n000000\n\n2 1\n\n01\n\n4 1\n\n1011\n\n10 2\n\n1101011001\n\n10 1\n\n1101011001\n\n2 1\n\n11\n\n```\n\n#### Output #1\n\n```\nNO\nNO\nYES\nNO\nYES\nYES\n```",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2114b/lcbpro-2114b.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 962,
    "total_output_tokens": 694,
    "trial_started_at": "2025-09-06T01:18:30.089102+00:00",
    "trial_ended_at": "2025-09-06T01:19:15.270687+00:00",
    "agent_started_at": "2025-09-06T01:18:45.875967+00:00",
    "agent_ended_at": "2025-09-06T01:18:54.489504+00:00",
    "test_started_at": "2025-09-06T01:18:56.940681+00:00",
    "test_ended_at": "2025-09-06T01:19:00.810782+00:00"
}