['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
["echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgovLyBGdW5jdGlvbiB0byBmYWN0b3JpemUgbiB3aXRoIHByaW1lcyA8PSBrLCByZXR1cm5zIG1hcCBwcmltZS0+ZXhwb25lbnQgb3IgZW1wdHkgaWYgbiBoYXMgcHJpbWUgZmFjdG9yID4gawptYXA8aW50LGludD4gZmFjdG9yaXplKGludCBuLCBpbnQgaykgewogICAgbWFwPGludCxpbnQ+IGZhY3RvcnM7CiAgICBmb3IgKGludCBwID0gMjsgcCA8PSBrICYmIHAqcCA8PSBuOyArK3ApIHsKICAgICAgICB3aGlsZSAobiAlIHAgPT0gMCkgewogICAgICAgICAgICBmYWN0b3JzW3BdKys7CiAgICAgICAgICAgIG4gLz0gcDsKICAgICAgICB9CiAgICB9CiAgICBpZiAobiA+IDEpIHsKICAgICAgICBpZiAobiA8PSBrKSB7CiAgICAgICAgICAgIGZhY3RvcnNbbl0rKzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyBwcmltZSBmYWN0b3IgPiBrCiAgICAgICAgICAgIGZhY3RvcnMuY2xlYXIoKTsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gZmFjdG9yczsKfQoKaW50IG1haW4oKSB7CiAgICBpb3M6OnN5bmNfd2l0aF9zdGRpbyhmYWxzZSk7CiAgICBjaW4udGllKG51bGxwdHIpOwogICAgaW50IHQ7IGNpbiA+PiB0OwogICAgd2hpbGUodC0tKSB7CiAgICAgICAgaW50IHgseSxrOyBjaW4gPj4geCA+PiB5ID4+IGs7CiAgICAgICAgaWYgKHggPT0geSkgewogICAgICAgICAgICBjb3V0IDw8IDAgPDwgIlxuIjsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfQogICAgICAgIC8vIFdlIHdhbnQgdG8gZmluZCBtaW5pbXVtIG9wZXJhdGlvbnMgdG8gZ2V0IHkgZnJvbSB4IGJ5IG11bHRpcGx5aW5nIG9yIGRpdmlkaW5nIGJ5IGludGVnZXJzIDE8PWE8PWsKICAgICAgICAvLyBFYWNoIG9wZXJhdGlvbiBtdWx0aXBsaWVzIG9yIGRpdmlkZXMgeCBieSBhIHdpdGggMSA8PSBhIDw9IGsgYW5kIHRoZSBkaXZpc2lvbiBtdXN0IGJlIGV4YWN0LgogICAgICAgIC8vIExldCBSID0geS94CiAgICAgICAgLy8gSWYgeSAlIHggIT0gMCBhbmQgeCAlIHkgIT0gMCwgbm8gZXhhY3QgbXVsdGlwbGljYXRpb24vZGl2aXNpb24gY2hhaW4gY2FuIGdldCBmcm9tIHggdG8geQogICAgICAgIGlmICh5ICUgeCAhPSAwICYmIHggJSB5ICE9IDApIHsKICAgICAgICAgICAgY291dCA8PCAtMSA8PCAiXG4iOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CiAgICAgICAgLy8gSWYgeS94ID0gUiBvciB4L3kgPSBSIChpbnRlZ2VyKSwgdHJ5IHRvIHJlYWNoIFIgYnkgbXVsdGlwbGljYXRpb24vZGl2aXNpb24gYnkgbnVtYmVycyA8PSBrCiAgICAgICAgLy8gV2UnbGwgd29yayB3aXRoIFIgPSB5L3ggaWYgeSA+PSB4IGVsc2UgUiA9IHgveQogICAgICAgIGJvb2wgeV9ncmVhdGVyID0gKHkgPj0geCk7CiAgICAgICAgaW50NjRfdCBSID0geV9ncmVhdGVyID8gKGludDY0X3QpeSAvIHggOiAoaW50NjRfdCl4IC8geTsKCiAgICAgICAgLy8gRmFjdG9yaXplIFIgd2l0aCBwcmltZXMgPD0gawogICAgICAgIGF1dG8gZmFjdG9ycyA9IGZhY3Rvcml6ZSgoaW50KVIsIGspOwogICAgICAgIGlmIChmYWN0b3JzLmVtcHR5KCkgJiYgUiAhPSAxKSB7CiAgICAgICAgICAgIC8vIGZhY3Rvcml6ZSBmYWlsZWQgPT4gcHJpbWUgZmFjdG9yID4gayA9PiBpbXBvc3NpYmxlCiAgICAgICAgICAgIGNvdXQgPDwgLTEgPDwgIlxuIjsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfQogICAgICAgIGlmIChSID09IDEpIHsKICAgICAgICAgICAgLy8gUj0xIG1lYW5zIHg9PXksIGFscmVhZHkgaGFuZGxlZCBhYm92ZSBidXQganVzdCBpbiBjYXNlCiAgICAgICAgICAgIGNvdXQgPDwgMCA8PCAiXG4iOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CgogICAgICAgIC8vIE5vdyBSID0gcHJvZHVjdCBvZiBwcmltZXMgPD0gawogICAgICAgIC8vIFdlIHdhbnQgdG8gZmluZCBtaW5pbXVtIHN0ZXBzIHRvIGdldCBSIGZyb20gMSBieSBtdWx0aXBseWluZyBvciBkaXZpZGluZyBieSBudW1iZXJzIDw9IGsKICAgICAgICAvLyBTaW5jZSBSIGlzIGEgcHVyZSBwcm9kdWN0IG9mIHByaW1lcyA8PSBrLCBhbmQgd2UgY2FuIG11bHRpcGx5IG9yIGRpdmlkZSBieSBudW1iZXJzIDw9IGssCiAgICAgICAgLy8gdGhlIG1pbmltYWwgc3RlcHMgaXMgdGhlIHN1bSBvZiBleHBvbmVudHMgKGVhY2ggcHJpbWUgcG93ZXIgY2FuIGJlIGFkZGVkIG9yIHJlbW92ZWQgYnkgb25lIG9wZXJhdGlvbiB3aXRoIHRoYXQgcHJpbWUgb3IgaXRzIHBvd2VyKQogICAgICAgIC8vIEJ1dCB3ZSBjYW4gbXVsdGlwbHkvZGl2aWRlIGJ5IGFueSBpbnRlZ2VyIDE8PWE8PWssIHNvIGNhbiBjb21iaW5lIHByaW1lIHBvd2VycyBpbiBvbmUgb3BlcmF0aW9uIGlmIGEgY29tcG9zaXRlIG51bWJlciBpcyB1c2VkLgoKICAgICAgICAvLyBUaGUgcHJvYmxlbSByZWR1Y2VzIHRvIG1pbmltdW0gc3RlcHMgdG8gcmVwcmVzZW50IFIgYXMgYSBwcm9kdWN0IG9mIG51bWJlcnMgPD0gaywKICAgICAgICAvLyBlYWNoIG9wZXJhdGlvbiBpcyBtdWx0aXBseS9kaXZpZGUgYnkgb25lIGludGVnZXIgPD0gay4KCiAgICAgICAgLy8gU2luY2Ugd2Ugd2FudCBtaW5pbXVtIG9wZXJhdGlvbnMsIGFuZCBlYWNoIG9wZXJhdGlvbiBjYW4gbXVsdGlwbHkgb3IgZGl2aWRlIGJ5IGEgbnVtYmVyIDw9IGssCiAgICAgICAgLy8gdGhlIG1pbmltYWwgbnVtYmVyIG9mIG9wZXJhdGlvbnMgaXMgdGhlIHN1bSBvZiBwcmltZSBleHBvbmVudHMgaW4gdGhlIGZhY3Rvcml6YXRpb24gb2YgUi4KICAgICAgICAvLyBSZWFzb25pbmc6IHdlIGNhbm5vdCBnZXQgcmlkIG9mIHByaW1lIHBvd2VycyB3aXRob3V0IGF0IGxlYXN0IHRoYXQgbWFueSBvcGVyYXRpb25zLgoKICAgICAgICBpbnQ2NF90IGFucyA9IDA7CiAgICAgICAgZm9yIChhdXRvICZwciA6IGZhY3RvcnMpIHsKICAgICAgICAgICAgYW5zICs9IHByLnNlY29uZDsKICAgICAgICB9CgogICAgICAgIGNvdXQgPDwgYW5zIDw8ICJcbiI7CiAgICB9CiAgICByZXR1cm4gMDsKfQo=' | base64 -d > /app/main.cpp", 'Enter']
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
['C-d']
