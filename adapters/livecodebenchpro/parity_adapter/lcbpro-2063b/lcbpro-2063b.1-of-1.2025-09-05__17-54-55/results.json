{
    "id": "293698f2-4a0d-4def-9f00-62e5624adbe9",
    "trial_name": "lcbpro-2063b.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2063b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2063B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nAfter Little John borrowed expansion screws from auntie a few hundred times, eventually she decided to come and take back the unused ones.\nBut as they are a crucial part of home design, Little John decides to hide some in the most unreachable places -- under the eco-friendly wood veneers.\n\nYou are given an integer sequence $a_1, a_2, \\ldots, a_n$, and a segment $[l,r]$ ($1 \\le l \\le r \\le n$).\n\nYou must perform the following operation on the sequence exactly once.\n\n- Choose any subsequence$^{\\text{∗}}$ of the sequence $a$, and reverse it. Note that the subsequence does not have to be contiguous.\n\nFormally, choose any number of indices $i_1,i_2,\\ldots,i_k$ such that $1 \\le i_1 < i_2 < \\ldots < i_k \\le n$. Then, change the $i_x$-th element to the original value of the $i_{k-x+1}$-th element simultaneously for all $1 \\le x \\le k$.\n\nFind the minimum value of $a_l+a_{l+1}+\\ldots+a_{r-1}+a_r$ after performing the operation.\n\n$^{\\text{∗}}$A sequence $b$ is a subsequence of a sequence $a$ if $b$ can be obtained from $a$ by the deletion of several (possibly, zero or all) element from arbitrary positions.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains three integers $n$, $l$, $r$ ($1 \\le l \\le r \\le n \\le 10^5$) -- the length of $a$, and the segment $[l,r]$.\n\nThe second line of each test case contains $n$ integers $a_1,a_2,\\ldots,a_n$ ($1 \\le a_{i} \\le 10^9$).\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n### Output\n\nFor each test case, output the minimum value of $a_l+a_{l+1}+\\ldots+a_{r-1}+a_r$ on a separate line.\n\n### Example\n\n#### Input #1\n\n```\n\n6\n\n2 1 1\n\n2 1\n\n3 2 3\n\n1 2 3\n\n3 1 3\n\n3 1 2\n\n4 2 3\n\n1 2 2 2\n\n5 2 5\n\n3 3 2 3 5\n\n6 1 3\n\n3 6 6 4 3 2\n\n```\n\n#### Output #1\n\n```\n1\n3\n6\n3\n11\n8\n```\n\n### Note\n\nOn the second test case, the array is $a=[1,2,3]$ and the segment is $[2,3]$.\n\nAfter choosing the subsequence $a_1,a_3$ and reversing it, the sequence becomes $[3,2,1]$. Then, the sum $a_2+a_3$ becomes $3$. It can be shown that the minimum possible value of the sum is $3$.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2063b/lcbpro-2063b.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1142,
    "total_output_tokens": 966,
    "trial_started_at": "2025-09-06T01:24:31.921421+00:00",
    "trial_ended_at": "2025-09-06T01:25:21.933824+00:00",
    "agent_started_at": "2025-09-06T01:24:42.293782+00:00",
    "agent_ended_at": "2025-09-06T01:24:56.303917+00:00",
    "test_started_at": "2025-09-06T01:24:59.793232+00:00",
    "test_ended_at": "2025-09-06T01:25:04.128502+00:00"
}