['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
["echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgppbnQgbWFpbigpIHsKICAgIGlvczo6c3luY193aXRoX3N0ZGlvKGZhbHNlKTsKICAgIGNpbi50aWUobnVsbHB0cik7CiAgICBpbnQgdDsgY2luID4+IHQ7CiAgICB3aGlsZSAodC0tKSB7CiAgICAgICAgaW50IG4sIGwsIHI7CiAgICAgICAgY2luID4+IG4gPj4gbCA+PiByOwogICAgICAgIHZlY3Rvcjxsb25nIGxvbmc+IGEobisxKTsKICAgICAgICBmb3IgKGludCBpID0gMTsgaSA8PSBuOyBpKyspIGNpbiA+PiBhW2ldOwoKICAgICAgICAvLyBDYWxjdWxhdGUgaW5pdGlhbCBzdW0gb2Ygc2VnbWVudCBbbCxyXQogICAgICAgIGxvbmcgbG9uZyBiYXNlX3N1bSA9IDA7CiAgICAgICAgZm9yIChpbnQgaSA9IGw7IGkgPD0gcjsgaSsrKSBiYXNlX3N1bSArPSBhW2ldOwoKICAgICAgICAvLyBXZSB3YW50IHRvIGZpbmQgcGFpcnMgKGksaikgd2l0aCBpIDwgaiwgaSA8IGwgb3IgaSA+IHIgb3IgaiA8IGwgb3IgaiA+IHIsCiAgICAgICAgLy8gd2hlcmUgc3dhcHBpbmcgYVtpXSBhbmQgYVtqXSBhZnRlciByZXZlcnNpbmcgc3Vic2VxdWVuY2UgY2FuIHJlZHVjZSBzdW0gaW4gW2wscl0uCiAgICAgICAgLy8gVGhlIG9wZXJhdGlvbiByZXZlcnNlcyBjaG9zZW4gc3Vic2VxdWVuY2UsIHdoaWNoIHJldmVyc2VzIGVsZW1lbnRzIGF0IGNob3NlbiBpbmRpY2VzLgoKICAgICAgICAvLyBUbyBtaW5pbWl6ZSBzdW0gaW4gW2wscl0sIHdlIHRyeSB0byBzd2FwIGVsZW1lbnRzIGluc2lkZSBbbCxyXSB3aXRoIGVsZW1lbnRzIG91dHNpZGUKICAgICAgICAvLyBieSBjaG9vc2luZyBzdWJzZXF1ZW5jZSBjb250YWluaW5nIHRoZXNlIHR3byBpbmRpY2VzIGksai4KCiAgICAgICAgLy8gV2Ugd2lsbCB0cnkgdG8gZmluZCBtYXhpbXVtIGRlY3JlYXNlIGJ5IHN3YXBwaW5nIGFbaV0gYW5kIGFbal0gd2hlcmUgaTxqLgoKICAgICAgICBsb25nIGxvbmcgYW5zID0gYmFzZV9zdW07CgogICAgICAgIC8vIFdlJ2xsIHRyeSB0byBzd2FwIHBhaXJzIChpLGopIHdpdGggaTxqIGFuZCBpPGw8PXI8aiBvciBpPGw8PWo8PXIgb3IgbDw9aTw9cjxqCiAgICAgICAgLy8gQWN0dWFsbHksIHdlIG9ubHkgbmVlZCBwYWlycyB3aGVyZSBvbmUgaW5kZXggaXMgaW5zaWRlIFtsLHJdLCBvdGhlciBvdXRzaWRlLgoKICAgICAgICAvLyBXZSB3aWxsIGl0ZXJhdGUgd2l0aCB0d28gcG9pbnRlcnM6IAogICAgICAgIC8vIGxlZnQgcG9pbnRlciBpIGZyb20gbC0xIGRvd24gdG8gMSwgcmlnaHQgcG9pbnRlciBqIGZyb20gcisxIHVwIHRvIG4KCiAgICAgICAgaW50IGkgPSBsLTEsIGogPSByKzE7CiAgICAgICAgbG9uZyBsb25nIGN1cnJlbnRfc3VtID0gYmFzZV9zdW07CgogICAgICAgIHdoaWxlIChpID49IDEgJiYgaiA8PSBuKSB7CiAgICAgICAgICAgIC8vIFRyeSB0byBzd2FwIGFbaV0gYW5kIGFbal0KICAgICAgICAgICAgLy8gQWZ0ZXIgcmV2ZXJzYWwsIGFbaV0gYW5kIGFbal0gdmFsdWVzIHN3YXAgcG9zaXRpb25zCiAgICAgICAgICAgIC8vIFRoZSBzdW0gaW4gW2wscl0gY2hhbmdlcyBieTogKGFbaV0gcmVwbGFjZWQgYnkgYVtqXSkgYW5kIChhW2pdIHJlcGxhY2VkIGJ5IGFbaV0pCiAgICAgICAgICAgIC8vIElmIGkgaW4gW2wscl0sIHN1bSBsb3NlcyBhW2ldIGFuZCBnYWlucyBhW2pdCiAgICAgICAgICAgIC8vIElmIGogaW4gW2wscl0sIHN1bSBsb3NlcyBhW2pdIGFuZCBnYWlucyBhW2ldCiAgICAgICAgICAgIC8vIFNpbmNlIGkgPCBsIGFuZCBqID4gciwgb25seSBpbmRpY2VzIGluIFtsLHJdIGFyZSBmcm9tIGwuLnIKICAgICAgICAgICAgLy8gU28gdGhlIHN1bSBjaGFuZ2VzIGJ5IChhW2pdIC0gYVtpXSkgYmVjYXVzZSBhW2ldIHJlcGxhY2VkIGJ5IGFbal0gaW5zaWRlIHNlZ21lbnQKICAgICAgICAgICAgLy8gQnV0IHNpbmNlIGkgPCBsLCBpIG5vdCBpbiBzZWdtZW50LCBqID4gciwgaiBub3QgaW4gc2VnbWVudAogICAgICAgICAgICAvLyBTbyBubyBkaXJlY3QgaW1wYWN0IG9uIHN1bSwgYnV0IHN1YnNlcXVlbmNlIHJldmVyc2FsIGNoYW5nZXMgdmFsdWVzIGF0IHRoZXNlIHBvc2l0aW9ucwogICAgICAgICAgICAvLyBBY3R1YWxseSwgdGhlIHN1bSBpbiBzZWdtZW50IGNoYW5nZXMgb25seSBpZiB3ZSBzd2FwIGVsZW1lbnRzIHdpdGggaW5kaWNlcyBpbnNpZGUgW2wscl0KCiAgICAgICAgICAgIC8vIEJ1dCBvdXIgc3Vic2VxdWVuY2UgcmV2ZXJzYWwgcmV2ZXJzZXMgY2hvc2VuIGluZGljZXMgc2ltdWx0YW5lb3VzbHkKCiAgICAgICAgICAgIC8vIFdlIG5lZWQgdG8gY29uc2lkZXIgcHJlZml4IHN1bXMgdG8gZmluZCBtYXhpbXVtIGdhaW4KCiAgICAgICAgICAgIC8vIExldCdzIHRyeSB0byBkbyBpbmNyZW1lbnRhbCBhcHByb2FjaDoKICAgICAgICAgICAgLy8gV2UgdHJhY2sgZGVsdGEgPSBhW2ldIC0gYVtqXSwgc3VtIGluIFtsLHJdIGNoYW5nZXMgYnkgZGVsdGEgaWYgd2UgcmV2ZXJzZSBzdWJzZXF1ZW5jZSBjb250YWluaW5nIGkgYW5kIGouCgogICAgICAgICAgICAvLyBXZSB0cnkgdG8gbWF4aW1pemUgdGhlIHN1bSBkZWNyZWFzZSwgc28gbG9vayBmb3IgbWF4KGFbaV0gLSBhW2pdKQoKICAgICAgICAgICAgaWYgKGFbaV0gPiBhW2pdKSB7CiAgICAgICAgICAgICAgICBjdXJyZW50X3N1bSAtPSAoYVtpXSAtIGFbal0pOwogICAgICAgICAgICAgICAgYW5zID0gbWluKGFucywgY3VycmVudF9zdW0pOwogICAgICAgICAgICAgICAgaS0tOwogICAgICAgICAgICAgICAgaisrOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgLy8gSWYgbm8gYmVuZWZpdCwgbW92ZSBwb2ludGVyIHdpdGggc21hbGxlciB2YWx1ZQogICAgICAgICAgICAgICAgaWYgKGFbaV0gPD0gYVtqXSkgewogICAgICAgICAgICAgICAgICAgIGktLTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgaisrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBjb3V0IDw8IGFucyA8PCAiXG4iOwogICAgfQogICAgcmV0dXJuIDA7Cn0K' | base64 -d > /app/main.cpp", 'Enter']
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
['C-d']
