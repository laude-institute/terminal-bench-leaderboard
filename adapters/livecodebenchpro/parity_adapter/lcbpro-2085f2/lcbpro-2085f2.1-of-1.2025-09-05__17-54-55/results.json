{
    "id": "663c2dbe-bc4c-4a93-bee6-5200d36a848f",
    "trial_name": "lcbpro-2085f2.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2085f2",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2085F2)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nThis is the hard version of the problem. The difference between the versions is that in this version, $n\\le 4\\cdot 10^5$. You can hack only if you solved all versions of this problem.\n\nServal has a magic number $k$ ($k\\ge 2$). We call an array $r$ colorful if and only if:\n\n- The length of $r$ is $k$, and\n- Each integer between $1$ and $k$ appears exactly once in $r$.\n\nYou are given an array $a$ consisting of $n$ integers between $1$ and $k$. It is guaranteed that each integer between $1$ and $k$ appears in $a$ at least once. You can perform the following operation on $a$:\n\n- Choose an index $i$ ($1\\le i < n$), then swap $a_i$ and $a_{i+1}$.\n\nFind the minimum number of operations needed to make at least one subarray$^{\\text{∗}}$ of $a$ colorful. It can be shown that this is always possible under the constraints of the problem.\n\n$^{\\text{∗}}$An array $b$ is a subarray of an array $a$ if $b$ can be obtained from $a$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 1000$). The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $k$ ($2\\leq k\\leq n\\leq 4\\cdot 10^5$) -- the length of the array $a$ and Serval's magic number.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1\\leq a_i\\leq k$) -- the elements of the array $a$. It is guaranteed that each integer between $1$ and $k$ appears in $a$ at least once.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $4\\cdot 10^5$.\n\n### Output\n\nFor each test case, output a single integer -- the minimum number of operations needed to make at least one subarray of $a$ colorful.\n\n### Example\n\n#### Input #1\n\n```\n\n6\n\n3 2\n\n1 2 1\n\n7 3\n\n2 1 1 3 1 1 2\n\n6 3\n\n1 1 2 2 2 3\n\n6 3\n\n1 2 2 2 2 3\n\n10 5\n\n5 1 3 1 1 2 2 4 1 3\n\n9 4\n\n1 2 3 3 3 3 3 2 4\n\n```\n\n#### Output #1\n\n```\n0\n1\n2\n3\n4\n5\n```\n\n### Note\n\nIn the first test case, since the subarrays $[a_1, a_2] = [1, 2]$ and $[a_2, a_3] = [2, 1]$ are already colorful, we do not need to perform any operations. Thus, the answer is $0$.\n\nIn the second test case, we can swap $a_1$ and $a_2$ to obtain $[1, \\underline{2, 1, 3}, 1, 1, 2]$, which has a colorful subarray $[a_2, a_3, a_4] = [2, 1, 3]$. And the given array initially does not have any colorful subarrays, so the answer is $1$.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2085f2/lcbpro-2085f2.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1256,
    "total_output_tokens": 588,
    "trial_started_at": "2025-09-06T01:24:34.241810+00:00",
    "trial_ended_at": "2025-09-06T01:25:16.713391+00:00",
    "agent_started_at": "2025-09-06T01:24:43.838519+00:00",
    "agent_ended_at": "2025-09-06T01:24:52.518568+00:00",
    "test_started_at": "2025-09-06T01:24:55.848641+00:00",
    "test_ended_at": "2025-09-06T01:25:00.471071+00:00"
}