{
    "id": "e832d04a-1c8b-429d-a794-c63e0d20d98f",
    "trial_name": "lcbpro-2025e.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2025e",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2025E)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nIn the most popular card game in Berland, a deck of $n \\times m$ cards is used. Each card has two parameters: suit and rank. Suits in the game are numbered from $1$ to $n$, and ranks are numbered from $1$ to $m$. There is exactly one card in the deck for each combination of suit and rank.\n\nA card with suit $a$ and rank $b$ can beat a card with suit $c$ and rank $d$ in one of two cases:\n\n- $a = 1$, $c \\ne 1$ (a card of suit $1$ can beat a card of any other suit);\n- $a = c$, $b > d$ (a card can beat any other card of the same suit but of a lower rank).\n\nTwo players play the game. Before the game starts, they receive exactly half of the deck each. The first player wins if for every card of the second player, he can choose his card that can beat it, and there is no card that is chosen twice (i. e. there exists a matching of the first player's cards with the second player's cards such that in each pair the first player's card beats the second player's card). Otherwise, the second player wins.\n\nYour task is to calculate the number of ways to distribute the cards so that the first player wins. Two ways are considered different if there exists a card such that in one way it belongs to the first player and in the other way it belongs to the second player. The number of ways can be very large, so print it modulo $998244353$.\n\n### Input\n\nThe only line contains two integers $n$ and $m$ ($1 \\le n, m \\le 500$).\n\nAdditional constraint on the input: $m$ is even.\n\n### Output\n\nPrint a single integer -- the number of ways to distribute the cards so that the first player wins, taken modulo $998244353$.\n\n### Examples\n\n#### Input #1\n\n```\n\n1 4\n\n```\n\n#### Output #1\n\n```\n2\n```\n\n#### Input #2\n\n```\n\n2 2\n\n```\n\n#### Output #2\n\n```\n2\n```\n\n#### Input #3\n\n```\n\n3 6\n\n```\n\n#### Output #3\n\n```\n1690\n```\n\n#### Input #4\n\n```\n\n5 4\n\n```\n\n#### Output #4\n\n```\n568\n```\n\n#### Input #5\n\n```\n\n500 500\n\n```\n\n#### Output #5\n\n```\n84693741\n```",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2025e/lcbpro-2025e.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 942,
    "total_output_tokens": 1202,
    "trial_started_at": "2025-09-06T00:56:48.902423+00:00",
    "trial_ended_at": "2025-09-06T00:57:56.735192+00:00",
    "agent_started_at": "2025-09-06T00:57:18.725189+00:00",
    "agent_ended_at": "2025-09-06T00:57:35.063427+00:00",
    "test_started_at": "2025-09-06T00:57:36.495662+00:00",
    "test_ended_at": "2025-09-06T00:57:39.949219+00:00"
}