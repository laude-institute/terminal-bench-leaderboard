{
    "id": "baa4ba9a-57ee-4fbc-8eff-f09bf1a0cb1d",
    "trial_name": "lcbpro-2053e.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2053e",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2053E)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nEndless Repeating 7 Days\n\n-- r-906, [Panopticon](https://www.youtube.com/watch?v=_-Vd0ZGB-lo)\n\nThere is a tree consisting of $n$ vertices. Let a caterpillar be denoted by an integer pair $(p, q)$ ($1 \\leq p, q \\leq n$, $p \\neq q$): its head is at vertex $p$, its tail is at vertex $q$, and it dominates all the vertices on the simple path from $p$ to $q$ (including $p$ and $q$). The caterpillar sequence of $(p, q)$ is defined as the sequence consisting only of the vertices on the simple path, sorted in the ascending order of the distance to $p$.\n\nNora and Aron are taking turns moving the caterpillar, with Nora going first. Both players will be using his or her own optimal strategy:\n\n- They will play to make himself or herself win;\n- However, if it is impossible, they will play to prevent the other person from winning (thus, the game will end in a tie).\n\nIn Nora's turn, she must choose a vertex $u$ adjacent to vertex $p$, which is not dominated by the caterpillar, and move all the vertices in it by one edge towards vertex $u$$^{\\\\text{∗}}$. In Aron's turn, he must choose a vertex $v$ adjacent to vertex $q$, which is not dominated by the caterpillar, and move all the vertices in it by one edge towards vertex $v$. Note that the moves allowed to the two players are different.\n\nWhenever $p$ is a leaf$^{\\text{†}}$, Nora wins$^{\\text{‡}}$. Whenever $q$ is a leaf, Aron wins. If either initially both $p$ and $q$ are leaves, or after $10^{100}$ turns the game has not ended, the result is a tie.\n\nPlease count the number of integer pairs $(p, q)$ with $1 \\leq p, q \\leq n$ and $p \\neq q$ such that, if the caterpillar is initially $(p, q)$, Aron wins the game.\n\n$^{\\text{∗}}$In other words: Let the current caterpillar sequence be $c_1, c_2, \\ldots, c_k$, then after the move, the new caterpillar sequence becomes $d(u, c_1), d(u, c_2), \\ldots, d(u, c_k)$. Here, $d(x, y)$ is the next vertex on the simple path from $y$ to $x$.\n\n$^{\\text{†}}$In a tree, a vertex is called a leaf if and only if its degree is $1$.\n\n$^{\\text{‡}}$Therefore, Nora never fails to choose a vertex $u$ when the game has not ended. The same goes for Aron.\n\n### Input\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 2\\cdot 10^4$) -- the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($2 \\leq n \\leq 2\\cdot 10^5$) -- the number of vertices in the tree.\n\nThe following $n - 1$ lines each contain two integers $u$ and $v$ ($1 \\leq u, v \\leq n$), denoting an edge between vertices $u$ and $v$. It is guaranteed that the given edges form a tree.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $4\\cdot 10^5$.\n\n### Output\n\nFor each test case, output a single line containing an integer: the number of integer pairs $(p, q)$ which make Aron win.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n2\n\n1 2\n\n5\n\n1 2\n\n1 3\n\n2 4\n\n2 5\n\n12\n\n1 6\n\n11 2\n\n4 8\n\n12 3\n\n2 7\n\n6 12\n\n8 1\n\n2 3\n\n5 12\n\n9 2\n\n10 3\n\n10\n\n1 2\n\n2 3\n\n3 4\n\n4 5\n\n5 6\n\n4 7\n\n6 8\n\n4 9\n\n4 10\n\n25\n\n1 16\n\n11 22\n\n6 14\n\n3 1\n\n20 14\n\n23 17\n\n25 19\n\n10 11\n\n3 18\n\n10 6\n\n2 21\n\n4 5\n\n11 12\n\n4 9\n\n9 13\n\n8 6\n\n6 1\n\n3 7\n\n8 19\n\n10 24\n\n15 13\n\n1 2\n\n3 4\n\n17 8\n\n```\n\n#### Output #1\n\n```\n0\n6\n40\n27\n171\n```\n\n### Note\n\nIn the first test case, all possible caterpillars are $(1, 2)$ and $(2, 1)$, resulting in a tie at the beginning, since both $p$ and $q$ are leaves.\n\nIn the second test case, the caterpillars that allow Aron to win are the following: $(1, 3)$, $(1, 4)$, $(1, 5)$, $(2, 3)$, $(2, 4)$, $(2, 5)$. Let's look at some specific caterpillars.\n\n- For the caterpillar $(1, 5)$: vertex $p = 1$ is not a leaf, but vertex $q = 5$ is, so Aron wins at the beginning.\n- For the caterpillar $(2, 1)$: vertex $p = 2$ is not a leaf, neither is vertex $q = 1$. In Nora's first move, she can choose to move the caterpillar towards vertex $5$, therefore the caterpillar becomes $(5, 2)$, and vertex $p = 5$ is a leaf, so Nora will win.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2053e/lcbpro-2053e.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1728,
    "total_output_tokens": 962,
    "trial_started_at": "2025-09-06T01:23:06.846913+00:00",
    "trial_ended_at": "2025-09-06T01:24:02.202712+00:00",
    "agent_started_at": "2025-09-06T01:23:20.263729+00:00",
    "agent_ended_at": "2025-09-06T01:23:35.425264+00:00",
    "test_started_at": "2025-09-06T01:23:39.448501+00:00",
    "test_ended_at": "2025-09-06T01:23:44.941605+00:00"
}