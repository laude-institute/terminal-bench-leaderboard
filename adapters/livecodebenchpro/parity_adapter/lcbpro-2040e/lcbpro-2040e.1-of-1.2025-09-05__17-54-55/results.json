{
    "id": "8cd928ac-f9ad-45b3-98d6-d7fcdcd4418c",
    "trial_name": "lcbpro-2040e.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2040e",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2040E)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given a tree with $n$ vertices.\n\nLet's place a robot in some vertex $v \\ne 1$, and suppose we initially have $p$ coins. Consider the following process, where in the $i$-th step (starting from $i = 1$):\n\n- If $i$ is odd, the robot moves to an adjacent vertex in the direction of vertex $1$;\n- Else, $i$ is even. You can either pay one coin (if there are some left) and then the robot moves to an adjacent vertex in the direction of vertex $1$, or not pay, and then the robot moves to an adjacent vertex chosen uniformly at random.\n\nThe process stops as soon as the robot reaches vertex $1$. Let $f(v, p)$ be the minimum possible expected number of steps in the process above if we spend our coins optimally.\n\nAnswer $q$ queries, in the $i$-th of which you have to find the value of $f(v_i, p_i)$, modulo$^{\\text{∗}}$ $998\\,244\\,353$.\n\n$^{\\text{∗}}$ Formally, let $M = 998\\,244\\,353$. It can be shown that the answer can be expressed as an irreducible fraction $\\frac{p}{q}$, where $p$ and $q$ are integers and $q \\not \\equiv 0 \\pmod{M}$. Output the integer equal to $p \\cdot q^{-1} \\bmod M$. In other words, output such an integer $x$ that $0 \\le x < M$ and $x \\cdot q \\equiv p \\pmod{M}$.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^3$). The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $q$ ($2 \\le n \\le 2 \\cdot 10^3$; $1 \\le q \\le 2 \\cdot 10^3$) -- the number of vertices in the tree and the number of queries.\n\nThe next $n - 1$ lines contain the edges of the tree, one edge per line. The $i$-th line contains two integers $u_i$ and $v_i$ ($1 \\le u_i, v_i \\le n$; $u_i \\neq v_i$), denoting the edge between the nodes $u_i$ and $v_i$.\n\nThe next $q$ lines contain two integers $v_i$ and $p_i$ ($2 \\le v_i \\le n$; $0 \\le p_i \\le n$).\n\nIt's guaranteed that the given edges form a tree.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10 ^ 3$.\n\nIt is guaranteed that the sum of $q$ over all test cases does not exceed $2 \\cdot 10 ^ 3$.\n\n### Output\n\nFor each test case, print $q$ integers: the values of $f(v_i, p_i)$ modulo $998\\,244\\,353$.\n\nFormally, let $M = 998\\,244\\,353$. It can be shown that the answer can be expressed as an irreducible fraction $\\frac{p}{q}$, where $p$ and $q$ are integers and $q \\not \\equiv 0 \\pmod{M}$. Output the integer equal to $p \\cdot q^{-1} \\bmod M$. In other words, output such an integer $x$ that $0 \\le x < M$ and $x \\cdot q \\equiv p \\pmod{M}$.\n\n### Example\n\n#### Input #1\n\n```\n\n2\n\n4 4\n\n1 2\n\n2 3\n\n2 4\n\n2 0\n\n3 0\n\n4 0\n\n3 1\n\n12 10\n\n1 2\n\n2 3\n\n2 4\n\n1 5\n\n5 6\n\n6 7\n\n6 8\n\n6 9\n\n8 10\n\n10 11\n\n10 12\n\n6 0\n\n9 0\n\n10 0\n\n11 0\n\n3 1\n\n7 1\n\n10 1\n\n12 1\n\n12 2\n\n11 12\n\n```\n\n#### Output #1\n\n```\n1\n6\n6\n2\n4\n9\n8\n15\n2\n3\n6\n9\n5\n5\n```\n\n### Note\n\nThe tree in the first test case:\n\n![](https://espresso.codeforces.com/e4dd6d29016ec239c8901966b682432022feee23.png)\n\nIn the first query, the expected value is equal to $1$, since the robot starts moving from vertex $2$ to vertex $1$ in the first step and the process stops.\n\nLet's calculate the expected value in the second query ($x$ is the number of steps):\n\n- $P(x < 2) = 0$, the distance to vertex $1$ is $2$ and the robot cannot reach it in fewer steps.\n- $P(x = 2) = \\frac{1}{3}$, since there is only one sequence of steps leading to $x = 2$. This is $3 \\rightarrow_{1} 2 \\rightarrow_{0.33} 1$ with probability $1 \\cdot \\frac{1}{3}$.\n- $P(x \\bmod 2 = 1) = 0$, since the robot can reach vertex $1$ by only taking an even number of steps.\n- $P(x = 4) = \\frac{2}{9}$: possible paths $3 \\rightarrow_{1} 2 \\rightarrow_{0.67} [3, 4] \\rightarrow_{1} 2 \\rightarrow_{0.33} 1$.\n- $P(x = 6) = \\frac{4}{27}$: possible paths $3 \\rightarrow_{1} 2 \\rightarrow_{0.67} [3, 4] \\rightarrow_{1} 2 \\rightarrow_{0.67} [3, 4] \\rightarrow_{1} 2 \\rightarrow_{0.33} 1$.\n- $P(x = i \\cdot 2) = \\frac{2^{i - 1}}{3^i}$ in the general case.\n\nAs a result, $f(v, p) = \\sum\\limits_{i=1}^{\\infty}{i \\cdot 2 \\cdot \\frac{2^{i - 1}}{3^i}} = 6$.\n\nThe tree in the second test case:\n\n![](https://espresso.codeforces.com/8a8969f859fff085171f272e9a14ce0d42940506.png)",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2040e/lcbpro-2040e.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1893,
    "total_output_tokens": 1927,
    "trial_started_at": "2025-09-06T01:20:42.280850+00:00",
    "trial_ended_at": "2025-09-06T01:21:50.605315+00:00",
    "agent_started_at": "2025-09-06T01:20:53.059015+00:00",
    "agent_ended_at": "2025-09-06T01:21:24.758436+00:00",
    "test_started_at": "2025-09-06T01:21:27.705667+00:00",
    "test_ended_at": "2025-09-06T01:21:31.632562+00:00"
}