{
    "id": "a8b5172e-17f1-4d6f-8c5d-fad4c08878ed",
    "trial_name": "lcbpro-1990b.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-1990b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1990B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nFor an array $b$ of size $m$, we define:\n\n- the maximum prefix position of $b$ is the smallest index $i$ that satisfies $b_1+\\ldots+b_i=\\max_{j=1}^{m}(b_1+\\ldots+b_j)$;\n- the maximum suffix position of $b$ is the largest index $i$ that satisfies $b_i+\\ldots+b_m=\\max_{j=1}^{m}(b_j+\\ldots+b_m)$.\n\nYou are given three integers $n$, $x$, and $y$ ($x > y$). Construct an array $a$ of size $n$ satisfying:\n\n- $a_i$ is either $1$ or $-1$ for all $1 \\le i \\le n$;\n- the maximum prefix position of $a$ is $x$;\n- the maximum suffix position of $a$ is $y$.\n\nIf there are multiple arrays that meet the conditions, print any. It can be proven that such an array always exists under the given conditions.\n\n### Input\n\nThe first line contains an integer $t$ ($1 \\leq t \\leq 10^4$)Â -- the number of test cases.\n\nFor each test case:\n\n- The only line contains three integers $n$, $x$, and $y$ ($2 \\leq n \\leq 10^5, 1 \\le y \\lt x \\le n)$.\n\nIt is guaranteed that the sum of $n$ over all test cases will not exceed $10^5$.\n\n### Output\n\nFor each test case, output $n$ space-separated integers $a_1, a_2, \\ldots, a_n$ in a new line.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n2 2 1\n\n4 4 3\n\n6 5 1\n\n```\n\n#### Output #1\n\n```\n1 1\n1 -1 1 1\n1 1 -1 1 1 -1```\n\n### Note\n\nIn the second test case,\n\n- $i=x=4$ is the smallest index that satisfies $a_1+\\ldots +a_i=\\max_{j=1}^{n}(a_1+\\ldots+a_j)=2$;\n- $i=y=3$ is the greatest index that satisfies $a_i+\\ldots +a_n=\\max_{j=1}^{n}(a_j+\\ldots+a_n)=2$.\n\nThus, the array $a=[1,-1,1,1]$ is considered correct.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-1990b/lcbpro-1990b.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 952,
    "total_output_tokens": 299,
    "trial_started_at": "2025-09-06T00:55:57.074001+00:00",
    "trial_ended_at": "2025-09-06T00:56:55.174357+00:00",
    "agent_started_at": "2025-09-06T00:56:18.145413+00:00",
    "agent_ended_at": "2025-09-06T00:56:23.472806+00:00",
    "test_started_at": "2025-09-06T00:56:28.361188+00:00",
    "test_ended_at": "2025-09-06T00:56:32.959536+00:00"
}