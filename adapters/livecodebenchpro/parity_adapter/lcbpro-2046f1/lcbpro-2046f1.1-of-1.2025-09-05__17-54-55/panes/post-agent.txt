root@b4abfa1e6db5:/app# echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgovLyBUaGlzIHByb2JsZW0gcmVxdWlyZXMgY2hlY2tpbmcgaWYgdGhlIGdpdmVuIHN0cm
luZyBjYW4gYmUgY29uc3RydWN0ZWQgYnkKLy8gaW5zZXJ0aW5nIHRyaXBsZXMgb2YgbGV0dGVycyAnWScsICdEJywgJ1gnIGludG8gYW4gaW5pdGlhbGx5IGVtcHR5IHN0cmluZwovLyBzdWNoIHRoYXQgbm8gdH
dvIGlkZW50aWNhbCBsZXR0ZXJzIGFyZSBhZGphY2VudCBhZnRlciBlYWNoIGluc2VydGlvbi4KLy8gR2l2ZW4gdGhlIHN0cmluZyBoYXMgbGVuZ3RoIG4gbXVsdGlwbGUgb2YgMyBhbmQgbm8gcXVlc3Rpb24gbW
Fya3MuCi8vIFdlIG5lZWQgdG8gb3V0cHV0IFlFUy9OTywgdGhlIGZpbmFsIHN0cmluZyAod2hpY2ggaXMgdGhlIGlucHV0IGl0c2VsZiBpZiBZRVMpLAovLyBhbmQgdGhlIHNlcXVlbmNlIG9mIGluc2VydGlvbi
BvcGVyYXRpb25zLgoKLy8gS2V5IG9ic2VydmF0aW9uczoKLy8gLSBUaGUgc3RyaW5nIGxlbmd0aCBpcyBuID0gMyAqIGsuCi8vIC0gVGhlIHN0cmluZyBjYW4gYmUgdmlld2VkIGFzIGsgYmxvY2tzIG9mIDMgbG
V0dGVycyBlYWNoLCBlYWNoIGJsb2NrIGNvbnRhaW5zIGV4YWN0bHkgb25lICdZJywgb25lICdEJywgYW5kIG9uZSAnWCcuCi8vICAgKEJlY2F1c2UgdGhlIHByb2JsZW0gc3RhdGVzIGVhY2ggaW5zZXJ0aW9uIG
FkZHMgZXhhY3RseSBvbmUgY29weSBvZiBlYWNoIGxldHRlci4KLy8gICAgU28gdG90YWwgY291bnRzIG9mIFksRCxYIG11c3QgYmUgZXF1YWwgdG8gay4pCi8vIC0gQWZ0ZXIgZWFjaCBpbnNlcnRpb24gb2YgYS
B0cmlwbGUsIHRoZSBzdHJpbmcgbGVuZ3RoIGluY3JlYXNlcyBieSAzLgovLyAtIFdlIG11c3QgZmluZCBhIHNlcXVlbmNlIG9mIGluc2VydGlvbnMgdGhhdCBsZWFkIHRvIHRoZSBmaW5hbCBzdHJpbmcuCi8vIC
0gRWFjaCBpbnNlcnRpb24gaW5zZXJ0cyBhIHRyaXBsZSBvZiBsZXR0ZXJzICdZJywgJ0QnLCAnWCcgaW4gc29tZSBvcmRlciB3aXRoIG5vIHR3byBhZGphY2VudCBpZGVudGljYWwgbGV0dGVycyBpbiB0aGUgcm
VzdWx0aW5nIHN0cmluZyBhZnRlciBpbnNlcnRpb24uCgovLyBBcHByb2FjaDoKLy8gMS4gQ2hlY2sgaWYgY291bnRzIG9mIFksIEQsIFggYXJlIGVxdWFsIChvdGhlcndpc2UgTk8pLgovLyAyLiBQYXJ0aXRpb2
4gdGhlIHN0cmluZyBpbnRvIGJsb2NrcyBvZiAzIGxldHRlcnMuCi8vIDMuIEVhY2ggYmxvY2sgbXVzdCBiZSBhIHBlcm11dGF0aW9uIG9mICdZJywgJ0QnLCAnWCcuIElmIG5vdCwgTk8uCi8vIDQuIFdlIHJlY2
9uc3RydWN0IGluc2VydGlvbiBvcGVyYXRpb25zIGZyb20gdGhlIGZpbmFsIHN0cmluZyBiYWNrd2FyZHM6Ci8vICAgIFdlIHNpbXVsYXRlIGZyb20gZW1wdHkgc3RyaW5nLCBpbnNlcnRpbmcgdGhlIHRyaXBsZX
MgaW4gb3JkZXIuCi8vICAgIEJ1dCB3ZSBkbyBub3Qga25vdyB0aGUgb3JkZXIgb2YgbGV0dGVycyBpbiBlYWNoIHRyaXBsZSAoc2luY2UgaW5zZXJ0aW9uIG9yZGVyIG9mIHRoZSB0cmlwbGUgbGV0dGVycyBtYX
R0ZXJzKS4KLy8gICAgV2UgdHJ5IGFsbCBwZXJtdXRhdGlvbnMgb2YgJ1knLCdEJywnWCcgZm9yIGVhY2ggYmxvY2sgdG8gZmluZCBhIHNlcXVlbmNlIHRoYXQgcHJvZHVjZXMgdGhlIGZpbmFsIHN0cmluZyB3aX
RoIG5vIGFkamFjZW50IGR1cGxpY2F0ZXMgYWZ0ZXIgZWFjaCBpbnNlcnRpb24uCi8vIDUuIFdlIHVzZSBhIGJhY2t0cmFja2luZyBvciBncmVlZHkgYXBwcm9hY2ggdG8gZmluZCBzdWNoIGEgc2VxdWVuY2UuCg
ovLyBTaW5jZSB0aGUgcHJvYmxlbSBzaXplIGlzIGxhcmdlIChzdW0gbiB1cCB0byAyKjEwXjUpLCBiYWNrdHJhY2tpbmcgaXMgdG9vIHNsb3cuCi8vIEJ1dCBzaW5jZSB0aGUgaW5wdXQgc3RyaW5nIGlzIGdpdm
VuIGFuZCBmaXhlZCwgd2UgY2FuIHRyeSBhIGdyZWVkeSBhcHByb2FjaCBmb3IgZWFjaCBibG9jazoKLy8gVHJ5IGFsbCBwZXJtdXRhdGlvbnMgb2YgJ1knLCdEJywnWCcgZm9yIHRoZSBibG9jayBhbmQgY2hlY2
sgaWYgaW5zZXJ0aW5nIGxldHRlcnMgaW4gdGhhdCBvcmRlciBhdCBzb21lIHBvc2l0aW9uIHAgKDAgdG8gY3VycmVudCBsZW5ndGgpCi8vIHlpZWxkcyBhIHZhbGlkIGludGVybWVkaWF0ZSBzdHJpbmcgd2l0aC
BubyBhZGphY2VudCBlcXVhbCBsZXR0ZXJzLgovLwovLyBCdXQgdGhlIHByb2JsZW0gc3RhdGVzIHRoYXQgdGhlIGluc2VydGlvbiBwb3NpdGlvbiBwIGlzIHRoZSBudW1iZXIgb2YgbGV0dGVycyB0byBza2lwIG
Zyb20gdGhlIGJlZ2lubmluZywKLy8gYW5kIGFsbCB0aHJlZSBsZXR0ZXJzIGFyZSBpbnNlcnRlZCBhdCB0aGUgc2FtZSBwb3NpdGlvbiBwLCBpbiB0aGUgb3JkZXIgZ2l2ZW4uCi8vIFNvIGFmdGVyIGluc2VydG
lvbiBvZiB0aHJlZSBsZXR0ZXJzIGMxLGMyLGMzIGF0IHBvc2l0aW9uIHAsIHRoZSBzdHJpbmcgYmVjb21lczoKLy8gc1swLi5wLTFdICsgYzEgKyBjMiArIGMzICsgc1twLi5lbmRdCgovLyBUaGUgcHJvYmxlbS
BzdGF0ZXMgbm8gdHdvIGFkamFjZW50IGxldHRlcnMgYXJlIGVxdWFsIGFmdGVyIGVhY2ggaW5zZXJ0aW9uLgoKLy8gVG8gY29uc3RydWN0IHRoZSBzb2x1dGlvbjoKLy8gV2Ugc3RhcnQgZnJvbSBlbXB0eSBzdH
JpbmcgcyA9ICIiCi8vIEZvciBlYWNoIGJsb2NrIGkgZnJvbSAwIHRvIGstMToKLy8gICBGb3IgZWFjaCBwZXJtdXRhdGlvbiBwZXJtIG9mIFsnWScsJ0QnLCdYJ106Ci8vICAgICBUcnkgYWxsIGluc2VydGlvbi
Bwb3NpdGlvbnMgcCBpbiBbMC4ubGVuZ3RoKHMpXToKLy8gICAgICAgSW5zZXJ0IHBlcm0gbGV0dGVycyBhdCBwCi8vICAgICAgIENoZWNrIG5vIHR3byBhZGphY2VudCBsZXR0ZXJzIGVxdWFsCi8vICAgICAgIE
lmIHZhbGlkLCBrZWVwIHMgdXBkYXRlZCwgcmVjb3JkIG9wZXJhdGlvbgovLyAgICAgICBicmVhawovLyAgIElmIG5vIHZhbGlkIGluc2VydGlvbiBmb3VuZCBmb3IgdGhpcyBibG9jaywgTk8KCi8vIEJ1dCB0cn
lpbmcgYWxsIHAgZm9yIGVhY2ggYmxvY2sgYW5kIGFsbCBwZXJtdXRhdGlvbnMgaXMgTygzISpuXjIpLCB0b28gc2xvdy4KLy8gV2UgbmVlZCBhbiBPKG4pIG9yIE8obiBsb2cgbikgYXBwcm9hY2guCgovLyBPYn
NlcnZhdGlvbjoKLy8gU2luY2UgdGhlIGZpbmFsIHN0cmluZyBpcyBmaXhlZCwgYW5kIHdlIGhhdmUgdG8gaW5zZXJ0IGJsb2NrcyBpbiBvcmRlciwKLy8gd2UgY2FuIHRyeSB0byByZWNvbnN0cnVjdCB0aGUgaW
5zZXJ0aW9uIG9wZXJhdGlvbnMgYmFja3dhcmRzLgoKLy8gQmFja3dhcmRzIGFwcHJvYWNoOiAobW9yZSBlZmZpY2llbnQpCi8vIC0gV2Uga25vdyB0aGUgZmluYWwgc3RyaW5nIHMgb2YgbGVuZ3RoIG4uCi8vIC
0gV2Uga25vdyBzIGlzIGNvbnN0cnVjdGVkIGJ5IGluc2VydGluZyBrIGJsb2NrcyBvZiAzIGxldHRlcnMgZWFjaC4KLy8gLSBXZSByZW1vdmUgdGhlIGxhc3QgaW5zZXJ0ZWQgdHJpcGxlIGZyb20gcy4KLy8gLS
BGb3IgdGhhdCwgd2UgdHJ5IGFsbCBwZXJtdXRhdGlvbnMgb2YgJ1knLCdEJywnWCcgYW5kIGFsbCBwb3NpdGlvbnMgcCBpbiBzIHdoZXJlIHJlbW92aW5nIHRoZXNlIHRocmVlIGxldHRlcnMgY291bGQgcHJvZH
VjZSBhIHZhbGlkIHByZXZpb3VzIHN0cmluZyB3aXRoIG5vIHR3byBhZGphY2VudCBlcXVhbCBsZXR0ZXJzIGFmdGVyIHJlbW92YWwuCi8vIC0gQnV0IGNoZWNraW5nIGFsbCBwb3NpdGlvbnMgcCBpcyB0b28gZX
hwZW5zaXZlLgoKLy8gSG93ZXZlciwgdGhlIHByb2JsZW0ncyBleGFtcGxlIHNob3dzIHRoZSBpbnNlcnRpb24gcG9zaXRpb25zIGFyZSBhbHdheXMgaW4gaW5jcmVhc2luZyBvcmRlciBvciBzbWFsbCBwb3NpdG
lvbnMuCi8vIEFsc28sIHRoZSBwcm9ibGVtIHN0YXRlcyB0aGF0IHRoZSBpbnNlcnRpb24gcG9zaXRpb24gcCBjYW5ub3QgZXhjZWVkIGN1cnJlbnQgbGVuZ3RoLgoKLy8gQWx0ZXJuYXRpdmUgYXBwcm9hY2g6Ci
8vIFRoZSBwcm9ibGVtIGd1YXJhbnRlZXMgdGhlIHRlbXBsYXRlIGhhcyBubyBxdWVzdGlvbiBtYXJrcyBhbmQgdGhlIGxlbmd0aCBpcyBtdWx0aXBsZSBvZiAzLgovLyBDb3VudCBvZiBlYWNoIGxldHRlciBtdX
N0IGJlIGVxdWFsLgovLyBBbHNvLCBzaW5jZSB0aGUgZmluYWwgc3RyaW5nIGlzIGdpdmVuLCBhbmQgZWFjaCB0cmlwbGUgaW5zZXJ0ZWQgY29uc2lzdHMgb2Ygb25lIFksIG9uZSBELCBvbmUgWCwKLy8gd2UgY2
FuIHBhcnRpdGlvbiB0aGUgc3RyaW5nIGludG8gYmxvY2tzIG9mIDMgbGV0dGVycyBlYWNoIChzWzAuLjJdLCBzWzMuLjVdLCAuLi4gc1tuLTMuLm4tMV0pLAovLyBlYWNoIGJsb2NrIGlzIGEgcGVybXV0YXRpb2
4gb2YgWSwgRCwgWC4KCi8vIEJlY2F1c2UgdGhlIHByb2JsZW0gc3RhdGVzIGl0J3MgdGhlIGVhc3kgdmVyc2lvbiB3aXRoIG5vIHF1ZXN0aW9uIG1hcmtzLAovLyB3ZSBjYW4gb3V0cHV0ICJZRVMiLCB0aGUgZ2
l2ZW4gc3RyaW5nLCBhbmQgYSBmaXhlZCBzZXF1ZW5jZSBvZiBpbnNlcnRpb25zOgovLyBJbnNlcnQgdGhlIGZpcnN0IHRyaXBsZSBhdCBwb3NpdGlvbiAwIChlbXB0eSBzdHJpbmcgdG8gMyBsZXR0ZXJzKSwKLy
8gdGhlbiBpbnNlcnQgdGhlIHNlY29uZCB0cmlwbGUgYXQgcG9zaXRpb24gMywgZXRjLgovLyBUaGlzIHdpbGwgcHJvZHVjZSB0aGUgZmluYWwgc3RyaW5nIGFzIGNvbmNhdGVuYXRpb24gb2YgYmxvY2tzLgoKLy
8gSG93ZXZlciwgdGhlIHByb2JsZW0gcmVxdWlyZXMgdGhhdCBhZnRlciBlYWNoIGluc2VydGlvbiwgbm8gdHdvIGFkamFjZW50IGxldHRlcnMgYXJlIGVxdWFsLgovLyBTbyB3ZSBtdXN0IGNoZWNrIHRoYXQgY2
9uY2F0ZW5hdGluZyBibG9ja3MgaW4gb3JkZXIgZG9lcyBub3QgcHJvZHVjZSBhZGphY2VudCBlcXVhbCBsZXR0ZXJzIGF0IGJsb2NrIGJvdW5kYXJpZXMuCgovLyBJZiB0aGlzIGlzIHRydWUsIHdlIGNhbiBvdX
RwdXQgWUVTLCB0aGUgZ2l2ZW4gc3RyaW5nLCBhbmQgdGhlIHNlcXVlbmNlIG9mIG9wZXJhdGlvbnM6Ci8vIEZvciBpID0gMCB0byBrLTE6Ci8vICAgSW5zZXJ0IGJsb2NrIGkgbGV0dGVycyBhdCBwb3NpdGlvbi
BpKjMKCi8vIExldCdzIGltcGxlbWVudCB0aGlzIGFwcHJvYWNoOgoKaW50IG1haW4oKSB7CiAgICBpb3M6OnN5bmNfd2l0aF9zdGRpbyhmYWxzZSk7CiAgICBjaW4udGllKG51bGxwdHIpOwoKICAgIGludCB0Ow
ogICAgY2luID4+IHQ7CgogICAgd2hpbGUgKHQtLSkgewogICAgICAgIHN0cmluZyBzOwogICAgICAgIGNpbiA+PiBzOwogICAgICAgIGludCBuID0gKGludClzLnNpemUoKTsKCiAgICAgICAgLy8gQ2hlY2sgY2
91bnRzIG9mIFksIEQsIFgKICAgICAgICBpbnQgY291bnRZID0gY291bnQocy5iZWdpbigpLCBzLmVuZCgpLCAnWScpOwogICAgICAgIGludCBjb3VudEQgPSBjb3VudChzLmJlZ2luKCksIHMuZW5kKCksICdEJy
k7CiAgICAgICAgaW50IGNvdW50WCA9IGNvdW50KHMuYmVnaW4oKSwgcy5lbmQoKSwgJ1gnKTsKICAgICAgICBpZiAoY291bnRZICE9IG4gLyAzIHx8IGNvdW50RCAhPSBuIC8gMyB8fCBjb3VudFggIT0gbiAvID
MpIHsKICAgICAgICAgICAgY291dCA8PCAiTk9cbiI7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KCiAgICAgICAgLy8gQ2hlY2sgZWFjaCBibG9jayBvZiAzIGxldHRlcnMgaXMgYSBwZXJtdXRhdG
lvbiBvZiBZLEQsWAogICAgICAgIGJvb2wgdmFsaWRfYmxvY2tzID0gdHJ1ZTsKICAgICAgICBpbnQgayA9IG4gLyAzOwogICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgazsgaSsrKSB7CiAgICAgICAgICAgIG
FycmF5PGludCwgMz4gZnJlcSA9IHswLDAsMH07IC8vIFksRCxYCiAgICAgICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgMzsgaisrKSB7CiAgICAgICAgICAgICAgICBjaGFyIGMgPSBzW2kqMytqXTsKICAgIC
AgICAgICAgICAgIGlmIChjID09ICdZJykgZnJlcVswXSsrOwogICAgICAgICAgICAgICAgZWxzZSBpZiAoYyA9PSAnRCcpIGZyZXFbMV0rKzsKICAgICAgICAgICAgICAgIGVsc2UgaWYgKGMgPT0gJ1gnKSBmcm
VxWzJdKys7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGZyZXFbMF0gIT0gMSB8fCBmcmVxWzFdICE9IDEgfHwgZnJlcVsyXSAhPTEpIHsKICAgICAgICAgICAgICAgIHZhbGlkX2Jsb2NrcyA9IGZhbH
NlOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKCF2YWxpZF9ibG9ja3MpIHsKICAgICAgICAgICAgY291dCA8PCAiTk9cbiI7CiAgICAgICAgICAgIG
NvbnRpbnVlOwogICAgICAgIH0KCiAgICAgICAgLy8gQ2hlY2sgbm8gYWRqYWNlbnQgZXF1YWwgbGV0dGVycyBpbnNpZGUgcwogICAgICAgIGJvb2wgbm9fYWRqX2VxdWFsID0gdHJ1ZTsKICAgICAgICBmb3IgKG
ludCBpID0gMTsgaSA8IG47IGkrKykgewogICAgICAgICAgICBpZiAoc1tpXSA9PSBzW2ktMV0pIHsKICAgICAgICAgICAgICAgIG5vX2Fkal9lcXVhbCA9IGZhbHNlOwogICAgICAgICAgICAgICAgYnJlYWs7Ci
AgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKCFub19hZGpfZXF1YWwpIHsKICAgICAgICAgICAgY291dCA8PCAiTk9cbiI7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KCiAgICAgIC
AgLy8gQ2hlY2sgYm91bmRhcmllcyBiZXR3ZWVuIGJsb2NrczogbGFzdCBsZXR0ZXIgb2YgYmxvY2sgaSBhbmQgZmlyc3QgbGV0dGVyIG9mIGJsb2NrIGkrMQogICAgICAgIC8vIEFjdHVhbGx5IGNoZWNraW5nIG
5vIHR3byBhZGphY2VudCBlcXVhbCBsZXR0ZXJzIGluIHMgaXMgZW5vdWdoCgogICAgICAgIC8vIFdlIGNhbiBvdXRwdXQgWUVTLCBzLCBhbmQgdGhlIGluc2VydGlvbiBvcGVyYXRpb25zOgogICAgICAgIC8vIE
luc2VydCBibG9jayAwIGF0IHBvc2l0aW9uIDAKICAgICAgICAvLyBJbnNlcnQgYmxvY2sgMSBhdCBwb3NpdGlvbiAzCiAgICAgICAgLy8gSW5zZXJ0IGJsb2NrIDIgYXQgcG9zaXRpb24gNgogICAgICAgIC8vIC
4uLgoKICAgICAgICBjb3V0IDw8ICJZRVNcbiIgPDwgcyA8PCAiXG4iOwoKICAgICAgICAvLyBGb3IgZWFjaCBibG9jayBwcmludCB0aGUgb3BlcmF0aW9uczogdGhyZWUgcGFpcnMgYyBwCiAgICAgICAgLy8gV2
UgcHJpbnQgbGV0dGVycyBpbiBvcmRlciB0aGV5IGFwcGVhciBpbiBzLCBpbnNlcnQgYXQgcG9zaXRpb24gaSozCiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBrOyBpKyspIHsKICAgICAgICAgICAgaW50IH
AgPSBpICogMzsKICAgICAgICAgICAgLy8gUHJpbnQgbGV0dGVycyB3aXRoIHBvc2l0aW9uIHAKICAgICAgICAgICAgLy8gVGhlIHByb2JsZW0gc3RhdGVzIHRoZSBpbnNlcnRpb24gcG9zaXRpb24gaXMgdGhlIG
51bWJlciBvZiBsZXR0ZXJzIHRvIHNraXAgZnJvbSBzdGFydAogICAgICAgICAgICAvLyBBbGwgdGhyZWUgbGV0dGVycyBpbnNlcnRlZCBhdCB0aGUgc2FtZSBwb3NpdGlvbiBwIChpbiBvcmRlcikKICAgICAgIC
AgICAgY291dCA8PCBzW2kqM10gPDwgJyAnIDw8IHAgPDwgJyAnIDw8IHNbaSozKzFdIDw8ICcgJyA8PCBwIDw8ICcgJyA8PCBzW2kqMysyXSA8PCAnICcgPDwgcCA8PCAiXG4iOwogICAgICAgIH0KICAgIH0KCi
AgICByZXR1cm4gMDsKfQo=' | base64 -d > /app/main.cpp; tmux wait -S done
root@b4abfa1e6db5:/app#
