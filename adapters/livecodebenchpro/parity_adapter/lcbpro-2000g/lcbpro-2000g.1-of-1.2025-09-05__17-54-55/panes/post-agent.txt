root@1633c128b151:/app# echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7Cgp1c2luZyBsbCA9IGxvbmcgbG9uZzsKCnN0cnVjdCBFZGdlIHsKICAgIGludCB1LCB2Ow
ogICAgbGwgYnVzX3RpbWUsIHdhbGtfdGltZTsKfTsKCmludCBtYWluKCkgewogICAgaW9zOjpzeW5jX3dpdGhfc3RkaW8oZmFsc2UpOwogICAgY2luLnRpZShudWxscHRyKTsKCiAgICBpbnQgdDsgY2luID4+IH
Q7CgogICAgLy8gV2Ugd2lsbCBpbXBsZW1lbnQgdGhlIGxvZ2ljIGFzIGZvbGxvd3M6CiAgICAvLyAxKSBXZSB3YW50IHRvIGZpbmQgdGhlIGxhdGVzdCBzdGFydCB0aW1lIHMgc3VjaCB0aGF0IHdlIGNhbiBzdG
FydCBhdCBzLCBzYXRpc2Z5IHBob25lIGNhbGwgaW50ZXJ2YWwgY29uc3RyYWludHMsIGFuZCByZWFjaCBuIGJ5IHQwLgogICAgLy8gMikgV2UgY2FuIHJpZGUgYnVzIG9ubHkgb3V0c2lkZSBbdDEsIHQyXS4gRH
VyaW5nIFt0MSwgdDJdIG5vIGJ1cyB0cmF2ZWwgYWxsb3dlZCwgYnV0IHdhbGtpbmcgYW5kIHdhaXRpbmcgYWxsb3dlZC4KICAgIC8vIDMpIEFwcHJvYWNoOgogICAgLy8gICAgLSBVc2UgYmluYXJ5IHNlYXJjaC
BvbiBzdGFydCB0aW1lIHMgaW4gWzAsIHQxXS4KICAgIC8vICAgIC0gRm9yIGdpdmVuIHMsIGNoZWNrIGlmIHBvc3NpYmxlIHRvIHJlYWNoIG4gYnkgdDAgd2l0aCBwaG9uZSBjYWxsIGNvbnN0cmFpbnRzLgogIC
AgLy8gICAgLSBUbyBjaGVjaywgd2UgcGVyZm9ybSBhIHNob3J0ZXN0IHBhdGggd2l0aCB0aW1lLWRlcGVuZGVudCBjb25zdHJhaW50czoKICAgIC8vICAgICAgKiBCZWZvcmUgcGhvbmUgY2FsbCBbcywgdDEpOi
BidXMgYWxsb3dlZAogICAgLy8gICAgICAqIER1cmluZyBwaG9uZSBjYWxsIFt0MSwgdDJdOiBidXMgbm90IGFsbG93ZWQKICAgIC8vICAgICAgKiBBZnRlciBwaG9uZSBjYWxsIFt0MiwgdDBdOiBidXMgYWxsb3
dlZAogICAgLy8gICAgLSBXZSBtb2RlbCB0aGUgZ3JhcGggd2l0aCBlZGdlcyBoYXZpbmcgdHdvIHdlaWdodHM6IGJ1c190aW1lIGFuZCB3YWxrX3RpbWUuCiAgICAvLyAgICAgICogQmVmb3JlIHQxIGFuZCBhZn
RlciB0MiwgY2FuIHVzZSBidXMgZWRnZXMuCiAgICAvLyAgICAgICogQmV0d2VlbiB0MSBhbmQgdDIsIGNhbiBvbmx5IHdhbGsgb3Igd2FpdC4KICAgIC8vICAgIC0gVXNlIGEgbW9kaWZpZWQgRGlqa3N0cmEgdG
hhdCB0cmFja3MgY3VycmVudCB0aW1lIGFuZCBjaG9vc2VzIGFsbG93ZWQgZWRnZXMuCiAgICAvLyAgICAtIElmIHJlYWNoIG4gd2l0aCBhcnJpdmFsIHRpbWUgPD0gdDAsIHMgZmVhc2libGUuCgogICAgd2hpbG
UgKHQtLSkgewogICAgICAgIGludCBuLCBtOyBjaW4gPj4gbiA+PiBtOwogICAgICAgIGxsIHQwLCB0MSwgdDI7CiAgICAgICAgY2luID4+IHQwID4+IHQxID4+IHQyOwoKICAgICAgICB2ZWN0b3I8dmVjdG9yPH
BhaXI8aW50LCBwYWlyPGxsLGxsPj4+PiBhZGoobisxKTsgLy8gdSAtPiAodiwgKGJ1c190aW1lLCB3YWxrX3RpbWUpKQoKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG07IGkrKykgewogICAgICAgICAgIC
BpbnQgdSx2OyBsbCBsMSxsMjsKICAgICAgICAgICAgY2luID4+IHUgPj4gdiA+PiBsMSA+PiBsMjsKICAgICAgICAgICAgYWRqW3VdLmVtcGxhY2VfYmFjayh2LCBtYWtlX3BhaXIobDEsbDIpKTsKICAgICAgIC
AgICAgYWRqW3ZdLmVtcGxhY2VfYmFjayh1LCBtYWtlX3BhaXIobDEsbDIpKTsKICAgICAgICB9CgogICAgICAgIC8vIEJpbmFyeSBzZWFyY2ggb24gc3RhcnQgdGltZSBzIGluIFswLCB0MV0KICAgICAgICBsbC
BsZWZ0ID0gMCwgcmlnaHQgPSB0MTsKICAgICAgICBsbCBhbnMgPSAtMTsKCiAgICAgICAgYXV0byBjYW5fcmVhY2ggPSBbJl0obGwgc3RhcnRfdGltZSkgLT4gYm9vbCB7CiAgICAgICAgICAgIC8vIERpamtzdH
JhIHdpdGggc3RhdGVzOiAoYXJyaXZhbF90aW1lLCBub2RlKQogICAgICAgICAgICAvLyBXZSB0cmFjayBtaW5pbWFsIGFycml2YWwgdGltZSBwZXIgbm9kZS4KICAgICAgICAgICAgLy8gQXQgZWFjaCBub2RlIG
FuZCB0aW1lLCB3ZSBjYW46CiAgICAgICAgICAgIC8vIC0gV2FpdCAoc3RheSBhdCBub2RlLCB0aW1lIGFkdmFuY2VzKQogICAgICAgICAgICAvLyAtIFRyYXZlbCBlZGdlczoKICAgICAgICAgICAgLy8gICAqIE
lmIGN1cnJlbnQgdGltZSA8IHQxLCBidXMgcmlkZXMgYWxsb3dlZAogICAgICAgICAgICAvLyAgICogSWYgY3VycmVudCB0aW1lIGluIFt0MSwgdDJdLCBidXMgcmlkZXMgbm90IGFsbG93ZWQKICAgICAgICAgIC
AgLy8gICAqIElmIGN1cnJlbnQgdGltZSA+PSB0MiwgYnVzIHJpZGVzIGFsbG93ZWQgYWdhaW4KICAgICAgICAgICAgLy8gSWYgYnVzIHJpZGUgdGltZSBvdmVybGFwcyBwaG9uZSBjYWxsIGludGVydmFsLCBub3
QgYWxsb3dlZC4KICAgICAgICAgICAgLy8gVG8gc2ltcGxpZnksIHNpbmNlIGJ1cyBlZGdlcyBhcmUgaW5zdGFudGFuZW91cyBib2FyZGluZyBhbmQgZml4ZWQgdHJhdmVsIHRpbWUsCiAgICAgICAgICAgIC8vIH
dlIGNhbiBvbmx5IHN0YXJ0IGJ1cyByaWRlcyBvdXRzaWRlIFt0MSx0Ml0uCgogICAgICAgICAgICB1c2luZyBUUEkgPSBwYWlyPGxsLGludD47CiAgICAgICAgICAgIHZlY3RvcjxsbD4gZGlzdChuKzEsIExMT0
5HX01BWCk7CiAgICAgICAgICAgIHByaW9yaXR5X3F1ZXVlPFRQSSwgdmVjdG9yPFRQST4sIGdyZWF0ZXI8VFBJPj4gcHE7CgogICAgICAgICAgICBkaXN0WzFdID0gc3RhcnRfdGltZTsKICAgICAgICAgICAgcH
EuZW1wbGFjZShzdGFydF90aW1lLDEpOwoKICAgICAgICAgICAgd2hpbGUgKCFwcS5lbXB0eSgpKSB7CiAgICAgICAgICAgICAgICBhdXRvIFtjdXJfdCwgdV0gPSBwcS50b3AoKTsgcHEucG9wKCk7CiAgICAgIC
AgICAgICAgICBpZiAoZGlzdFt1XSA8IGN1cl90KSBjb250aW51ZTsKICAgICAgICAgICAgICAgIGlmICh1ID09IG4gJiYgY3VyX3QgPD0gdDApIHJldHVybiB0cnVlOwoKICAgICAgICAgICAgICAgIC8vIE9wdG
lvbiAxOiB3YWl0IGF0IG5vZGUgKG9ubHkgaWYgd2FpdGluZyBjYW4gaGVscCkKICAgICAgICAgICAgICAgIC8vIEJ1dCB1bmxpbWl0ZWQgd2FpdGluZyBjYW4gY2F1c2UgaW5maW5pdGUgbG9vcC4KICAgICAgIC
AgICAgICAgIC8vIFNvIHdhaXRpbmcgb25seSB0byBtb3ZlIHRpbWUgZm9yd2FyZCB0byBuZXh0IGFsbG93ZWQgYnVzIGludGVydmFsIGlmIG5lZWRlZC4KCiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBjdX
JyZW50bHkgaW4gcGhvbmUgY2FsbCBpbnRlcnZhbAogICAgICAgICAgICAgICAgaWYgKGN1cl90IDwgdDEpIHsKICAgICAgICAgICAgICAgICAgICAvLyBjYW4gdGFrZSBidXMgb3Igd2FsawogICAgICAgICAgIC
AgICAgICAgIC8vIGV4cGxvcmUgYnVzIGVkZ2VzCiAgICAgICAgICAgICAgICAgICAgZm9yIChhdXRvICZbdiwgdGltZXNdIDogYWRqW3VdKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxsIGJ1c190ID0gdG
ltZXMuZmlyc3QsIHdhbGtfdCA9IHRpbWVzLnNlY29uZDsKCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEJ1cyByaWRlIGZyb20gY3VyX3QgdG8gY3VyX3QgKyBidXNfdAogICAgICAgICAgICAgICAgICAgIC
AgICAvLyBNdXN0IGVuc3VyZSBidXMgcmlkZSBkb2VzIG5vdCBvdmVybGFwIFt0MSx0Ml0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGN1cl90ICsgYnVzX3QgPD0gdDEpIHsKICAgICAgICAgICAgICAgIC
AgICAgICAgICAgIGlmIChjdXJfdCArIGJ1c190IDwgZGlzdFt2XSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3Rbdl0gPSBjdXJfdCArIGJ1c190OwogICAgICAgICAgICAgICAgICAgIC
AgICAgICAgICAgIHBxLmVtcGxhY2UoZGlzdFt2XSwgdik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgIC
AgICAgICAvLyBidXMgcmlkZSBjcm9zc2VzIGludG8gcGhvbmUgY2FsbCwgbm90IGFsbG93ZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNvIGNhbid0IHRha2UgYnVzIG5vdwogICAgICAgICAgIC
AgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAvLyBXYWxrIGVkZ2UgYWx3YXlzIGFsbG93ZWQKICAgICAgICAgICAgICAgICAgICAgICAgbGwgd3RpbWUgPSBjdXJfdCArIHdhbGtfdDsKIC
AgICAgICAgICAgICAgICAgICAgICAgaWYgKHd0aW1lIDwgZGlzdFt2XSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzdFt2XSA9IHd0aW1lOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcH
EuZW1wbGFjZSh3dGltZSwgdik7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIC8vIFdhaXQgdW50aWwgdDEgdG8gc3RhcnQgd2Fsa2
luZyBvciBidXMgYWZ0ZXIgcGhvbmUgY2FsbAogICAgICAgICAgICAgICAgICAgIGlmICh0MSA8IGRpc3RbdV0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgZGlzdFt1XSA9IHQxOwogICAgICAgICAgICAgIC
AgICAgICAgICBwcS5lbXBsYWNlKHQxLCB1KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGN1cl90ID49IHQxICYmIGN1cl90IDwgdDIpIHsKICAgICAgICAgICAgIC
AgICAgICAvLyBpbiBwaG9uZSBjYWxsIGludGVydmFsLCBubyBidXMgYWxsb3dlZAogICAgICAgICAgICAgICAgICAgIC8vIGNhbiB3YWxrIG9yIHdhaXQKICAgICAgICAgICAgICAgICAgICBmb3IgKGF1dG8gJl
t2LCB0aW1lc10gOiBhZGpbdV0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGwgd2Fsa190ID0gdGltZXMuc2Vjb25kOwogICAgICAgICAgICAgICAgICAgICAgICBsbCB3dGltZSA9IGN1cl90ICsgd2Fsa1
90OwogICAgICAgICAgICAgICAgICAgICAgICBpZiAod3RpbWUgPCBkaXN0W3ZdKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXN0W3ZdID0gd3RpbWU7CiAgICAgICAgICAgICAgICAgICAgICAgIC
AgICBwcS5lbXBsYWNlKHd0aW1lLCB2KTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAvLyB3YWl0IHVudGlsIHQyIHRvIHRha2UgYn
VzIGFnYWluCiAgICAgICAgICAgICAgICAgICAgaWYgKHQyIDwgZGlzdFt1XSkgewogICAgICAgICAgICAgICAgICAgICAgICBkaXN0W3VdID0gdDI7CiAgICAgICAgICAgICAgICAgICAgICAgIHBxLmVtcGxhY2
UodDIsIHUpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgLy8gY3VyX3QgPj0gdDIsIGJ1cyBhbGxvd2VkIGFnYWluCiAgICAgICAgIC
AgICAgICAgICAgZm9yIChhdXRvICZbdiwgdGltZXNdIDogYWRqW3VdKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxsIGJ1c190ID0gdGltZXMuZmlyc3QsIHdhbGtfdCA9IHRpbWVzLnNlY29uZDsKCiAgIC
AgICAgICAgICAgICAgICAgICAgIC8vIGJ1cyByaWRlIGFsbG93ZWQKICAgICAgICAgICAgICAgICAgICAgICAgbGwgYnRpbWUgPSBjdXJfdCArIGJ1c190OwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoYn
RpbWUgPCBkaXN0W3ZdKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXN0W3ZdID0gYnRpbWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcS5lbXBsYWNlKGJ0aW1lLCB2KTsKICAgICAgIC
AgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2FsayBhbHdheXMgYWxsb3dlZAogICAgICAgICAgICAgICAgICAgICAgICBsbCB3dGltZSA9IGN1cl90ICsgd2Fsa190OwogIC
AgICAgICAgICAgICAgICAgICAgICBpZiAod3RpbWUgPCBkaXN0W3ZdKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXN0W3ZdID0gd3RpbWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcS
5lbXBsYWNlKHd0aW1lLCB2KTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gZm
Fsc2U7CiAgICAgICAgfTsKCiAgICAgICAgd2hpbGUgKGxlZnQgPD0gcmlnaHQpIHsKICAgICAgICAgICAgbGwgbWlkID0gbGVmdCArIChyaWdodCAtIGxlZnQpIC8gMjsKICAgICAgICAgICAgaWYgKGNhbl9yZW
FjaChtaWQpKSB7CiAgICAgICAgICAgICAgICBhbnMgPSBtaWQ7CiAgICAgICAgICAgICAgICBsZWZ0ID0gbWlkICsgMTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJpZ2h0ID0gbWlkIC
0gMTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgY291dCA8PCBhbnMgPDwgIlxuIjsKICAgIH0KCiAgICByZXR1cm4gMDsKfQo=' | base64 -d > /app/main.cpp; tmux wait -S done
root@1633c128b151:/app# g++ -std=c++17 -O2 -Wall -Wextra -o /app/main /app/main.cpp; tmux wait -S done
bash: g++: command not found
root@1633c128b151:/app#
