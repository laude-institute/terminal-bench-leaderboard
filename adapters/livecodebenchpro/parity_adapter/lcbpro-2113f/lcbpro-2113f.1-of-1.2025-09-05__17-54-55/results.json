{
    "id": "8a3394a4-85df-402b-9240-6003e24a1cf5",
    "trial_name": "lcbpro-2113f.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2113f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2113F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given two arrays $a$ and $b$ of length $n$. You can perform the following operation an unlimited number of times:\n\n- Choose an integer $i$ from $1$ to $n$ and swap $a_i$ and $b_i$.\n\nLet $f(c)$ be the number of distinct numbers in array $c$. Find the maximum value of $f(a) + f(b)$. Also, output the arrays $a$ and $b$ after performing all operations.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 10^5$) -- the length of the arrays.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\le a_i \\le 2n$) -- the elements of array $a$.\n\nThe third line of each test case contains $n$ integers $b_1, b_2, \\ldots, b_n$ ($1 \\le b_i \\le 2n$) -- the elements of array $b$.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n### Output\n\nFor each test case, print a single integer in the first line -- the maximum value of $f(a) + f(b)$.\n\nIn the second line, print $n$ integers -- the elements of array $a$ after performing the operations.\n\nIn the third line, print $n$ integers -- the elements of array $b$ after performing the operations.\n\n### Example\n\n#### Input #1\n\n```\n\n3\n\n5\n\n1 2 4 4 4\n\n1 3 3 5 2\n\n7\n\n2 2 4 4 5 5 5\n\n1 3 3 2 1 6 6\n\n7\n\n12 3 3 4 5 6 4\n\n1 2 13 8 10 13 7\n\n```\n\n#### Output #1\n\n```\n9\n1 3 4 5 2\n1 2 3 4 4\n12\n2 3 4 2 1 5 6\n1 2 3 4 5 6 5\n14\n12 3 13 8 10 6 4\n1 2 3 4 5 13 7\n```\n\n### Note\n\nIn the first test case, after applying three operations with $i=2$, $i=4$, and $i=5$, we obtain $a = [1, 3, 4, 5, 2]$ and $b = [1, 2, 3, 4, 4]$. After that, $f(a) + f(b) = 5 + 4 = 9$. It can be shown that it is not possible to achieve a greater answer.\n\nIn the second test case, after applying the operations:\n\n$$f([2, 3, 4, 2, 1, 5, 6]) + f([1, 2, 3, 4, 5, 6, 5]) = 6 + 6 = 12$$",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2113f/lcbpro-2113f.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1156,
    "total_output_tokens": 660,
    "trial_started_at": "2025-09-06T01:20:26.928769+00:00",
    "trial_ended_at": "2025-09-06T01:21:16.693025+00:00",
    "agent_started_at": "2025-09-06T01:20:42.403011+00:00",
    "agent_ended_at": "2025-09-06T01:20:52.700725+00:00",
    "test_started_at": "2025-09-06T01:20:56.412310+00:00",
    "test_ended_at": "2025-09-06T01:21:00.124640+00:00"
}