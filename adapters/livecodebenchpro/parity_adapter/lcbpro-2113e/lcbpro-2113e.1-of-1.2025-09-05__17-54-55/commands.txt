['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
["echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7Cgpjb25zdCBpbnQgSU5GID0gMWU5OwoKc3RydWN0IEVkZ2UgewogICAgaW50IHRvOwp9OwoKaW50IG1haW4oKSB7CiAgICBpb3M6OnN5bmNfd2l0aF9zdGRpbyhmYWxzZSk7CiAgICBjaW4udGllKG51bGxwdHIpOwoKICAgIGludCB0OwogICAgY2luID4+IHQ7CiAgICB3aGlsZSAodC0tKSB7CiAgICAgICAgaW50IG4sIG0sIHgsIHk7CiAgICAgICAgY2luID4+IG4gPj4gbSA+PiB4ID4+IHk7CiAgICAgICAgdmVjdG9yPHZlY3RvcjxpbnQ+PiBnKG4gKyAxKTsKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG4gLSAxOyBpKyspIHsKICAgICAgICAgICAgaW50IHYsIHU7CiAgICAgICAgICAgIGNpbiA+PiB2ID4+IHU7CiAgICAgICAgICAgIGdbdl0ucHVzaF9iYWNrKHUpOwogICAgICAgICAgICBnW3VdLnB1c2hfYmFjayh2KTsKICAgICAgICB9CgogICAgICAgIC8vIEJGUyB0byBnZXQgc2hvcnRlc3QgZGlzdGFuY2UgYW5kIHBhcmVudCBmb3IgcGF0aCByZWNvbnN0cnVjdGlvbgogICAgICAgIGF1dG8gYmZzID0gWyZdKGludCBzdGFydCkgewogICAgICAgICAgICB2ZWN0b3I8aW50PiBkaXN0KG4gKyAxLCBJTkYpOwogICAgICAgICAgICB2ZWN0b3I8aW50PiBwYXJlbnQobiArIDEsIC0xKTsKICAgICAgICAgICAgZGlzdFtzdGFydF0gPSAwOwogICAgICAgICAgICBxdWV1ZTxpbnQ+IHE7CiAgICAgICAgICAgIHEucHVzaChzdGFydCk7CiAgICAgICAgICAgIHdoaWxlICghcS5lbXB0eSgpKSB7CiAgICAgICAgICAgICAgICBpbnQgdiA9IHEuZnJvbnQoKTsgcS5wb3AoKTsKICAgICAgICAgICAgICAgIGZvciAoaW50IHRvIDogZ1t2XSkgewogICAgICAgICAgICAgICAgICAgIGlmIChkaXN0W3RvXSA9PSBJTkYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZGlzdFt0b10gPSBkaXN0W3ZdICsgMTsKICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50W3RvXSA9IHY7CiAgICAgICAgICAgICAgICAgICAgICAgIHEucHVzaCh0byk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBtYWtlX3BhaXIoZGlzdCwgcGFyZW50KTsKICAgICAgICB9OwoKICAgICAgICAvLyBEaXN0YW5jZXMgYW5kIHBhcmVudHMgZnJvbSBhbGwgdmVydGljZXMKICAgICAgICBhdXRvIFtkaXN0X3gsIHBhcl94XSA9IGJmcyh4KTsKCiAgICAgICAgLy8gRm9yIGVuZW1pZXMsIHJlY29yZCB0aGVpciBwYXRoIHRpbWVzCiAgICAgICAgLy8gV2UnbGwgc3RvcmUgZm9yIGVhY2ggdmVydGV4IGFuZCB0aW1lIHdoZXRoZXIgYW4gZW5lbXkgaXMgdGhlcmUKICAgICAgICAvLyBNYXhpbXVtIHBhdGggbGVuZ3RoIGZvciBlbmVtaWVzIGlzIDw9IG4KCiAgICAgICAgLy8gV2UnbGwgYnVpbGQgYSBtYXA6IG1hcDxpbnQsIHNldDxpbnQ+PiB2ZXJ0ZXggLT4gc2V0IG9mIHRpbWVzIG9jY3VwaWVkIGJ5IGVuZW1pZXMKICAgICAgICAvLyBUbyBvcHRpbWl6ZSBxdWVyaWVzLCB3ZSBjYW4gc3RvcmUgZWFybGllc3QgYXJyaXZhbCB0aW1lcyBwZXIgdmVydGV4CiAgICAgICAgLy8gQnV0IHNpbmNlIG1heCBtPTIwMCwgd2UgY2FuIHN0b3JlIGFsbCBlbmVteSBwb3NpdGlvbnMgd2l0aCB0aW1lcy4KCiAgICAgICAgLy8gV2UgbmVlZCB0byBmaW5kIHNob3J0ZXN0IHBhdGggZm9yIGVhY2ggZW5lbXkgYW5kIG1hcmsgdGhlIHRpbWVzIHRoZXkgb2NjdXB5IGVhY2ggdmVydGV4IG9uIHRoYXQgcGF0aC4KCiAgICAgICAgLy8gV2UnbGwgdXNlIGEgdmVjdG9yIG9mIG1hcHM6IHZlY3RvcjxtYXA8aW50LGludD4+IGVuZW15X3Bvc190aW1lcyhtKQogICAgICAgIC8vIEJ1dCBiZXR0ZXIgdG8gaGF2ZSBhIG1hcCB2ZXJ0ZXgtPnNldCBvZiB0aW1lcwoKICAgICAgICAvLyBUbyBlZmZpY2llbnRseSBjaGVjayBmb3IgZW5lbXkgcHJlc2VuY2UsIHdlIGNyZWF0ZSBhIDJEIHZlY3Rvcjxib29sPiBvciB2ZWN0b3I8dW5vcmRlcmVkX3NldDxpbnQ+PiBmb3IgYWxsIHZlcnRpY2VzIGF0IHRpbWVzCiAgICAgICAgLy8gQnV0IHRpbWVzIGNhbiBiZSBsYXJnZS4gSW5zdGVhZCwgd2Ugd2lsbCBzdG9yZSBlbmVteSBwcmVzZW5jZSBwZXIgdmVydGV4IGluIGEgbWFwPGludCxpbnQ+IGVhcmxpZXN0IGVuZW15IGxlYXZlIHRpbWUKICAgICAgICAvLyBFbmVteSBvY2N1cGllcyB2ZXJ0ZXggY19wIGF0IHRpbWUgcCAoc3RhcnRpbmcgdGltZSAxIGF0IGhvbWUpLgoKICAgICAgICAvLyBXZSdsbCBzdG9yZSBmb3IgZWFjaCB2ZXJ0ZXggdGhlIGVhcmxpZXN0IHRpbWUgYW4gZW5lbXkgb2NjdXBpZXMgaXQgKHRvIGtub3cgaWYgTWFyYXQgY2FuIGJlIHRoZXJlIGF0IHRpbWUgdCkKICAgICAgICAvLyBCdXQgZW5lbWllcyBtb3ZlIG9ubHkgZnJvbSB0aW1lIDEgdG8gayAocGF0aCBsZW5ndGgpCiAgICAgICAgLy8gU28gZm9yIGVhY2ggdmVydGV4IG9uIGVuZW15IHBhdGgsIHdlIG1hcmsgdGhlIHRpbWUgdGhlIGVuZW15IGlzIHRoZXJlLgoKICAgICAgICAvLyBTaW5jZSBtIGlzIHNtYWxsLCBhbmQgcGF0aCBsZW5ndGhzIGFyZSBzbWFsbCwgd2Ugc3RvcmUgZm9yIGVhY2ggdmVydGV4IGEgdmVjdG9yIG9mIG9jY3VwaWVkIHRpbWVzLgoKICAgICAgICB2ZWN0b3I8dmVjdG9yPGludD4+IGVuZW15X3RpbWVzKG4gKyAxKTsKCiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBtOyBpKyspIHsKICAgICAgICAgICAgaW50IGEsIGI7CiAgICAgICAgICAgIGNpbiA+PiBhID4+IGI7CiAgICAgICAgICAgIC8vIGZpbmQgc2hvcnRlc3QgcGF0aCBmcm9tIGEgdG8gYgogICAgICAgICAgICBhdXRvIFtkaXN0X2EsIHBhcl9hXSA9IGJmcyhhKTsKICAgICAgICAgICAgaW50IGsgPSBkaXN0X2FbYl0gKyAxOwogICAgICAgICAgICB2ZWN0b3I8aW50PiBwYXRoKGspOwogICAgICAgICAgICBpbnQgY3VyID0gYjsKICAgICAgICAgICAgZm9yIChpbnQgcG9zID0gayAtIDE7IHBvcyA+PSAwOyBwb3MtLSkgewogICAgICAgICAgICAgICAgcGF0aFtwb3NdID0gY3VyOwogICAgICAgICAgICAgICAgY3VyID0gcGFyX2FbY3VyXTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBFbmVteSBpcyBhdCBwYXRoW3BdIGF0IHRpbWUgcCsxIChzdGFydGluZyBmcm9tIHA9MCkKICAgICAgICAgICAgLy8gTWFyayB0aG9zZSB0aW1lcwogICAgICAgICAgICAvLyBFbmVteSBsZWF2ZXMgd29yayBhdCB0aW1lIGssIHNvIG9jY3VwYXRpb24gZnJvbSB0aW1lIDEgdG8gawogICAgICAgICAgICBmb3IgKGludCBwID0gMDsgcCA8IGs7IHArKykgewogICAgICAgICAgICAgICAgZW5lbXlfdGltZXNbcGF0aFtwXV0ucHVzaF9iYWNrKHAgKyAxKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gU29ydCBhbmQgdW5pcXVlIHRpbWVzIGZvciBlYWNoIHZlcnRleAogICAgICAgIGZvciAoaW50IHYgPSAxOyB2IDw9IG47IHYrKykgewogICAgICAgICAgICBzb3J0KGVuZW15X3RpbWVzW3ZdLmJlZ2luKCksIGVuZW15X3RpbWVzW3ZdLmVuZCgpKTsKICAgICAgICAgICAgZW5lbXlfdGltZXNbdl0uZXJhc2UodW5pcXVlKGVuZW15X3RpbWVzW3ZdLmJlZ2luKCksIGVuZW15X3RpbWVzW3ZdLmVuZCgpKSwgZW5lbXlfdGltZXNbdl0uZW5kKCkpOwogICAgICAgIH0KCiAgICAgICAgLy8gTm93IHdlIGRvIGEgQkZTIGZyb20geCB0byB5IHdpdGggc3RhdGUgPSB2ZXJ0ZXggYW5kIHRpbWUKICAgICAgICAvLyBNYXJhdCBjYW4gd2FpdCBhdCBjdXJyZW50IHZlcnRleCBvciBtb3ZlIHRvIGFkamFjZW50IHZlcnRleCBlYWNoIHRpbWUgdW5pdAogICAgICAgIC8vIE1hcmF0IGNhbm5vdCBiZSBhdCB0aGUgc2FtZSB2ZXJ0ZXggYXQgdGhlIHNhbWUgdGltZSBhcyBhbiBlbmVteQoKICAgICAgICAvLyBXZSdsbCBkbyBhIERpamtzdHJhIG9yIEJGUyB3aXRoIHN0YXRlcyAodmVydGV4LCB0aW1lKQogICAgICAgIC8vIEJ1dCB0aW1lIGNhbiBncm93IGxhcmdlLCB3ZSBuZWVkIGEgd2F5IHRvIHBydW5lCgogICAgICAgIC8vIE9ic2VydmF0aW9uOgogICAgICAgIC8vIE1heCBwYXRoIGxlbmd0aCBmcm9tIHggdG8geSA8PSBuCiAgICAgICAgLy8gRW5lbWllcyBvbmx5IG9jY3VweSB2ZXJ0aWNlcyBhdCB0aW1lcyBzdGFydGluZyBhdCAxIHVwIHRvIHRoZWlyIHBhdGggbGVuZ3RoCiAgICAgICAgLy8gQWZ0ZXIgZW5lbXkgcmVhY2hlcyB3b3JrLCBubyBtb3JlIG9jY3VwYXRpb24KCiAgICAgICAgLy8gV2UnbGwga2VlcCB0cmFjayBvZiBlYXJsaWVzdCBhcnJpdmFsIHRpbWUgdG8gZWFjaCB2ZXJ0ZXgKICAgICAgICAvLyBXZSdsbCB1c2UgYSBwcmlvcml0eSBxdWV1ZSBvciBkZXF1ZQoKICAgICAgICAvLyBXZSB0cnkgdG8gZmluZCB0aGUgZWFybGllc3QgdGltZSB0byByZWFjaCB5CgogICAgICAgIC8vIFdlJ2xsIHN0b3JlIGRpc3Rbdl0gPSBlYXJsaWVzdCB0aW1lIHRvIGJlIGF0IHZlcnRleCB2CiAgICAgICAgdmVjdG9yPGludD4gZGlzdChuICsgMSwgSU5GKTsKICAgICAgICBkaXN0W3hdID0gMTsgLy8gc3RhcnQgdGltZQogICAgICAgIC8vIFVzZSBhIHByaW9yaXR5IHF1ZXVlIGZvciBlYXJsaWVzdCB0aW1lCiAgICAgICAgcHJpb3JpdHlfcXVldWU8cGFpcjxpbnQsaW50PiwgdmVjdG9yPHBhaXI8aW50LGludD4+LCBncmVhdGVyPD4+IHBxOwogICAgICAgIHBxLnB1c2goezEsIHh9KTsKCiAgICAgICAgd2hpbGUgKCFwcS5lbXB0eSgpKSB7CiAgICAgICAgICAgIGF1dG8gW2N1cl90LCB2XSA9IHBxLnRvcCgpOyBwcS5wb3AoKTsKICAgICAgICAgICAgaWYgKGRpc3Rbdl0gPCBjdXJfdCkgY29udGludWU7CiAgICAgICAgICAgIGlmICh2ID09IHkpIHsKICAgICAgICAgICAgICAgIGNvdXQgPDwgY3VyX3QgPDwgIlxuIjsKICAgICAgICAgICAgICAgIGdvdG8gbmV4dF9jYXNlOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBNYXJhdCBjYW4gc3RheSBhdCB2IG9yIG1vdmUgdG8gYWRqYWNlbnQKICAgICAgICAgICAgLy8gQ2hlY2sgc3RheQogICAgICAgICAgICBpbnQgc3RheV90ID0gY3VyX3QgKyAxOwogICAgICAgICAgICAvLyBDaGVjayBpZiBlbmVteSBvY2N1cGllcyB2IGF0IHN0YXlfdAogICAgICAgICAgICAvLyBiaW5hcnkgc2VhcmNoIGluIGVuZW15X3RpbWVzW3ZdCiAgICAgICAgICAgIGlmICghYmluYXJ5X3NlYXJjaChlbmVteV90aW1lc1t2XS5iZWdpbigpLCBlbmVteV90aW1lc1t2XS5lbmQoKSwgc3RheV90KSkgewogICAgICAgICAgICAgICAgaWYgKGRpc3Rbdl0gPiBzdGF5X3QpIHsKICAgICAgICAgICAgICAgICAgICBkaXN0W3ZdID0gc3RheV90OwogICAgICAgICAgICAgICAgICAgIHBxLnB1c2goe3N0YXlfdCwgdn0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBNb3ZlIHRvIG5laWdoYm9ycwogICAgICAgICAgICBmb3IgKGludCB0byA6IGdbdl0pIHsKICAgICAgICAgICAgICAgIGludCBtb3ZlX3QgPSBjdXJfdCArIDE7CiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBlbmVteSBvY2N1cGllcyB0byBhdCBtb3ZlX3QKICAgICAgICAgICAgICAgIGlmICghYmluYXJ5X3NlYXJjaChlbmVteV90aW1lc1t0b10uYmVnaW4oKSwgZW5lbXlfdGltZXNbdG9dLmVuZCgpLCBtb3ZlX3QpKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGRpc3RbdG9dID4gbW92ZV90KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3RbdG9dID0gbW92ZV90OwogICAgICAgICAgICAgICAgICAgICAgICBwcS5wdXNoKHttb3ZlX3QsIHRvfSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBjb3V0IDw8IC0xIDw8ICJcbiI7CiAgICAgICAgbmV4dF9jYXNlOjsKICAgIH0KCiAgICByZXR1cm4gMDsKfQo=' | base64 -d > /app/main.cpp", 'Enter']
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
['C-d']
