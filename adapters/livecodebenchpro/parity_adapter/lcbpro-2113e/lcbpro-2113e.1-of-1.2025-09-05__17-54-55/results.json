{
    "id": "677ae6fb-ef18-4e13-8ad5-705209895145",
    "trial_name": "lcbpro-2113e.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2113e",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2113E)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nMarat is a native of Kazan. Kazan can be represented as an undirected tree consisting of $n$ vertices. In his youth, Marat often got into street fights, and now he has $m$ enemies, numbered from $1$ to $m$, living in Kazan along with him.\n\nEvery day, all the people living in the city go to work. Marat knows that the $i$-th of his enemies lives at vertex $a_i$ and works at vertex $b_i$. He himself lives at vertex $x$ and works at vertex $y$. It is guaranteed that $a_i \\ne x$.\n\nAll enemies go to work via the shortest path and leave their homes at time $1$. That is, if we represent the shortest path between vertices $a_i$ and $b_i$ as $c_1, c_2, c_3, \\ldots, c_k$ (where $c_1 = a_i$ and $c_k = b_i$), then at the moment $p$ ($1 \\le p \\le k$), the enemy numbered $i$ will be at vertex $c_p$.\n\nMarat really does not want to meet any of his enemies at the same vertex at the same time, as this would create an awkward situation, but they can meet on an edge. Marat also leaves his home at time $1$, and at each subsequent moment in time, he can either move to an adjacent vertex or stay at his current one.\n\nNote that Marat can only meet the $i$-th enemy at the moments $2, 3, \\ldots, k$ (where $c_1, c_2, \\ldots, c_k$ is the shortest path between vertices $a_i$ and $b_i$). In other words, starting from the moment after the enemy reaches work, Marat can no longer meet him.\n\nHelp Marat find the earliest moment in time when he can reach work without encountering any enemies along the way, or determine that it is impossible.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains four integers $n$, $m$, $x$, and $y$ ($2 \\le n \\le 10^5$, $1 \\le m \\le 200$, $1 \\le x, y \\le n$, $x \\neq y$) -- the number of vertices in the tree, the number of enemies, and the vertex numbers from which Marat starts his journey and where he needs to arrive, respectively.\n\nThe $j$-th of the following $n - 1$ lines contains two integers $v_j$ and $u_j$ ($1 \\le v_j, u_j \\le n$, $v_j \\neq u_j$) -- the endpoints of the $j$-th edge of the tree.\n\nThe $i$-th of the following $m$ lines contains two integers $a_i$ and $b_i$ ($1 \\le a_i, b_i \\le n$, $a_i \\neq b_i$, $a_i \\ne x$) -- the description of the routes of Marat's enemies.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n### Output\n\nFor each test case, output a single integer -- the minimum moment in time when Marat can reach work, or $-1$ if it is impossible.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n4 1 1 4\n\n1 2\n\n2 3\n\n3 4\n\n4 1\n\n5 1 1 5\n\n1 2\n\n2 3\n\n3 4\n\n4 5\n\n5 1\n\n9 2 1 9\n\n1 2\n\n2 3\n\n3 4\n\n3 5\n\n5 6\n\n6 7\n\n6 8\n\n8 9\n\n9 1\n\n7 1\n\n9 2 7 2\n\n1 4\n\n2 5\n\n3 6\n\n4 5\n\n5 6\n\n4 7\n\n5 8\n\n6 9\n\n2 8\n\n3 7\n\n3 2 1 3\n\n1 2\n\n2 3\n\n2 1\n\n3 1\n\n```\n\n#### Output #1\n\n```\n4\n6\n10\n5\n-1\n```\n\n### Note\n\nIn the first test case, it is possible to reach vertex number $4$ from vertex number $1$ via the shortest path. Note that Marat will meet a single enemy on an edge, not at a vertex.\n\nIn the second test case, the optimal strategy is to wait for one moment in time at the starting vertex and then go along the shortest path from vertex $1$ to vertex $5$. If he does not stop at the beginning, Marat will meet his enemy at a vertex, not on an edge.\n\nIn the third test case, it is beneficial to go from vertex $1$ to vertex $4$. After that, he should not move anywhere for one moment in time, and then go along the shortest path from vertex $4$ to vertex $9$.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2113e/lcbpro-2113e.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1539,
    "total_output_tokens": 1652,
    "trial_started_at": "2025-09-06T01:34:14.702315+00:00",
    "trial_ended_at": "2025-09-06T01:35:23.682948+00:00",
    "agent_started_at": "2025-09-06T01:34:30.724838+00:00",
    "agent_ended_at": "2025-09-06T01:34:56.093477+00:00",
    "test_started_at": "2025-09-06T01:35:00.239245+00:00",
    "test_ended_at": "2025-09-06T01:35:06.927401+00:00"
}