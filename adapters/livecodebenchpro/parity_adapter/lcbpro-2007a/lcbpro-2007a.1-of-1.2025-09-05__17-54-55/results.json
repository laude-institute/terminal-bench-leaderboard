{
    "id": "ee34ecd0-4d6c-4493-b939-efae3771e979",
    "trial_name": "lcbpro-2007a.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2007a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2007A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nDora has a set $s$ containing integers. In the beginning, she will put all integers in $[l, r]$ into the set $s$. That is, an integer $x$ is initially contained in the set if and only if $l \\leq x \\leq r$. Then she allows you to perform the following operations:\n\n- Select three distinct integers $a$, $b$, and $c$ from the set $s$, such that $\\gcd(a, b) = \\gcd(b, c) = \\gcd(a, c) = 1^\\dagger$.\n- Then, remove these three integers from the set $s$.\n\nWhat is the maximum number of operations you can perform?\n\n$^\\dagger$Recall that $\\gcd(x, y)$ means the [greatest common divisor](https://en.wikipedia.org/wiki/Greatest_common_divisor) of integers $x$ and $y$.\n\n### Input\n\nEach test consists of multiple test cases. The first line contains a single integer $t$ ($1 \\leq t \\leq 500$) -- the number of test cases. The description of the test cases follows.\n\nThe only line of each test case contains two integers $l$ and $r$ ($1 \\leq l \\leq r \\leq 1000$) -- the range of integers in the initial set.\n\n### Output\n\nFor each test case, output a single integer -- the maximum number of operations you can perform.\n\n### Example\n\n#### Input #1\n\n```\n\n8\n\n1 3\n\n3 7\n\n10 21\n\n2 8\n\n51 60\n\n2 15\n\n10 26\n\n1 1000\n\n```\n\n#### Output #1\n\n```\n1\n1\n3\n1\n2\n3\n4\n250\n```\n\n### Note\n\nIn the first test case, you can choose $a = 1$, $b = 2$, $c = 3$ in the only operation, since $\\gcd(1, 2) = \\gcd(2, 3) = \\gcd(1, 3) = 1$, and then there are no more integers in the set, so no more operations can be performed.\n\nIn the second test case, you can choose $a = 3$, $b = 5$, $c = 7$ in the only operation.\n\nIn the third test case, you can choose $a = 11$, $b = 19$, $c = 20$ in the first operation, $a = 13$, $b = 14$, $c = 15$ in the second operation, and $a = 10$, $b = 17$, $c = 21$ in the third operation. After the three operations, the set $s$ contains the following integers: $12$, $16$, $18$. It can be proven that it's impossible to perform more than $3$ operations.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2007a/lcbpro-2007a.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1035,
    "total_output_tokens": 263,
    "trial_started_at": "2025-09-06T01:38:47.061021+00:00",
    "trial_ended_at": "2025-09-06T01:39:40.114901+00:00",
    "agent_started_at": "2025-09-06T01:39:11.450532+00:00",
    "agent_ended_at": "2025-09-06T01:39:16.364364+00:00",
    "test_started_at": "2025-09-06T01:39:18.793361+00:00",
    "test_ended_at": "2025-09-06T01:39:22.825482+00:00"
}