root@d0cc70b83811:/app# echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgovLyBGZW53aWNrIHRyZWUgKEJJVCkgZm9yIGZyZXF1ZW5jaWVzCnN0cnVjdCBGZW53aW
NrcyB7CiAgICB2ZWN0b3I8aW50PiBiaXQ7CiAgICBpbnQgbjsKICAgIEZlbndpY2tzKGludCBuKTogbihuKSB7CiAgICAgICAgYml0LmFzc2lnbihuKzEsIDApOwogICAgfQogICAgdm9pZCB1cGRhdGUoaW50IG
ksIGludCBkZWx0YSkgewogICAgICAgIGZvciAoOyBpIDw9IG47IGkgKz0gaSAmIC1pKSBiaXRbaV0gKz0gZGVsdGE7CiAgICB9CiAgICBpbnQgcXVlcnkoaW50IGkpIHsKICAgICAgICBpbnQgcyA9IDA7CiAgIC
AgICAgZm9yICg7IGkgPiAwOyBpIC09IGkgJiAtaSkgcyArPSBiaXRbaV07CiAgICAgICAgcmV0dXJuIHM7CiAgICB9CiAgICBpbnQgcmFuZ2VfcXVlcnkoaW50IGwsIGludCByKSB7CiAgICAgICAgcmV0dXJuIH
F1ZXJ5KHIpIC0gcXVlcnkobC0xKTsKICAgIH0KfTsKCmludCBtYWluKCkgewogICAgaW9zOjpzeW5jX3dpdGhfc3RkaW8oZmFsc2UpOwogICAgY2luLnRpZShudWxscHRyKTsKCiAgICBpbnQgbjsgY2luID4+IG
47CiAgICB2ZWN0b3I8aW50PiBhKG4rMSk7CiAgICBmb3IgKGludCBpID0gMTsgaSA8PSBuOyBpKyspIGNpbiA+PiBhW2ldOwoKICAgIGludCBxOyBjaW4gPj4gcTsKCiAgICB2ZWN0b3I8YXJyYXk8aW50LDM+Pi
BxdWVyaWVzKHEpOwogICAgZm9yIChpbnQgaSA9IDA7IGkgPCBxOyBpKyspIHsKICAgICAgICBpbnQgdCwgeCwgeTsKICAgICAgICBjaW4gPj4gdCA+PiB4ID4+IHk7CiAgICAgICAgcXVlcmllc1tpXSA9IHt0LC
B4LCB5fTsKICAgIH0KCiAgICAvLyBXZSBuZWVkIHRvIG1haW50YWluIGZyZXF1ZW5jaWVzIG9mIHZhbHVlcyBhbmQgY291bnQgb2YgZGlzdGluY3QgaW4gcmFuZ2VzCiAgICAvLyBsYXN0IGFuc3dlciBmb3IgZG
Vjb2RpbmcKICAgIGxvbmcgbG9uZyBsYXN0ID0gMDsKCiAgICAvLyBNYWludGFpbiBmcmVxIG9mIGVsZW1lbnRzCiAgICB2ZWN0b3I8aW50PiBmcmVxKG4rMSwgMCk7CgogICAgLy8gRmVud2lja3MgZm9yIGZyZX
F1ZW5jeSBjb3VudHMKICAgIEZlbndpY2tzIGZlbndpY2tzKG4pOwoKICAgIC8vIFdlIHdpbGwgbWFpbnRhaW4gdGhlIGFycmF5IGFuZCBhIEZlbndpY2sgdHJlZSBvZiBmcmVxdWVuY2llcyBmb3IgZGlzdGluY3
QgY291bnQgcXVlcmllcwogICAgLy8gQnV0IHRoZSBwcm9ibGVtIHJlcXVpcmVzIGNvdW50aW5nIHBhaXJzIChpLGopIHdpdGggYV9pICE9IGFfaiwKICAgIC8vIHdoaWNoID0gdG90YWwgcGFpcnMgLSBwYWlycy
B3aXRoIHNhbWUgdmFsdWUuCgogICAgLy8gVG90YWwgcGFpcnMgaW4gW2wscl0gPSAobGVuKihsZW4tMSkpLzIKCiAgICAvLyBXZSBuZWVkIHRvIGZpbmQgc3VtIG92ZXIgYWxsIHZhbHVlcyBvZiBDKGZyZXFfdm
FsLCAyKSBpbiBbbCxyXQogICAgLy8gVG8gZG8gdGhhdCwgd2UgdXNlIGEgc2VnbWVudCB0cmVlIG9yIEJJVCB3aXRoIGZyZXEgY291bnRzIHBlciB2YWx1ZS4KCiAgICAvLyBBcHByb2FjaDogVXNlIGEgQklUIG
92ZXIgdmFsdWVzIHRvIGtlZXAgY291bnRzLCBhbmQgYSBzZWdtZW50IHRyZWUgb3ZlciBhcnJheSB0byBrZWVwIGZyZXF1ZW5jeSBkaXN0cmlidXRpb24/CgogICAgLy8gV2UnbGwgdXNlIGEgc2VnbWVudCB0cm
VlIGZvciBmcmVxdWVuY2llcyBvZiBlYWNoIHZhbHVlIGluIHRoZSBhcnJheS4KCiAgICAvLyBIb3dldmVyLCBhcyB2YWx1ZXMgdXBkYXRlLCB3ZSBuZWVkIHRvIHVwZGF0ZSBmcmVxIGNvdW50cy4KCiAgICAvLy
BMZXQncyBrZWVwIGZyZXEgZm9yIGVhY2ggdmFsdWUgZ2xvYmFsbHkgYW5kIGFsc28gZm9yIGVhY2ggcG9zaXRpb24uCgogICAgLy8gV2UnbGwga2VlcCBhIEZlbndpY2tzIG92ZXIgZnJlcXVlbmNpZXMgb2Ygdm
FsdWVzIC0gYnV0IHRoYXQgaXMgY29tcGxpY2F0ZWQuCgogICAgLy8gSW5zdGVhZCwgbGV0J3Mga2VlcCBmcmVxIGFycmF5IGZvciB2YWx1ZXMgYW5kIGEgRmVud2lja3Mgb3ZlciBhcnJheSBwb3NpdGlvbnMgZm
9yIGNvdW50aW5nIGRpc3RpbmN0IHZhbHVlcz8gTm8sIHdlIG5lZWQgcGFpcnMgd2l0aCBzYW1lIHZhbHVlLgoKICAgIC8vIEFsdGVybmF0aXZlOgogICAgLy8gRm9yIGVhY2ggdmFsdWUsIGtlZXAgYSBGZW53aW
NrcyBvZiBwb3NpdGlvbnMgd2hlcmUgaXQgYXBwZWFycy4KICAgIC8vIFRoZW4gZm9yIHF1ZXJ5IFtsLHJdLCBmb3IgZWFjaCB2YWx1ZSwgZmluZCBjb3VudCBpbiBbbCxyXSwgc3VtIHVwIEMoY291bnQsMikuCg
ogICAgLy8gQnV0IHRoaXMgaXMgTyhuKSBwZXIgcXVlcnkuCgogICAgLy8gV2UgbXVzdCB1c2UgYSBkYXRhIHN0cnVjdHVyZSB0aGF0IHN1cHBvcnRzIHVwZGF0ZSBhbmQgcXVlcnkgZWZmaWNpZW50bHkuCgogIC
AgLy8gVXNlIGEgRmVud2lja3MgZm9yIGVhY2ggdmFsdWUgaXMgdG9vIGJpZy4KCiAgICAvLyBJbnN0ZWFkLCB1c2UgYSBGZW53aWNrcyBmb3IgZnJlcXVlbmNpZXMgb2YgdmFsdWVzIGluIHNlZ21lbnRzLgoKIC
AgIC8vIFdlJ2xsIG1haW50YWluIGEgRmVud2lja3Mgb3ZlciBhcnJheSBwb3NpdGlvbnMgZm9yIGNvdW50aW5nIGZyZXF1ZW5jaWVzIG9mIHZhbHVlczoKICAgIC8vIEFjdHVhbGx5LCB3ZSBvbmx5IG5lZWQgZn
JlcXVlbmN5IHBlciB2YWx1ZSBvdmVyIHRoZSB3aG9sZSBhcnJheS4KCiAgICAvLyBUbyBzb2x2ZToKICAgIC8vIFdoZW4gdXBkYXRlIHBvc2l0aW9uIHAgZnJvbSBvbGRfdmFsIHRvIG5ld192YWw6CiAgICAvLy
BmcmVxW29sZF92YWxdLS0sIGZyZXFbbmV3X3ZhbF0rKwogICAgLy8gV2Uga2VlcCB0b3RhbCBmcmVxIGFuZCBwYWlycyBzdW0gPSBzdW0gb3ZlciBhbGwgdmFsdWVzIEMoZnJlcVt2XSwgMikKCiAgICAvLyBCdX
QgcXVlcmllcyBhc2sgYWJvdXQgc3VicmFuZ2VzLgoKICAgIC8vIFdlIG11c3QgbWFpbnRhaW4gZnJlcSBvZiB2YWx1ZXMgaW4gc3VicmFuZ2VzLCB3aXRoIHVwZGF0ZXMuCgogICAgLy8gTGV0J3MgYnVpbGQgYS
BzZWdtZW50IHRyZWUgb3ZlciB0aGUgYXJyYXksIGVhY2ggbm9kZSBzdG9yZXMgZnJlcSBtYXAgb2YgdmFsdWVzPwogICAgLy8gVG9vIGxhcmdlLgoKICAgIC8vIExldCdzIHRyeSBNTydzIGFsZ29yaXRobSB3aX
RoIHVwZGF0ZXMsIGJ1dCBxPTNlNSwgbj0xZTUgaXMgaGlnaC4KCiAgICAvLyBMZXQncyB1c2UgYSBzZWdtZW50IHRyZWUgd2l0aCBmcmVxIGNvdW50cyBwZXIgdmFsdWUgY29tcHJlc3NlZC4KCiAgICAvLyBXZS
BjYW4gdXNlIGEgc2VnbWVudCB0cmVlIHdpdGggYSBtYXAgaXMgaW1wb3NzaWJsZS4KCiAgICAvLyBJbnN0ZWFkLCB3ZSBjYW4gdXNlIGEgc2VnbWVudCB0cmVlIHdpdGggYSBGZW53aWNrcyBmb3IgZWFjaCB2YW
x1ZT8KCiAgICAvLyBXZSBjYW4gc3RvcmUgZm9yIGVhY2ggdmFsdWUsIGEgRmVud2lja3Mgb3ZlciBwb3NpdGlvbnMgd2hlcmUgaXQgYXBwZWFycy4KCiAgICAvLyBUaGVuIGZvciBxdWVyeSBsLHI6CiAgICAvLy
BGb3IgZWFjaCB2YWx1ZSwgZ2V0IGNvdW50IGluIFtsLHJdIHZpYSBmZW53aWNrcyBxdWVyeS4KCiAgICAvLyBTdW1tYXRpb24gQyhjb3VudCwyKSA9IHN1bSBjb3VudCooY291bnQtMSkvMgoKICAgIC8vIEJ1dC
BpdGVyYXRpbmcgYWxsIHZhbHVlcyBpcyBPKG4pLgoKICAgIC8vIFdlIG5lZWQgYSBkYXRhIHN0cnVjdHVyZSB0aGF0IGNhbiBnZXQgbnVtYmVyIG9mIGRpc3RpbmN0IGVsZW1lbnRzIGluIFtsLHJdLCBhbmQgc3
VtIG9mIGZyZXEgc3F1YXJlZD8KCiAgICAvLyBTaW5jZSBhbGwgdmFsdWVzIGFyZSBpbiBbMSxuXSwgd2UgY2FuIHVzZSBhIHNlZ21lbnQgdHJlZSB3aXRoIGZyZXF1ZW5jeSBjb3VudHMuCgogICAgLy8gTGV0J3
MgbWFpbnRhaW4gZm9yIGVhY2ggcG9zaXRpb24gaXRzIHZhbHVlLCBhbmQgYSBzZWdtZW50IHRyZWUgb3ZlciB2YWx1ZXMgc3RvcmluZyBjb3VudHMuCgogICAgLy8gQWN0dWFsbHksIHdlIGNhbiBtYWludGFpbi
BhIHNlZ21lbnQgdHJlZSBvdmVyIGFycmF5IHBvc2l0aW9ucywgZWFjaCBub2RlIHN0b3JlcyBhIGZyZXF1ZW5jeSBjb3VudCBtYXAgZm9yIHZhbHVlcz8KCiAgICAvLyBUaGlzIGlzIHRvbyBsYXJnZS4KCiAgIC
AvLyBBbHRlcm5hdGl2ZToKICAgIC8vIFdlIGNhbiBtYWludGFpbiBhIHNlZ21lbnQgdHJlZSB3aGVyZSBlYWNoIG5vZGUgc3RvcmVzOgogICAgLy8gLSB0b3RhbCBsZW5ndGgKICAgIC8vIC0gZnJlcSBtYXAgaX
MgaW1wb3NzaWJsZQoKICAgIC8vIEluc3RlYWQsIHVzZSBhIHBlcnNpc3RlbnQgc2VnbWVudCB0cmVlIG92ZXIgdmFsdWVzIHRvIGNvdW50IGZyZXEgaW4gcHJlZml4LgoKICAgIC8vIFRoZW4gZnJlcXVlbmN5IG
9mIHZhbHVlIHYgaW4gW2wscl0gPSBmcmVxX2luX3ByZWZpeChyLHYpIC0gZnJlcV9pbl9wcmVmaXgobC0xLHYpCgogICAgLy8gVGhlbiBzdW0gQyhmcmVxLDIpIG92ZXIgYWxsIHYgY2FuIGJlIGNvbXB1dGVkIG
J5IGl0ZXJhdGluZyBvdmVyIHVuaXF1ZSB2YWx1ZXMgaW4gdGhhdCByYW5nZS4KCiAgICAvLyBCdXQgd2UgZG9uJ3Qga25vdyB3aGljaCB2YWx1ZXMgYXBwZWFyIGluIFtsLHJdLCBzbyBpdGVyYXRpbmcgYWxsIH
ZhbHVlcyBpcyBPKG4pLgoKICAgIC8vIEFsdGVybmF0aXZlIGFwcHJvYWNoOgogICAgLy8gVXNlIGEgc2VnbWVudCB0cmVlIG92ZXIgYXJyYXkgcG9zaXRpb25zLCBlYWNoIG5vZGUgc3RvcmVzOgogICAgLy8gLS
Bjb3VudCBvZiB2YWx1ZXMKICAgIC8vIC0gY291bnRzIG9mIGZyZXEgb2YgdmFsdWVzPwoKICAgIC8vIFRvbyBjb21wbGljYXRlZC4KCiAgICAvLyBJbnN0ZWFkLCBsZXQncyBzdG9yZSBmcmVxdWVuY3kgb2Ygdm
FsdWVzIGluIGEgQklUIG92ZXIgcG9zaXRpb25zLgoKICAgIC8vIFdlIHdpbGwgdXNlIGEgQklUIHRvIG1haW50YWluIGZyZXF1ZW5jeSBvZiB2YWx1ZXM6CiAgICAvLyBGb3IgZWFjaCB2YWx1ZSwga2VlcCBGZW
53aWNrcyBvdmVyIHBvc2l0aW9ucyB3aGVyZSBpdCBvY2N1cnMuCgogICAgLy8gRm9yIHVwZGF0ZSBwIGZyb20gb2xkX3ZhbCB0byBuZXdfdmFsOgogICAgLy8gZmVud2lja3Nbb2xkX3ZhbF0udXBkYXRlKHAsIC
0xKQogICAgLy8gZmVud2lja3NbbmV3X3ZhbF0udXBkYXRlKHAsICsxKQoKICAgIC8vIEZvciBxdWVyeSBsLHI6CiAgICAvLyBzdW0gb3ZlciB2IEMoZnJlcV92LCAyKQogICAgLy8gZnJlcV92ID0gZmVud2lja3
Nbdl0ucmFuZ2VfcXVlcnkobCxyKQoKICAgIC8vIEJ1dCBpdGVyYXRpbmcgb3ZlciBhbGwgdmFsdWVzIGlzIE8obikgcGVyIHF1ZXJ5LgoKICAgIC8vIFdlIG5lZWQgdG8gb3B0aW1pemUuCgogICAgLy8gU2luY2
UgdmFsdWVzIGFyZSB1cCB0byBuLCBhbmQgcXVlcmllcyB1cCB0byAzZTUsIHdlIGNhbm5vdCBpdGVyYXRlIGFsbCB2YWx1ZXMgcGVyIHF1ZXJ5LgoKICAgIC8vIEFsdGVybmF0aXZlIGlkZWE6CiAgICAvLyBXZS
BjYW4ga2VlcCBhIEZlbndpY2tzIGZvciBmcmVxdWVuY2llcyBvZiB2YWx1ZXMgaW5zaWRlIHRoZSBzZWdtZW50PwoKICAgIC8vIEJ1dCBhZ2FpbiwgaGFyZC4KCiAgICAvLyBBbm90aGVyIGlkZWE6CiAgICAvLy
BUaGUgZm9ybXVsYSBwYWlycyB3aXRoIGRpZmZlcmVudCB2YWx1ZXMgPSB0b3RhbCBwYWlycyAtIHBhaXJzIHdpdGggc2FtZSB2YWx1ZXMuCgogICAgLy8gVG90YWwgcGFpcnMgPSBsZW4qKGxlbi0xKS8yCgogIC
AgLy8gTGV0J3MgdHJ5IHRvIG1haW50YWluIHBhaXJzIHdpdGggc2FtZSB2YWx1ZXMgaW4gW2wscl0uCgogICAgLy8gSWYgd2UgY2FuIG1haW50YWluIGNvdW50IG9mIGVhY2ggdmFsdWUgaW4gW2wscl0gcXVpY2
tseSwgd2UgY2FuIGNvbXB1dGUgc3VtIEMoZnJlcSwgMikuCgogICAgLy8gVXNpbmcgYSBzZWdtZW50IHRyZWUgd2l0aCBhIHNlZ21lbnQgdHJlZSBmb3IgZnJlcXVlbmNpZXMgaXMgY29tcGxpY2F0ZWQuCgogIC
AgLy8gTGV0J3MgdXNlIGEgc2VnbWVudCB0cmVlIHdpdGggYSBtYXAgb2YgZnJlcXVlbmNpZXMgZm9yIGVhY2ggbm9kZT8gTWVtb3J5IGlzIHRvbyBsYXJnZS4KCiAgICAvLyBJbnN0ZWFkLCBhIHNxcnQgZGVjb2
1wb3NpdGlvbiBvciBNTydzIGFsZ29yaXRobSB3aXRoIHVwZGF0ZXMuCgogICAgLy8gTU8ncyBhbGdvcml0aG0gd2l0aCB1cGRhdGVzIGlzIGNvbXBsZXggYnV0IHBvc3NpYmxlLgoKICAgIC8vIExldCdzIGltcG
xlbWVudCBNTydzIGFsZ29yaXRobSB3aXRoIG9mZmxpbmUgcXVlcmllcyBhbmQgdXBkYXRlcy4KCiAgICAvLyBEZWNvZGUgYWxsIHF1ZXJpZXMgZmlyc3QsIHRoZW4gcHJvY2VzcyBvZmZsaW5lIHdpdGggTU8ncy
BhbGdvcml0aG0gd2l0aCB1cGRhdGVzLgoKICAgIC8vIExldCdzIGltcGxlbWVudCB0aGF0LgoKICAgIC8vIFN0ZXAgMTogZGVjb2RlIHF1ZXJpZXMKCiAgICAvLyBTdGVwIDI6IHNlcGFyYXRlIHF1ZXJpZXMgb2
YgdHlwZSAyIChhbnN3ZXJzKSBhbmQgdHlwZSAxICh1cGRhdGVzKQoKICAgIC8vIFN0ZXAgMzogaW1wbGVtZW50IE1PIHdpdGggdXBkYXRlcyB0byBhbnN3ZXIgcXVlcmllcwoKICAgIC8vIFRoaXMgaXMgY29tcG
xleCBidXQgZmVhc2libGUuCgogICAgaW50IGJsb2NrX3NpemUgPSBpbnQocG93KG4sIDIuMC8zKSk7CgogICAgdmVjdG9yPGludD4gY3Vycl9hID0gYTsKCiAgICB2ZWN0b3I8dHVwbGU8aW50LGludCxpbnQsaW
50Pj4gbW9fcXVlcmllczsgLy8ge2wsIHIsIHRpbWUsIGlkeH0KICAgIHZlY3Rvcjx0dXBsZTxpbnQsaW50LGludD4+IHVwZGF0ZXM7IC8vIHtwb3MsIG9sZF92YWwsIG5ld192YWx9CgogICAgaW50IHRpbWUgPS
AwOwogICAgdmVjdG9yPGludD4gdHlwZShxKSwgcF8ocSksIHhfKHEpLCBsXyhxKSwgcl8ocSk7CiAgICBmb3IgKGludCBpID0gMDsgaSA8IHE7IGkrKykgewogICAgICAgIHR5cGVbaV0gPSBxdWVyaWVzW2ldWz
BdOwogICAgICAgIHBfW2ldID0gcXVlcmllc1tpXVsxXTsKICAgICAgICB4X1tpXSA9IHF1ZXJpZXNbaV1bMl07CiAgICB9CgogICAgdmVjdG9yPGludD4gZGVjb2RlZF9wKHEpLCBkZWNvZGVkX3gocSksIGRlY2
9kZWRfbChxKSwgZGVjb2RlZF9yKHEpOwoKICAgIGxhc3QgPSAwOwogICAgZm9yIChpbnQgaSA9IDA7IGkgPCBxOyBpKyspIHsKICAgICAgICBpZiAodHlwZVtpXSA9PSAxKSB7CiAgICAgICAgICAgIGludCBwID
0gKChwX1tpXSArIGxhc3QpICUgbikgKyAxOwogICAgICAgICAgICBpbnQgeCA9ICgoeF9baV0gKyBsYXN0KSAlIG4pICsgMTsKICAgICAgICAgICAgZGVjb2RlZF9wW2ldID0gcDsKICAgICAgICAgICAgZGVjb2
RlZF94W2ldID0geDsKICAgICAgICAgICAgdXBkYXRlcy5lbXBsYWNlX2JhY2socCwgY3Vycl9hW3BdLCB4KTsKICAgICAgICAgICAgY3Vycl9hW3BdID0geDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgIC
BpbnQgbCA9ICgocF9baV0gKyBsYXN0KSAlIG4pICsgMTsKICAgICAgICAgICAgaW50IHIgPSAoKHhfW2ldICsgbGFzdCkgJSBuKSArIDE7CiAgICAgICAgICAgIGlmIChsID4gcikgc3dhcChsLCByKTsKICAgIC
AgICAgICAgZGVjb2RlZF9sW2ldID0gbDsKICAgICAgICAgICAgZGVjb2RlZF9yW2ldID0gcjsKICAgICAgICAgICAgbW9fcXVlcmllcy5lbXBsYWNlX2JhY2sobCwgciwgKGludCl1cGRhdGVzLnNpemUoKSwgKG
ludCltb19xdWVyaWVzLnNpemUoKSk7CiAgICAgICAgfQogICAgfQoKICAgIC8vIFJlc2V0IGN1cnJfYSB0byBpbml0aWFsCiAgICBmb3IgKGludCBpID0gMTsgaSA8PSBuOyBpKyspIGN1cnJfYVtpXSA9IGFbaV
07CgogICAgLy8gTU8gY29tcGFyZSBmdW5jdGlvbgogICAgYXV0byBjbXAgPSBbJl0oY29uc3QgYXV0byAmYSwgY29uc3QgYXV0byAmYikgewogICAgICAgIGludCBibG9ja19hID0gZ2V0PDA+KGEpIC8gYmxvY2
tfc2l6ZTsKICAgICAgICBpbnQgYmxvY2tfYiA9IGdldDwwPihiKSAvIGJsb2NrX3NpemU7CiAgICAgICAgaWYgKGJsb2NrX2EgIT0gYmxvY2tfYikgcmV0dXJuIGJsb2NrX2EgPCBibG9ja19iOwogICAgICAgIG
ludCBibG9ja19hX3IgPSBnZXQ8MT4oYSkgLyBibG9ja19zaXplOwogICAgICAgIGludCBibG9ja19iX3IgPSBnZXQ8MT4oYikgLyBibG9ja19zaXplOwogICAgICAgIGlmIChibG9ja19hX3IgIT0gYmxvY2tfYl
9yKSByZXR1cm4gYmxvY2tfYV9yIDwgYmxvY2tfYl9yOwogICAgICAgIHJldHVybiBnZXQ8Mj4oYSkgPCBnZXQ8Mj4oYik7CiAgICB9OwoKICAgIHNvcnQobW9fcXVlcmllcy5iZWdpbigpLCBtb19xdWVyaWVzLm
VuZCgpLCBjbXApOwoKICAgIHZlY3RvcjxpbnQ+IGZyZXFfdmFsKG4rMSwgMCk7CiAgICBsb25nIGxvbmcgY3Vycl9wYWlyc19zYW1lID0gMDsKCiAgICBhdXRvIGFkZCA9IFsmXShpbnQgcG9zKSB7CiAgICAgIC
AgaW50IHZhbCA9IGN1cnJfYVtwb3NdOwogICAgICAgIGxvbmcgbG9uZyBmID0gZnJlcV92YWxbdmFsXTsKICAgICAgICBjdXJyX3BhaXJzX3NhbWUgLT0gZiAqIChmIC0gMUxMKSAvIDI7CiAgICAgICAgZnJlcV
92YWxbdmFsXSsrOwogICAgICAgIGYgPSBmcmVxX3ZhbFt2YWxdOwogICAgICAgIGN1cnJfcGFpcnNfc2FtZSArPSBmICogKGYgLSAxTEwpIC8gMjsKICAgIH07CgogICAgYXV0byByZW1vdmUgPSBbJl0oaW50IH
BvcykgewogICAgICAgIGludCB2YWwgPSBjdXJyX2FbcG9zXTsKICAgICAgICBsb25nIGxvbmcgZiA9IGZyZXFfdmFsW3ZhbF07CiAgICAgICAgY3Vycl9wYWlyc19zYW1lIC09IGYgKiAoZiAtIDFMTCkgLyAyOw
ogICAgICAgIGZyZXFfdmFsW3ZhbF0tLTsKICAgICAgICBmID0gZnJlcV92YWxbdmFsXTsKICAgICAgICBjdXJyX3BhaXJzX3NhbWUgKz0gZiAqIChmIC0gMUxMKSAvIDI7CiAgICB9OwoKICAgIGludCBjdXJyX2
wgPSAxLCBjdXJyX3IgPSAwLCBjdXJyX3QgPSAwOwoKICAgIHZlY3RvcjxpbnQ+IGFyciA9IGE7CgogICAgdmVjdG9yPGxvbmcgbG9uZz4gYW5zd2Vycyhtb19xdWVyaWVzLnNpemUoKSk7CgogICAgZm9yIChhdX
RvICZbbCwgciwgdCwgaWR4XSA6IG1vX3F1ZXJpZXMpIHsKICAgICAgICB3aGlsZSAoY3Vycl90IDwgdCkgewogICAgICAgICAgICBhdXRvIFtwb3MsIG9sZF92LCBuZXdfdl0gPSB1cGRhdGVzW2N1cnJfdF07Ci
AgICAgICAgICAgIGlmIChjdXJyX2wgPD0gcG9zICYmIHBvcyA8PSBjdXJyX3IpIHsKICAgICAgICAgICAgICAgIHJlbW92ZShwb3MpOwogICAgICAgICAgICAgICAgY3Vycl9hW3Bvc10gPSBuZXdfdjsKICAgIC
AgICAgICAgICAgIGFkZChwb3MpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY3Vycl9hW3Bvc10gPSBuZXdfdjsKICAgICAgICAgICAgfQogICAgICAgICAgICBjdXJyX3QrKzsKICAgIC
AgICB9CiAgICAgICAgd2hpbGUgKGN1cnJfdCA+IHQpIHsKICAgICAgICAgICAgY3Vycl90LS07CiAgICAgICAgICAgIGF1dG8gW3Bvcywgb2xkX3YsIG5ld192XSA9IHVwZGF0ZXNbY3Vycl90XTsKICAgICAgIC
AgICAgaWYgKGN1cnJfbCA8PSBwb3MgJiYgcG9zIDw9IGN1cnJfcikgewogICAgICAgICAgICAgICAgcmVtb3ZlKHBvcyk7CiAgICAgICAgICAgICAgICBjdXJyX2FbcG9zXSA9IG9sZF92OwogICAgICAgICAgIC
AgICAgYWRkKHBvcyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjdXJyX2FbcG9zXSA9IG9sZF92OwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHdoaWxlIChjdXJyX3IgPC
ByKSB7CiAgICAgICAgICAgIGN1cnJfcisrOwogICAgICAgICAgICBhZGQoY3Vycl9yKTsKICAgICAgICB9CiAgICAgICAgd2hpbGUgKGN1cnJfciA+IHIpIHsKICAgICAgICAgICAgcmVtb3ZlKGN1cnJfcik7Ci
AgICAgICAgICAgIGN1cnJfci0tOwogICAgICAgIH0KICAgICAgICB3aGlsZSAoY3Vycl9sIDwgbCkgewogICAgICAgICAgICByZW1vdmUoY3Vycl9sKTsKICAgICAgICAgICAgY3Vycl9sKys7CiAgICAgICAgfQ
ogICAgICAgIHdoaWxlIChjdXJyX2wgPiBsKSB7CiAgICAgICAgICAgIGN1cnJfbC0tOwogICAgICAgICAgICBhZGQoY3Vycl9sKTsKICAgICAgICB9CgogICAgICAgIGxvbmcgbG9uZyBsZW5ndGggPSByIC0gbC
ArIDE7CiAgICAgICAgbG9uZyBsb25nIHRvdGFsX3BhaXJzID0gbGVuZ3RoICogKGxlbmd0aCAtIDFMTCkgLyAyOwogICAgICAgIGxvbmcgbG9uZyBkaWZmX3BhaXJzID0gdG90YWxfcGFpcnMgLSBjdXJyX3BhaX
JzX3NhbWU7CiAgICAgICAgYW5zd2Vyc1tpZHhdID0gZGlmZl9wYWlyczsKICAgIH0KCiAgICBsYXN0ID0gMDsKICAgIGludCBpZHgyID0gMDsKICAgIGZvciAoaW50IGkgPSAwOyBpIDwgcTsgaSsrKSB7CiAgIC
AgICAgaWYgKHR5cGVbaV0gPT0gMSkgewogICAgICAgICAgICAvLyBubyBvdXRwdXQKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsb25nIGxvbmcgYW5zID0gYW5zd2Vyc1tpZHgyKytdOwogICAgICAgIC
AgICBjb3V0IDw8IGFucyA8PCAoaWR4MiA9PSAoaW50KWFuc3dlcnMuc2l6ZSgpID8gJ1xuJyA6ICcgJyk7CiAgICAgICAgICAgIGxhc3QgPSBhbnM7CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiAwOwp9Cg
==' | base64 -d > /app/main.cpp; tmux wait -S done
root@d0cc70b83811:/app#
