[?2004hroot@a7c01c92a97d:/app# asciinema rec --stdin /logs/agent.cast
[?2004l[0;32masciinema: recording asciicast to /logs/agent.cast[0m
[0;32masciinema: press <ctrl-d> or type "exit" when you're done[0m
[?2004hroot@a7c01c92a97d:/app# clear
[?2004l[H[J[3J[?2004hroot@a7c01c92a97d:/app# echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7Cgpjb25zdCBpbnQgTU9EID0gMTAwMDAwMDAwNzsKCmludCBtYWluKCkgewogICAgaW9zOjpzeW5jX3dpdGhfc3RkaW8oZmFsc2UpOwogICAgY2luLnRpZShudWxscHRyKTsKCiAgICBpbnQgdDsKICAgIGNpbiA+PiB0OwogICAgd2hpbGUgKHQtLSkgewogICAgICAgIGludCBuOwogICAgICAgIGNpbiA+PiBuOwogICAgICAgIHZlY3RvcjxpbnQ+IGEobik7CiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgY2luID4+IGFbaV07CiAgICAgICAgfQoKICAgICAgICB2ZWN0b3I8Ym9vbD4gdXNlZChuLCBmYWxzZSk7CiAgICAgICAgaW50IG1pc3NpbmdfY291bnQgPSAwOwogICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgbjsgaSsrKSB7CiAgICAgICAgICAgIGlmIChhW2ldICE9IC0xKSB1c2VkW2FbaV1dID0gdHJ1ZTsKICAgICAgICAgICAgZWxzZSBtaXNzaW5nX2NvdW50Kys7CiAgICAgICAgfQoKICAgICAgICAvLyBQcmVjb21wdXRlIGZhY3RvcmlhbHMgYW5kIGludmVyc2UgZmFjdG9yaWFscyBmb3IgcGVybXV0YXRpb25zCiAgICAgICAgc3RhdGljIHZlY3Rvcjxsb25nIGxvbmc+IGZhY3QoNTAwMSwgMSksIGludmZhY3QoNTAwMSwgMSk7CiAgICAgICAgc3RhdGljIGJvb2wgcHJlY29tcF9kb25lID0gZmFsc2U7CiAgICAgICAgaWYgKCFwcmVjb21wX2RvbmUpIHsKICAgICAgICAgICAgZm9yIChpbnQgaSA9IDE7IGkgPD0gNTAwMDsgaSsrKSB7CiAgICAgICAgICAgICAgICBmYWN0W2ldID0gZmFjdFtpLTFdICogaSAlIE1PRDsKICAgICAgICAgICAgfQogICAgICAgICAgICBpbnZmYWN0WzUwMDBdID0gMTsKICAgICAgICAgICAgLy8gRmVybWF0IGludmVyc2Ugb2YgZmFjdFs1MDAwXQogICAgICAgICAgICBsb25nIGxvbmcgYmFzZSA9IGZhY3RbNTAwMF0sIGV4cCA9IE1PRC0yLCByZXMgPSAxOwogICAgICAgICAgICB3aGlsZSAoZXhwKSB7CiAgICAgICAgICAgICAgICBpZiAoZXhwICYgMSkgcmVzID0gcmVzICogYmFzZSAlIE1PRDsKICAgICAgICAgICAgICAgIGJhc2UgPSBiYXNlICogYmFzZSAlIE1PRDsKICAgICAgICAgICAgICAgIGV4cCA+Pj0gMTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpbnZmYWN0WzUwMDBdID0gcmVzOwogICAgICAgICAgICBmb3IgKGludCBpID0gNDk5OTsgaSA+PSAwOyBpLS0pIHsKICAgICAgICAgICAgICAgIGludmZhY3RbaV0gPSBpbnZmYWN0W2krMV0gKiAoaSsxKSAlIE1PRDsKICAgICAgICAgICAgfQogICAgICAgICAgICBwcmVjb21wX2RvbmUgPSB0cnVlOwogICAgICAgIH0KCiAgICAgICAgYXV0byBuQ3IgPSBbJl0oaW50IG4sIGludCByKSAtPiBsb25nIGxvbmcgewogICAgICAgICAgICBpZiAociA+IG4gfHwgciA8IDApIHJldHVybiAwOwogICAgICAgICAgICByZXR1cm4gZmFjdFtuXSAqIGludmZhY3Rbcl0gJSBNT0QgKiBpbnZmYWN0W24tcl0gJSBNT0Q7CiAgICAgICAgfTsKCiAgICAgICAgLy8gQ291bnQgaG93IG1hbnkgbnVtYmVycyBhcmUgbWlzc2luZwogICAgICAgIHZlY3RvcjxpbnQ+IG1pc3NpbmdfbnVtczsKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG47IGkrKykgewogICAgICAgICAgICBpZiAoIXVzZWRbaV0pIG1pc3NpbmdfbnVtcy5wdXNoX2JhY2soaSk7CiAgICAgICAgfQoKICAgICAgICAvLyBkcFtsXVtyXSA9IHN1bSBvZiB2YWx1ZXMgb2YgYWxsIHZhbGlkIGNvbXBsZXRpb25zIG9mIHN1YmFycmF5IGFbbC4ucl0KICAgICAgICAvLyBTaW5jZSBuIDw9IDUwMDAsIE8obl4yKSBpcyBib3JkZXJsaW5lIGJ1dCBtaWdodCBwYXNzIHdpdGggb3B0aW1pemF0aW9uCgogICAgICAgIC8vIFdlJ2xsIHVzZSBhbiBhcHByb2FjaCBpbnNwaXJlZCBieSBlZGl0b3JpYWwgaGludHMgYW5kIHByb2JsZW0gZGlzY3Vzc2lvbjoKICAgICAgICAvLyBGb3IgZWFjaCBzdWJzZWdtZW50LCB0aGUgTUVYIGRlcGVuZHMgb24gd2hpY2ggbnVtYmVycyBhcmUgcHJlc2VudC4KICAgICAgICAvLyBXZSBtdXN0IGNvbnNpZGVyIHBlcm11dGF0aW9ucyBmaWxsaW5nIC0xJ3Mgd2l0aCBtaXNzaW5nIG51bWJlcnMuCgogICAgICAgIC8vIEFwcHJvYWNoOiBGb3IgZWFjaCBzdWJzZWdtZW50LCB3ZSBjb25zaWRlciB0aGUgbWluaW1hbCBleGNsdWRlZCBudW1iZXIgbS4KICAgICAgICAvLyBJdCBjYW4gYmUgZnJvbSAwIHRvIG4uCiAgICAgICAgLy8gV2UgdHJhY2sgZm9yIGVhY2ggc3Vic2VnbWVudCB0aGUgbnVtYmVyIG9mIHdheXMgdG8gZmlsbCBpdCBhbmQgc3VtIG9mIHZhbHVlcy4KCiAgICAgICAgLy8gQnV0IHRoZSBwcm9ibGVtIGlzIGNvbXBsZXg7IHdlIGFwcGx5IHRoZSBlZGl0b3JpYWwgYXBwcm9hY2g6CiAgICAgICAgLy8gVGhlIHRvdGFsIHN1bSA9IHN1bSBvdmVyIGFsbCBzdWJzZWdtZW50cyBvZiAoc3VtIG92ZXIgYWxsIGNvbXBsZXRpb25zIG9mIE1FWCBvZiB0aGF0IHN1YnNlZ21lbnQpCgogICAgICAgIC8vIExldCdzIHByZWNvbXB1dGUgZm9yIGVhY2ggc3Vic2VnbWVudCBbbCxyXToKICAgICAgICAvLyAxKSBXaGljaCBudW1iZXJzIGFyZSBmaXhlZCBwcmVzZW50PwogICAgICAgIC8vIDIpIEhvdyBtYW55IG1pc3NpbmcgcG9zaXRpb25zPwoKICAgICAgICAvLyBXZSdsbCB1c2UgZHAgYXJyYXlzIHRvIHRyYWNrIHRoZSBjb3VudHMgYW5kIHN1bXMuCgogICAgICAgIC8vIFRvIG9wdGltaXplLCB3ZSBjb25zaWRlciB0aGUgcHJvYmxlbSBpbiB0ZXJtcyBvZiBpbnRlcnZhbHMgYW5kIE1FWCB2YWx1ZXMuCgogICAgICAgIC8vIFRvIGltcGxlbWVudCBhIGZlYXNpYmxlIHNvbHV0aW9uLCB3ZSByZWx5IG9uIGEga25vd24gZWRpdG9yaWFsIGFwcHJvYWNoOgoKICAgICAgICAvLyBLZXkgaWRlYTogRm9yIGVhY2ggc3Vic2VnbWVudCwgdGhlIE1FWCBpcyB0aGUgc21hbGxlc3QgaW50ZWdlciB4IHN1Y2ggdGhhdDoKICAgICAgICAvLyAtIHggaXMgbm90IGZpeGVkIGluIHRoaXMgc3Vic2VnbWVudAogICAgICAgIC8vIC0gYWxsIGludGVnZXJzIDwgeCBhcmUgZml4ZWQgaW4gdGhpcyBzdWJzZWdtZW50CgogICAgICAgIC8vIFNvIGZvciBlYWNoIHN1YnNlZ21lbnQsIHdlIGNhbiBmaW5kIHRoZSBzbWFsbGVzdCB4IHRoYXQgaXMgYWJzZW50IGFtb25nIGZpeGVkIG51bWJlcnMuCgogICAgICAgIC8vIFdlIGFsc28gY291bnQgaG93IG1hbnkgbWlzc2luZyBudW1iZXJzIGFyZSBpbiBzdWJzZWdtZW50LgoKICAgICAgICAvLyBGb3IgZWFjaCBzdWJzZWdtZW50LCBudW1iZXIgb2YgY29tcGxldGlvbnMgPSBwZXJtdXRhdGlvbnMgb2YgbWlzc2luZyBudW1iZXJzIGluIHN1YnNlZ21lbnQKCiAgICAgICAgLy8gVGhlIHN1bSBvZiBNRVggdmFsdWVzIG92ZXIgYWxsIGNvbXBsZXRpb25zIGZvciB0aGUgc3Vic2VnbWVudCBpcyAoTUVYICogbnVtYmVyX29mX2NvbXBsZXRpb25zKQoKICAgICAgICAvLyBUaGVuIHN1bSBvdmVyIGFsbCBzdWJzZWdtZW50cyBhbmQgbXVsdGlwbHkgYnkgbnVtYmVyIG9mIGNvbXBsZXRpb25zIG91dHNpZGUgc3Vic2VnbWVudC4KCiAgICAgICAgLy8gV2UgcHJlY29tcHV0ZSBwcmVmaXggY291bnRzIG9mIGZpeGVkIG51bWJlcnMgdG8gY2hlY2sgcHJlc2VuY2UgcXVpY2tseS4KCiAgICAgICAgdmVjdG9yPHZlY3RvcjxpbnQ+PiBmaXhlZF9jb3VudChuKzEsIHZlY3RvcjxpbnQ+KG4rMSwgMCkpOwogICAgICAgIC8vIGZpeGVkX2NvdW50W3hdW2ldID0gbnVtYmVyIG9mIHRpbWVzIHggYXBwZWFycyBpbiBwcmVmaXggdXAgdG8gaS0xCiAgICAgICAgdmVjdG9yPHZlY3RvcjxpbnQ+PiBwcmVzZW5jZShuLCB2ZWN0b3I8aW50PihuKzEsIDApKTsKICAgICAgICBmb3IgKGludCB4ID0gMDsgeCA8IG47IHgrKykgewogICAgICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG47IGkrKykgewogICAgICAgICAgICAgICAgcHJlc2VuY2VbeF1baSsxXSA9IHByZXNlbmNlW3hdW2ldICsgKGFbaV0gPT0geCA/IDEgOiAwKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gcHJlZml4IGNvdW50IG9mIG1pc3NpbmcgcG9zaXRpb25zCiAgICAgICAgdmVjdG9yPGludD4gcHJlZml4X21pc3NpbmcobisxLDApOwogICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgbjsgaSsrKSB7CiAgICAgICAgICAgIHByZWZpeF9taXNzaW5nW2krMV0gPSBwcmVmaXhfbWlzc2luZ1tpXSArIChhW2ldID09IC0xID8gMSA6IDApOwogICAgICAgIH0KCiAgICAgICAgLy8gdG90YWwgd2F5cyB0byBmaWxsIG1pc3NpbmcgcG9zaXRpb25zOgogICAgICAgIGxvbmcgbG9uZyB0b3RhbF93YXlzID0gZmFjdFttaXNzaW5nX2NvdW50XTsKCiAgICAgICAgbG9uZyBsb25nIGFuc3dlciA9IDA7CgogICAgICAgIGZvciAoaW50IGwgPSAwOyBsIDwgbjsgbCsrKSB7CiAgICAgICAgICAgIGZvciAoaW50IHIgPSBsOyByIDwgbjsgcisrKSB7CiAgICAgICAgICAgICAgICAvLyBtaXNzaW5nIGluIHN1YnNlZ21lbnQKICAgICAgICAgICAgICAgIGludCBtaXNzaW5nX3N1YiA9IHByZWZpeF9taXNzaW5nW3IrMV0gLSBwcmVmaXhfbWlzc2luZ1tsXTsKICAgICAgICAgICAgICAgIC8vIGZpeGVkIG51bWJlcnMgcHJlc2VudCBpbiBzdWJzZWdtZW50CiAgICAgICAgICAgICAgICAvLyBjaGVjayBzbWFsbGVzdCB4IHN1Y2ggdGhhdCB4IG5vdCBpbiBmaXhlZCBzdWJzZWdtZW50CiAgICAgICAgICAgICAgICBpbnQgbWV4ID0gMDsKICAgICAgICAgICAgICAgIGZvciAoOyBtZXggPCBuOyBtZXgrKykgewogICAgICAgICAgICAgICAgICAgIGludCBjb3VudF94ID0gcHJlc2VuY2VbbWV4XVtyKzFdIC0gcHJlc2VuY2VbbWV4XVtsXTsKICAgICAgICAgICAgICAgICAgICBpZiAoY291bnRfeCA9PSAwKSBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBudW1iZXIgb2Ygd2F5cyB0byBmaWxsIG1pc3Npbmcgc3Vic2VnbWVudCBwb3NpdGlvbnMgPSBtaXNzaW5nX3N1YiEgCiAgICAgICAgICAgICAgICAvLyBudW1iZXIgb2Ygd2F5cyB0byBmaWxsIG1pc3Npbmcgb3V0c2lkZSBzdWJzZWdtZW50ID0gKG1pc3NpbmdfY291bnQgLSBtaXNzaW5nX3N1YikhCgogICAgICAgICAgICAgICAgLy8gbnVtYmVyIG9mIHdheXMgZm9yIHN1YnNlZ21lbnQgcGVybXV0YXRpb25zID0gZmFjdFttaXNzaW5nX3N1Yl0KICAgICAgICAgICAgICAgIC8vIG51bWJlciBvZiB3YXlzIGZvciBvdXRzaWRlID0gZmFjdFttaXNzaW5nX2NvdW50IC0gbWlzc2luZ19zdWJdCgogICAgICAgICAgICAgICAgLy8gVGhlIG51bWJlciBvZiB3YXlzIHRvIGZpbGwgZW50aXJlIGFycmF5IHdpdGggdGhhdCBzdWJzZWdtZW50IGZpeGVkIGlzOgogICAgICAgICAgICAgICAgLy8gbnVtYmVyIG9mIHdheXMgdG8gYXJyYW5nZSBtaXNzaW5nX3N1YiBudW1iZXJzIGluIHN1YnNlZ21lbnQgKiBudW1iZXIgb2Ygd2F5cyB0byBhcnJhbmdlIG1pc3NpbmdfY291bnQgLSBtaXNzaW5nX3N1YiBudW1iZXJzIG91dHNpZGUKCiAgICAgICAgICAgICAgICAvLyBNdWx0aXBseSBNRVggKiBudW1iZXJfb2Zfd2F5cwogICAgICAgICAgICAgICAgbG9uZyBsb25nIHdheXNfc3ViID0gZmFjdFttaXNzaW5nX3N1Yl07CiAgICAgICAgICAgICAgICBsb25nIGxvbmcgd2F5c19vdXRzaWRlID0gZmFjdFttaXNzaW5nX2NvdW50IC0gbWlzc2luZ19zdWJdOwogICAgICAgICAgICAgICAgbG9uZyBsb25nIHdheXMgPSAod2F5c19zdWIgKiB3YXlzX291dHNpZGUpICUgTU9EOwoKICAgICAgICAgICAgICAgIGFuc3dlciArPSAobG9uZyBsb25nKW1leCAqIHdheXM7CiAgICAgICAgICAgICAgICBpZiAoYW5zd2VyID49IE1PRCkgYW5zd2VyIC09IE1PRDsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgY291dCA8PCBhbnN3ZXIgJSBNT0QgPDwgIlxuIjsKICAgIH0KICAgIHJldHVybiAwOwp9Cg==' | base64 -d > /app/main.cpp; tmux wait -S done
[?2004l[?2004hroot@a7c01c92a97d:/app# [?2004l
exit
[0;32masciinema: recording finished[0m
[0;32masciinema: asciicast saved to /logs/agent.cast[0m
[?2004hroot@a7c01c92a97d:/app# 