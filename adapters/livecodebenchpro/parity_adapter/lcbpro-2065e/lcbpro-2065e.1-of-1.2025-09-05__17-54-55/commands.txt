['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
["echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgppbnQgbWFpbigpIHsKICAgIGlvczo6c3luY193aXRoX3N0ZGlvKGZhbHNlKTsKICAgIGNpbi50aWUobnVsbHB0cik7CgogICAgaW50IHQ7CiAgICBjaW4gPj4gdDsKICAgIHdoaWxlICh0LS0pIHsKICAgICAgICBpbnQgbiwgbSwgazsKICAgICAgICBjaW4gPj4gbiA+PiBtID4+IGs7CgogICAgICAgIC8vIElmIGsgPiBtYXgobiwgbSksIGltcG9zc2libGUgdG8gaGF2ZSBtYXggc3Vic3RyaW5nIGJhbGFuY2UgawogICAgICAgIGlmIChrID4gbWF4KG4sIG0pKSB7CiAgICAgICAgICAgIGNvdXQgPDwgLTEgPDwgIlxuIjsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfQoKICAgICAgICAvLyBJZiBrID09IG1heChuLCBtKSwgdGhlIG9ubHkgd2F5IHRvIGdldCBtYXggYmFsYW5jZSBrIGlzIGFsbCB6ZXJvcyBvciBhbGwgb25lcwogICAgICAgIC8vIENoZWNrIGlmIGsgPT0gbittLCB0aGVuIHN0cmluZyBpcyBhbGwgemVyb3Mgb3IgYWxsIG9uZXMKICAgICAgICBpZiAoayA9PSBuICsgbSkgewogICAgICAgICAgICBpZiAobiA9PSAwKSB7CiAgICAgICAgICAgICAgICBjb3V0IDw8IHN0cmluZyhtLCAnMScpIDw8ICJcbiI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAobSA9PSAwKSB7CiAgICAgICAgICAgICAgICBjb3V0IDw8IHN0cmluZyhuLCAnMCcpIDw8ICJcbiI7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb3V0IDw8IC0xIDw8ICJcbiI7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfQoKICAgICAgICAvLyBPdGhlcndpc2UsIHRyeSB0byBjb25zdHJ1Y3QgdGhlIHN0cmluZwogICAgICAgIC8vIElkZWE6CiAgICAgICAgLy8gV2Ugd2FudCBtYXggYmFsYW5jZSA9IGssIHNvIG1heCBkaWZmZXJlbmNlIGJldHdlZW4gY291bnRzIGluIGFueSBzdWJzdHJpbmcgaXMgay4KICAgICAgICAvLyBUbyBnZXQgbWF4IGJhbGFuY2Ugaywgd2UgY2FuIGNyZWF0ZSBhIHN1YnN0cmluZyBvZiBsZW5ndGggayB3aXRoIGFsbCB6ZXJvcyBvciBhbGwgb25lcy4KICAgICAgICAvLyBGb3IgbWF4IGJhbGFuY2UgbGVzcyB0aGFuIG1heChuLG0pLCB3ZSBjYW4gaW50ZXJsZWF2ZSBibG9ja3MuCgogICAgICAgIC8vIExldOKAmXMgdHJ5IHRvIGNyZWF0ZSBhIHN0cmluZyB3aXRoIG9uZSBibG9jayBvZiBsZW5ndGggayBvZiB0aGUgbWFqb3JpdHkgY2hhcmFjdGVyLAogICAgICAgIC8vIGFuZCB0aGUgcmVzdCBkaXN0cmlidXRlZCBzbyB0aGF0IG5vIHN1YnN0cmluZyBleGNlZWRzIGJhbGFuY2Ugay4KCiAgICAgICAgLy8gRGV0ZXJtaW5lIG1ham9yaXR5IGNoYXJhY3RlcgogICAgICAgIGNoYXIgbWFqb3IgPSAobiA+PSBtKSA/ICcwJyA6ICcxJzsKICAgICAgICBpbnQgbWFqb3JfY291bnQgPSAobiA+PSBtKSA/IG4gOiBtOwogICAgICAgIGludCBtaW5vcl9jb3VudCA9IChuID49IG0pID8gbSA6IG47CgogICAgICAgIC8vIElmIGsgPiBtYWpvcl9jb3VudCwgaW1wb3NzaWJsZQogICAgICAgIGlmIChrID4gbWFqb3JfY291bnQpIHsKICAgICAgICAgICAgY291dCA8PCAtMSA8PCAiXG4iOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CgogICAgICAgIC8vIFdlIHB1dCBhIGJsb2NrIG9mIG1ham9yIG9mIGxlbmd0aCBrIHNvbWV3aGVyZQogICAgICAgIC8vIFRoZW4gZGlzdHJpYnV0ZSByZW1haW5pbmcgY2hhcmFjdGVycyBzbyB0aGF0IG5vIHN1YnN0cmluZyBiYWxhbmNlID4gawoKICAgICAgICAvLyBTaW1wbGlmeSBhcHByb2FjaDoKICAgICAgICAvLyBQdXQgYmxvY2sgb2YgbWFqb3IgY2hhcnMgbGVuZ3RoIGsgYXQgc3RhcnQKICAgICAgICAvLyBUaGVuIGFkZCBtaW5vciBjaGFycwogICAgICAgIC8vIFRoZW4gcmVtYWluaW5nIG1ham9yIGNoYXJzCgogICAgICAgIHN0cmluZyByZXM7CiAgICAgICAgcmVzICs9IHN0cmluZyhrLCBtYWpvcik7CgogICAgICAgIG1ham9yX2NvdW50IC09IGs7CgogICAgICAgIC8vIE5vdyBkaXN0cmlidXRlIG1pbm9yIGFuZCByZW1haW5pbmcgbWFqb3IgY2hhcnMgYWx0ZXJuYXRpbmcgdG8gYXZvaWQgYmlnZ2VyIGJhbGFuY2UKICAgICAgICAvLyBCZWNhdXNlIG1heCBiYWxhbmNlIGlzIGssIG5vIHN1YnN0cmluZyBzaG91bGQgZXhjZWVkIHRoaXMKCiAgICAgICAgLy8gV2UnbGwgdHJ5IHRvIGFwcGVuZCBhcyBtYW55IG1pbm9yIGNoYXJzIGFzIHBvc3NpYmxlIGJldHdlZW4gbWFqb3IgY2hhcnMKCiAgICAgICAgd2hpbGUgKG1pbm9yX2NvdW50ID4gMCB8fCBtYWpvcl9jb3VudCA+IDApIHsKICAgICAgICAgICAgaWYgKG1pbm9yX2NvdW50ID4gMCkgewogICAgICAgICAgICAgICAgcmVzICs9IChtYWpvciA9PSAnMCcgPyAnMScgOiAnMCcpOwogICAgICAgICAgICAgICAgbWlub3JfY291bnQtLTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAobWFqb3JfY291bnQgPiAwKSB7CiAgICAgICAgICAgICAgICByZXMgKz0gbWFqb3I7CiAgICAgICAgICAgICAgICBtYWpvcl9jb3VudC0tOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyBDaGVjayBpZiBjb3VudHMgbWF0Y2gKICAgICAgICBpbnQgY250MCA9IGNvdW50KHJlcy5iZWdpbigpLCByZXMuZW5kKCksICcwJyk7CiAgICAgICAgaW50IGNudDEgPSBjb3VudChyZXMuYmVnaW4oKSwgcmVzLmVuZCgpLCAnMScpOwogICAgICAgIGlmIChjbnQwICE9IG4gfHwgY250MSAhPSBtKSB7CiAgICAgICAgICAgIGNvdXQgPDwgLTEgPDwgIlxuIjsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfQoKICAgICAgICAvLyBWZXJpZnkgbWF4IGJhbGFuY2Ugc3Vic3RyaW5nID09IGsKICAgICAgICAvLyBGb3IgZWZmaWNpZW5jeSwgdHJ1c3QgY29uc3RydWN0aW9uIG9yIHNraXAgdmVyaWZpY2F0aW9uIGFzIHByb2JsZW0gZG9lc24ndCByZXF1aXJlIGl0IGV4cGxpY2l0bHkuCgogICAgICAgIGNvdXQgPDwgcmVzIDw8ICJcbiI7CiAgICB9CgogICAgcmV0dXJuIDA7Cn0K' | base64 -d > /app/main.cpp", 'Enter']
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
['C-d']
