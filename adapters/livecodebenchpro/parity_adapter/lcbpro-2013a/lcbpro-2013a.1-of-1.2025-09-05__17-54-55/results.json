{
    "id": "c9a590bb-1277-4201-b7a0-009fef226ba3",
    "trial_name": "lcbpro-2013a.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2013a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2013A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nToday, a club fair was held at \"NSPhM\". In order to advertise his pastry club, Zhan decided to demonstrate the power of his blender.\n\nTo demonstrate the power of his blender, Zhan has $n$ fruits.\n\nThe blender can mix up to $x$ fruits per second.\n\nIn each second, Zhan can put up to $y$ fruits into the blender. After that, the blender will blend $\\min(x, c)$ fruits, where $c$ is the number of fruits inside the blender. After blending, blended fruits are removed from the blender.\n\nHelp Zhan determine the minimum amount of time required for Zhan to blend all fruits.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 1000$). The description of the test cases follows.\n\nThe first line of each test case contains one integer $n$ ($0 \\le n \\le 10^9$) -- the number of fruits Zhan has.\n\nThe second line of each test case contains two integers $x$ and $y$ ($1 \\le x, y \\le 10^9$) -- the number of fruits the blender can blend per second and the number of fruits Zhan can put into the blender per second.\n\n### Output\n\nFor each testcase, output a single integer -- the minimum number of seconds to blend all fruits.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n5\n\n3 4\n\n3\n\n1 2\n\n6\n\n4 3\n\n100\n\n4 3\n\n9\n\n3 3\n\n```\n\n#### Output #1\n\n```\n2\n3\n2\n34\n3\n```\n\n### Note\n\nIn the first example, you can first put $2$ fruits in the blender. After that, the blender will mix these $2$ fruits, and in the end, there will be $0$ fruits left in the blender. Then you can put $3$ fruits into the blender, after which the blender will mix these $3$ fruits.\n\nIn the second example, you can put $1$ fruit into the blender $3$ times.\n\nIn the third example, you can first put $3$ fruits into the blender, then add another $3$ fruits.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2013a/lcbpro-2013a.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 887,
    "total_output_tokens": 346,
    "trial_started_at": "2025-09-06T01:38:07.874936+00:00",
    "trial_ended_at": "2025-09-06T01:38:49.003065+00:00",
    "agent_started_at": "2025-09-06T01:38:19.998809+00:00",
    "agent_ended_at": "2025-09-06T01:38:25.923953+00:00",
    "test_started_at": "2025-09-06T01:38:28.199531+00:00",
    "test_ended_at": "2025-09-06T01:38:32.594861+00:00"
}