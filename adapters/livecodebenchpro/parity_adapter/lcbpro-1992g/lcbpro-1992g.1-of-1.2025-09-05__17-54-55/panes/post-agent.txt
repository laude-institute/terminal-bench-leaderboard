root@e3ed593ecf75:/app# echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7Cgpjb25zdCBpbnQgTU9EID0gMWU5ICsgNzsKCmludCBtYWluKCkgewogICAgaW9zOjpzeW
5jX3dpdGhfc3RkaW8oZmFsc2UpOwogICAgY2luLnRpZShudWxscHRyKTsKICAgIGludCB0OwogICAgY2luID4+IHQ7CiAgICB3aGlsZSAodC0tKSB7CiAgICAgICAgaW50IG47CiAgICAgICAgY2luID4+IG47Ci
AgICAgICAgdmVjdG9yPGludD4gYShuKTsKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG47IGkrKykgewogICAgICAgICAgICBhW2ldID0gaSArIDE7CiAgICAgICAgfQoKICAgICAgICAvLyBUaGUgcHJvYm
xlbTogR2l2ZW4gdGhlIGFycmF5IGEgPSBbMS4ubl0sIGZpbmQgc3VtIG9mIE1FWChiLCB8YnwrMSkgb3ZlciBhbGwgZGlzdGluY3Qgc3Vic2V0cyBiIG9mIGEuCiAgICAgICAgLy8gU2luY2UgYWxsIGVsZW1lbn
RzIDEuLm4gYXJlIHByZXNlbnQsIGV2ZXJ5IHN1YnNldCBpcyB1bmlxdWVseSBpZGVudGlmaWVkIGJ5IHdoaWNoIGVsZW1lbnRzIGl0IGNvbnRhaW5zLgogICAgICAgIC8vIFdlIHdhbnQgdG8gZmluZCBzdW0gb3
ZlciBhbGwgc3Vic2V0cyBiIG9mIE1FWChiLCB8YnwrMSkuCgogICAgICAgIC8vIExldCdzIGRlbm90ZSBrID0gfGJ8LgogICAgICAgIC8vIE1FWChiLCBrKzEpIGlzIHRoZSAoaysxKS10aCBwb3NpdGl2ZSBpbn
RlZ2VyIG1pc3NpbmcgZnJvbSBiLgoKICAgICAgICAvLyBLZXkgb2JzZXJ2YXRpb25zOgogICAgICAgIC8vIC0gVGhlIHN1YnNldHMgYXJlIGFsbCBzdWJzZXRzIG9mIHsxLC4uLixufQogICAgICAgIC8vIC0gRm
9yIHN1YnNldHMgb2Ygc2l6ZSBrLCBNRVgoYiwgaysxKSBpcyB0aGUgKGsrMSktdGggbWlzc2luZyBwb3NpdGl2ZSBpbnRlZ2VyIGZyb20gYgoKICAgICAgICAvLyBMZXTigJlzIGFuYWx5emUgdGhlIE1FWCBmb3
IgYSBzdWJzZXQgYiBvZiBzaXplIGsuCiAgICAgICAgLy8gVGhlIHN1YnNldCBiIGNvbnRhaW5zIGsgZGlzdGluY3QgaW50ZWdlcnMgZnJvbSAxIHRvIG4uCiAgICAgICAgLy8gVGhlIG1pc3NpbmcgbnVtYmVycy
BhcmUgdGhlIHBvc2l0aXZlIGludGVnZXJzIG5vdCBpbiBiLgogICAgICAgIC8vIFNpbmNlIGIgY29udGFpbnMgayBudW1iZXJzIGZyb20gMS4ubiwgdGhlIG1pc3NpbmcgbnVtYmVycyBhcmUgYXQgbGVhc3Qgbi
1rIG51bWJlcnMgd2l0aGluIDEuLm4sIHBsdXMgYWxsIGludGVnZXJzID4gbi4KCiAgICAgICAgLy8gVGhlIG1pc3NpbmcgbnVtYmVycyBpbiBhc2NlbmRpbmcgb3JkZXIgYXJlOgogICAgICAgIC8vIEFsbCBudW
1iZXJzIGluIFsxLi5uXSBub3QgaW4gYiAodGhlcmUgYXJlIG4tayBzdWNoIG51bWJlcnMpLCBzb3J0ZWQgYXNjZW5kaW5nCiAgICAgICAgLy8gVGhlbiBudW1iZXJzIG4rMSwgbisyLCBuKzMsLi4uCgogICAgIC
AgIC8vIFdlIHdhbnQgdGhlIChrKzEpLXRoIG1pc3NpbmcgbnVtYmVyLgogICAgICAgIC8vIElmIGsrMSA8PSBuLWsgKHRoZSBudW1iZXIgb2YgbWlzc2luZyBudW1iZXJzIGluc2lkZSAxLi5uKSwgdGhlbiBNRV
goYixrKzEpIGlzIHRoZSAoaysxKS10aCBzbWFsbGVzdCBtaXNzaW5nIG51bWJlciBpbnNpZGUgWzEuLm5dLgogICAgICAgIC8vIE90aGVyd2lzZSwgTUVYKGIsaysxKSA9IG4gKyAoaysxIC0gKG4taykpID0gay
sxICsgayA9IDJrKzEKCiAgICAgICAgLy8gVG8gZmluZCBNRVgoYixrKzEpLCB3ZSBuZWVkIHRvIGtub3cgdGhlIChrKzEpLXRoIG1pc3NpbmcgbnVtYmVyIGluIHRoZSBzdWJzZXQuCgogICAgICAgIC8vIFRoZS
Bwcm9ibGVtIHJlZHVjZXMgdG86CiAgICAgICAgLy8gRm9yIGVhY2ggayBmcm9tIDAgdG8gbiwgc3VtIG92ZXIgYWxsIHN1YnNldHMgYiBvZiBzaXplIGsgdGhlIHZhbHVlIG9mIE1FWChiLGsrMSkuCgogICAgIC
AgIC8vIExldCdzIGRlbm90ZToKICAgICAgICAvLyBGb3IgYSBzdWJzZXQgYiBvZiBzaXplIGssIGxldCBtaXNzaW5nX2luXzFfdG9fbiA9IG51bWJlcnMgbm90IGluIGIgaW4gWzEuLm5dLgogICAgICAgIC8vIG
1pc3NpbmdfaW5fMV90b19uIHNpemUgPSBuLWsuCgogICAgICAgIC8vIFRoZSAoaysxKS10aCBtaXNzaW5nIG51bWJlciBpczoKICAgICAgICAvLyAtIElmIGsrMSA8PSBuLWssIChrKzEpLXRoIG1pc3NpbmcgaW
4gWzEuLm5dCiAgICAgICAgLy8gLSBFbHNlLCAyaysxCgogICAgICAgIC8vIEZvciBzdWJzZXRzIGIgb2Ygc2l6ZSBrLCB0aGUgbWlzc2luZyBudW1iZXJzIGluIFsxLi5uXSBhcmUgdGhlIGVsZW1lbnRzIG5vdC
BjaG9zZW4uCiAgICAgICAgLy8gVGhlIG1pc3NpbmcgbnVtYmVycyBpbnNpZGUgWzEuLm5dIGRlcGVuZCBvbiB3aGljaCBlbGVtZW50cyBhcmUgY2hvc2VuLgoKICAgICAgICAvLyBXZSB3YW50IHN1bSBvZiBNRV
goYixrKzEpIG92ZXIgYWxsIHN1YnNldHMgYiBvZiBzaXplIGsuCgogICAgICAgIC8vIEJyZWFrIGRvd246CiAgICAgICAgLy8gc3VtX3tiOnxifD1rfSBNRVgoYixrKzEpID0gc3VtX3tiOnxifD1rfSAoaWYgay
sxIDw9IG4tayB0aGVuIHRoZSAoaysxKS10aCBtaXNzaW5nIG51bWJlciBpbiBbMS4ubl0gZWxzZSAyaysxKQoKICAgICAgICAvLyBOb3RlOgogICAgICAgIC8vIC0gSWYgaysxID4gbi1rLCB0aGVuIE1FWChiLG
srMSkgPSAyaysxIGZvciBhbGwgc3Vic2V0cyBiIHdpdGggc2l6ZSBrLgogICAgICAgIC8vIE51bWJlciBvZiBzdWNoIHN1YnNldHMgPSBDKG4sayksIHNvIHN1bSA9IEMobixrKSogKDJrKzEpCgogICAgICAgIC
8vIElmIGsrMSA8PSBuLWssIHRoZSAoaysxKS10aCBtaXNzaW5nIG51bWJlciBpbiBbMS4ubl0gZGVwZW5kcyBvbiB3aGljaCAobi1rKSBudW1iZXJzIGFyZSBtaXNzaW5nLgogICAgICAgIC8vIFRoZSBtaXNzaW
5nIG51bWJlcnMgaW5zaWRlIFsxLi5uXSBhcmUgdGhlIChuLWspIGVsZW1lbnRzIG9mIFsxLi5uXSBub3QgaW4gYi4KCiAgICAgICAgLy8gVGh1cywgZm9yIGsrMSA8PSBuLWssIE1FWChiLGsrMSkgPSB0aGUgKG
srMSktdGggc21hbGxlc3QgZWxlbWVudCBvZiB0aGUgY29tcGxlbWVudCBvZiBiIGluIFsxLi5uXS4KCiAgICAgICAgLy8gU28gd2Ugd2FudCB0byBzdW0gb3ZlciBhbGwgYiBvZiBzaXplIGsgdGhlIChrKzEpLX
RoIHNtYWxsZXN0IGVsZW1lbnQgb2YgdGhlIGNvbXBsZW1lbnQgb2YgYi4KCiAgICAgICAgLy8gRXF1aXZhbGVudGx5LCBzdW0gb3ZlciBhbGwgc3Vic2V0cyBjIG9mIHNpemUgbi1rICh0aGUgY29tcGxlbWVudC
BzZXRzKSB0aGUgKGsrMSktdGggc21hbGxlc3QgZWxlbWVudCBvZiBjLgoKICAgICAgICAvLyBGb3IgZml4ZWQgaywKICAgICAgICAvLyBudW1iZXIgb2Ygc3Vic2V0cyBjIG9mIHNpemUgbSA9IG4tawogICAgIC
AgIC8vIHN1bSBvdmVyIGFsbCBzdWJzZXRzIGMgb2Ygc2l6ZSBtIG9mIHRoZSAoaysxKS10aCBzbWFsbGVzdCBlbGVtZW50IG9mIGMKCiAgICAgICAgLy8gTGV0IG0gPSBuLWsKICAgICAgICAvLyB0aGUgcG9zaX
Rpb24gaW4gc3Vic2V0IGMgaXMgcG9zID0gaysxCiAgICAgICAgLy8gc2luY2UgcG9zIDw9IG0gKGJlY2F1c2UgaysxIDw9IG4taykKCiAgICAgICAgLy8gV2Ugd2FudCBzdW0gb3ZlciBhbGwgc3Vic2V0cyBjIG
9mIHNpemUgbSwgb2YgdGhlIHBvcy10aCBzbWFsbGVzdCBlbGVtZW50IGluIGMuCgogICAgICAgIC8vIFdlIGNhbiBjb21wdXRlIHRoaXMgdXNpbmcgY29tYmluYXRvcmljczoKICAgICAgICAvLyBGb3IgZWFjaC
BlbGVtZW50IHggaW4gWzEuLm5dLCBob3cgbWFueSBzdWJzZXRzIGMgb2Ygc2l6ZSBtIGhhdmUgeCBhcyB0aGUgcG9zLXRoIHNtYWxsZXN0IGVsZW1lbnQ/CgogICAgICAgIC8vIEZvciB4IHRvIGJlIHRoZSBwb3
MtdGggc21hbGxlc3QgZWxlbWVudCBpbiBjOgogICAgICAgIC8vIC0gRXhhY3RseSBwb3MtMSBlbGVtZW50cyBsZXNzIHRoYW4geCBhcmUgaW4gYwogICAgICAgIC8vIC0gRXhhY3RseSBtIC0gcG9zIGVsZW1lbn
RzIGdyZWF0ZXIgdGhhbiB4IGFyZSBpbiBjCiAgICAgICAgLy8gTnVtYmVyIG9mIGVsZW1lbnRzIGxlc3MgdGhhbiB4OiB4LTEKICAgICAgICAvLyBOdW1iZXIgb2YgZWxlbWVudHMgZ3JlYXRlciB0aGFuIHg6IG
4gLSB4CgogICAgICAgIC8vIE51bWJlciBvZiB3YXlzOgogICAgICAgIC8vIGNob29zZSBwb3MtMSBlbGVtZW50cyBmcm9tIHgtMSBlbGVtZW50cyBsZXNzIHRoYW4geDogQyh4LTEsIHBvcy0xKQogICAgICAgIC
8vIGNob29zZSBtLXBvcyBlbGVtZW50cyBmcm9tIG4teCBlbGVtZW50cyBncmVhdGVyIHRoYW4geDogQyhuIC0geCwgbSAtIHBvcykKCiAgICAgICAgLy8gVG90YWwgc3Vic2V0cyBjIG9mIHNpemUgbSB3aXRoIH
ggYXMgcG9zLXRoIHNtYWxsZXN0OiBDKHgtMSwgcG9zLTEpICogQyhuLXgsIG0tcG9zKQoKICAgICAgICAvLyBTdW0gb3ZlciB4PTEgdG8gbiBvZiB4ICogQyh4LTEsIHBvcy0xKSAqIEMobi14LCBtLXBvcykKCi
AgICAgICAgLy8gVGh1cywKICAgICAgICAvLyBJZiBrKzEgPD0gbi1rOgogICAgICAgIC8vIHN1bV97Yjp8Ynw9a30gTUVYKGIsaysxKSA9IHN1bV97eD0xfV5uIHggKiBDKHgtMSwgaykgKiBDKG4teCwgbi1rIC
0gKGsrMSkpCiAgICAgICAgLy8gPSBzdW1fe3g9MX1ebiB4ICogQyh4LTEsIGspICogQyhuLXgsIG4tMmstMSkKCiAgICAgICAgLy8gV2hlbiBuLTJrLTEgPCAwLCBDKG4teCwgbi0yay0xKSA9IDAsIHNvIHN1bS
B6ZXJvCgogICAgICAgIC8vIEZvciBrKzEgPiBuLWssIHN1bSA9IEMobixrKSooMmsrMSkKCiAgICAgICAgLy8gV2UnbGwgcHJlY29tcHV0ZSBjb21iaW5hdGlvbnMgQyB1cCB0byBuPTUwMDAgbW9kdWxvIE1PRC
4KCiAgICAgICAgLy8gSW1wbGVtZW50IHRoaXMgYW5kIHN1bSBvdmVyIGs9MC4ubgoKICAgICAgICAvLyBQcmVjb21wdXRlIGZhY3RvcmlhbHMgYW5kIGludmVyc2UgZmFjdG9yaWFscwogICAgICAgIHN0YXRpYy
B2ZWN0b3I8bG9uZyBsb25nPiBmYWN0KDUwMDEsMSksIGludmZhY3QoNTAwMSwxKTsKICAgICAgICBzdGF0aWMgYm9vbCBpbml0aWFsaXplZCA9IGZhbHNlOwogICAgICAgIGlmICghaW5pdGlhbGl6ZWQpIHsKIC
AgICAgICAgICAgZm9yIChpbnQgaT0xOyBpPD01MDAwOyBpKyspIGZhY3RbaV0gPSBmYWN0W2ktMV0qaSAlIE1PRDsKICAgICAgICAgICAgaW52ZmFjdFs1MDAwXSA9IDE7CiAgICAgICAgICAgIC8vIEZlcm1hdC
BpbnZlcnNlIG9mIGZhY3RbNTAwMF0KICAgICAgICAgICAgbG9uZyBsb25nIHggPSBmYWN0WzUwMDBdLCB5ID0gTU9ELTIsIHJlcz0xOwogICAgICAgICAgICB3aGlsZSAoeSkgewogICAgICAgICAgICAgICAgaW
YgKHkmMSkgcmVzID0gcmVzKnggJSBNT0Q7CiAgICAgICAgICAgICAgICB4ID0geCp4ICUgTU9EOwogICAgICAgICAgICAgICAgeSA+Pj0gMTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpbnZmYWN0WzUwMD
BdID0gcmVzOwogICAgICAgICAgICBmb3IgKGludCBpPTQ5OTk7IGk+PTE7IGktLSkgaW52ZmFjdFtpXSA9IGludmZhY3RbaSsxXSooaSsxKSVNT0Q7CiAgICAgICAgICAgIGluaXRpYWxpemVkID0gdHJ1ZTsKIC
AgICAgICB9CgogICAgICAgIGF1dG8gQyA9IFsmXShpbnQgbiwgaW50IGspIC0+IGxvbmcgbG9uZyB7CiAgICAgICAgICAgIGlmIChrIDwgMCB8fCBrID4gbikgcmV0dXJuIDA7CiAgICAgICAgICAgIHJldHVybi
BmYWN0W25dKmludmZhY3Rba10lTU9EKmludmZhY3Rbbi1rXSVNT0Q7CiAgICAgICAgfTsKCiAgICAgICAgbG9uZyBsb25nIGFuc3dlciA9IDA7CiAgICAgICAgZm9yIChpbnQgaz0wOyBrPD1uOyBrKyspIHsKIC
AgICAgICAgICAgaW50IG0gPSBuIC0gazsKICAgICAgICAgICAgaW50IHBvcyA9IGsgKyAxOwogICAgICAgICAgICBpZiAocG9zIDw9IG0pIHsKICAgICAgICAgICAgICAgIC8vIHN1bSBvdmVyIHg9MS4ubiBvZi
B4ICogQyh4LTEsaykgKiBDKG4teCwgbSAtIHBvcykKICAgICAgICAgICAgICAgIGludCBjb21iX3JpZ2h0ID0gbSAtIHBvczsKICAgICAgICAgICAgICAgIGxvbmcgbG9uZyBzdW1fayA9IDA7CiAgICAgICAgIC
AgICAgICBmb3IgKGludCB4PTE7IHg8PW47IHgrKykgewogICAgICAgICAgICAgICAgICAgIGxvbmcgbG9uZyB2YWwgPSAobG9uZyBsb25nKSB4ICogQyh4LTEsIGspICUgTU9EICogQyhuIC0geCwgY29tYl9yaW
dodCkgJSBNT0Q7CiAgICAgICAgICAgICAgICAgICAgc3VtX2sgPSAoc3VtX2sgKyB2YWwpICUgTU9EOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYW5zd2VyID0gKGFuc3dlciArIHN1bV9rKS
AlIE1PRDsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIC8vIHN1bSA9IEMobixrKSAqICgyaysxKQogICAgICAgICAgICAgICAgbG9uZyBsb25nIHZhbCA9IEMobixrKSAqICgyTEwqayArID
EpICUgTU9EOwogICAgICAgICAgICAgICAgYW5zd2VyID0gKGFuc3dlciArIHZhbCkgJSBNT0Q7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY291dCA8PCBhbnN3ZXIgPDwgJ1xuJzsKICAgIH0KIC
AgIHJldHVybiAwOwp9Cg==' | base64 -d > /app/main.cpp; tmux wait -S done
root@e3ed593ecf75:/app#
