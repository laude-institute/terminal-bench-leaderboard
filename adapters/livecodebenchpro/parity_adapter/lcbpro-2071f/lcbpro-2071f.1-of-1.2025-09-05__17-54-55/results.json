{
    "id": "b9799051-f44e-4088-b73f-40e4c17d3110",
    "trial_name": "lcbpro-2071f.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2071f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2071F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nAn array $b = [b_1, b_2, \\ldots, b_m]$ of length $m$ is called $p$-towering if there exists an index $i$ ($1\\\\le i\\\\le m$) such that for every index $j$ ($1 \\\\le j \\\\le m$), the following condition holds:\n\n$$b_j \\ge p - |i - j|.$$\n\nGiven an array $a = [a_1, a_2, \\ldots, a_n]$ of length $n$, you can remove at most $k$ elements from it. Determine the maximum value of $p$ for which the remaining array can be made $p$-towering.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$ and $k$ ($0 \\le k < n \\le 2 \\cdot 10^5$).\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\le a_i \\le 10^9$).\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output a single integerÂ -- the maximum value of $p$ for which the remaining array can be made $p$-towering.\n\n### Example\n\n#### Input #1\n\n```\n\n6\n\n5 0\n\n2 1 4 5 2\n\n5 3\n\n2 1 4 5 2\n\n6 1\n\n1 2 3 4 5 1\n\n11 6\n\n6 3 8 5 8 3 2 1 2 7 1\n\n14 3\n\n3 2 3 5 5 2 6 7 4 8 10 1 8 9\n\n2 0\n\n1 1\n\n```\n\n#### Output #1\n\n```\n3\n5\n5\n7\n9\n1\n```\n\n### Note\n\nIn the first test case, you cannot delete any element. The array remains $[2, 1, 4, \\color{red}{5}, 2]$ and is p-towering for $p = 3$ by picking $i = 4$:\n\n- $a_1 = 2 \\ge p - |i - 1| = 3 - |4 - 1| = 0$;\n- $a_2 = 1 \\ge p - |i - 2| = 3 - |4 - 2| = 1$;\n- $a_3 = 4 \\ge p - |i - 3| = 3 - |4 - 3| = 2$;\n- $a_4 = 5 \\ge p - |i - 4| = 3 - |4 - 4| = 3$;\n- $a_5 = 2 \\ge p - |i - 5| = 3 - |4 - 5| = 2$.\n\nIn the second test case, you can remove the first, second, and fifth elements to obtain the array $[4, \\color{red}{5}]$. Clearly, the obtained array is p-towering for $p = 5$ by picking $i = 2$.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2071f/lcbpro-2071f.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1172,
    "total_output_tokens": 547,
    "trial_started_at": "2025-09-06T01:35:23.715936+00:00",
    "trial_ended_at": "2025-09-06T01:36:19.394349+00:00",
    "agent_started_at": "2025-09-06T01:35:44.056937+00:00",
    "agent_ended_at": "2025-09-06T01:35:53.736849+00:00",
    "test_started_at": "2025-09-06T01:35:57.111594+00:00",
    "test_ended_at": "2025-09-06T01:36:02.014601+00:00"
}