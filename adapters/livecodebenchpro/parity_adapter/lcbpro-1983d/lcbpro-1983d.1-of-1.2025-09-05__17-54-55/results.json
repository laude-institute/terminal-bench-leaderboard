{
    "id": "05dc5231-4209-4d01-889d-12e42afa833e",
    "trial_name": "lcbpro-1983d.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-1983d",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 1983D)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nGiven two arrays of distinct positive integers $a$ and $b$ of length $n$, we would like to make both the arrays the same. Two arrays $x$ and $y$ of length $k$ are said to be the same when for all $1 \\le i \\le k$, $x_i = y_i$.\n\nNow in one move, you can choose some index $l$ and $r$ in $a$ ($l \\le r$) and swap $a_l$ and $a_r$, then choose some $p$ and $q$ ($p \\le q$) in $b$ such that $r-l=q-p$ and swap $b_p$ and $b_q$.\n\nIs it possible to make both arrays the same?\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 2 \\cdot 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 10^5$) -- the length of the arrays $a$ and $b$.\n\nThe second line of each test case contains $n$ distinct integers $a_1,a_2,a_3,\\ldots,a_n$ ($1 \\le a_i \\le 2 \\cdot 10^5$) -- the integers in the array $a$.\n\nThe third line of each test case contains $n$ distinct integers $b_1,b_2,b_3,\\ldots,b_n$ ($1 \\le b_i \\le 2 \\cdot 10^5$) -- the integers in the array $b$.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n### Output\n\nFor each testcase, print \"YES\" if the arrays $a$ and $b$ can be made the same. Otherwise, print \"NO\". can output the answer in any case (upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive responses.\n\n### Example\n\n#### Input #1\n\n```\n\n6\n\n4\n\n1 2 3 4\n\n1 2 3 4\n\n5\n\n1 3 4 2 5\n\n7 1 2 5 4\n\n4\n\n1 2 3 4\n\n4 3 2 1\n\n3\n\n1 2 3\n\n1 3 2\n\n5\n\n1 5 7 1000 4\n\n4 1 7 5 1000\n\n3\n\n1 4 2\n\n1 3 2\n\n```\n\n#### Output #1\n\n```\nYES\nNO\nYES\nNO\nNO\nNO\n```\n\n### Note\n\nIn the first testcase, you don't need to perform any operations since the arrays are same.\n\nIn the second testcase, it can be proven there exists no way to make the arrays same.\n\nIn the third testcase, one of the ways to make the arrays same is to first choose $l=1$, $r=3$, $p=1$, $q=3$ then choose $l=1$, $r=2$, $p=3$, $q=4$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-1983d/lcbpro-1983d.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1117,
    "total_output_tokens": 796,
    "trial_started_at": "2025-09-06T01:09:38.568346+00:00",
    "trial_ended_at": "2025-09-06T01:10:33.139287+00:00",
    "agent_started_at": "2025-09-06T01:09:54.379868+00:00",
    "agent_ended_at": "2025-09-06T01:10:10.896532+00:00",
    "test_started_at": "2025-09-06T01:10:13.215915+00:00",
    "test_ended_at": "2025-09-06T01:10:16.443953+00:00"
}