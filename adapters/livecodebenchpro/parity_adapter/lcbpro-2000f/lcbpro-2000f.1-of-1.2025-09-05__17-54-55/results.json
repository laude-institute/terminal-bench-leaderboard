{
    "id": "a0adb1e1-11c5-49b5-bc50-5c54f85a0147",
    "trial_name": "lcbpro-2000f.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2000f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2000F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou have $n$ rectangles, the $i$-th of which has a width of $a_i$ and a height of $b_i$.\n\nYou can perform the following operation an unlimited number of times: choose a rectangle and a cell in it, and then color it.\n\nEach time you completely color any row or column, you earn $1$ point. Your task is to score at least $k$ points with as few operations as possible.\n\nSuppose you have a rectangle with a width of $6$ and a height of $3$. You can score $4$ points by coloring all the cells in any $4$ columns, thus performing $12$ operations.\n\n### Input\n\nThe first line contains an integer $t$ ($1 \\le t \\le 100$) -- the number of test cases. The following are the descriptions of the test cases.\n\nThe first line of each test case description contains two integers $n$ and $k$ ($1 \\le n \\le 1000, 1 \\le k \\le 100$) -- the number of rectangles in the case and the required number of points.\n\nThe next $n$ lines contain the descriptions of the rectangles. The $i$-th line contains two integers $a_i$ and $b_i$ ($1 \\le a_i, b_i \\le 100$) -- the width and height of the $i$-th rectangle.\n\nIt is guaranteed that the sum of the values of $n$ across all test cases does not exceed $1000$.\n\n### Output\n\nFor each test case, output a single integer -- the minimum number of operations required to score at least $k$ points. If it is impossible to score at least $k$ points, output -1.\n\n### Example\n\n#### Input #1\n\n```\n\n7\n\n1 4\n\n6 3\n\n1 5\n\n4 4\n\n5 10\n\n1 1\n\n1 1\n\n1 1\n\n1 1\n\n1 1\n\n2 100\n\n1 2\n\n5 6\n\n3 11\n\n2 2\n\n3 3\n\n4 4\n\n3 25\n\n9 2\n\n4 3\n\n8 10\n\n4 18\n\n5 4\n\n8 5\n\n8 3\n\n6 2\n\n```\n\n#### Output #1\n\n```\n12\n14\n5\n-1\n17\n80\n35\n```",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2000f/lcbpro-2000f.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 916,
    "total_output_tokens": 1063,
    "trial_started_at": "2025-09-06T01:27:23.727183+00:00",
    "trial_ended_at": "2025-09-06T01:28:14.479237+00:00",
    "agent_started_at": "2025-09-06T01:27:33.626395+00:00",
    "agent_ended_at": "2025-09-06T01:27:50.072038+00:00",
    "test_started_at": "2025-09-06T01:27:54.193272+00:00",
    "test_ended_at": "2025-09-06T01:27:58.166418+00:00"
}