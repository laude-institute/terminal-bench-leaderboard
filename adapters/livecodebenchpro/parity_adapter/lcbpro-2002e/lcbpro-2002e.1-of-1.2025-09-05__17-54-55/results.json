{
    "id": "13429b27-fed3-4836-952a-0b6d58a4518e",
    "trial_name": "lcbpro-2002e.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2002e",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2002E)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nGiven an array of integers $s_1, s_2, \\ldots, s_l$, every second, cosmic rays will cause all $s_i$ such that $i=1$ or $s_i\\neq s_{i-1}$ to be deleted simultaneously, and the remaining parts will be concatenated together in order to form the new array $s_1, s_2, \\ldots, s_{l'}$.\n\nDefine the strength of an array as the number of seconds it takes to become empty.\n\nYou are given an array of integers compressed in the form of $n$ pairs that describe the array left to right. Each pair $(a_i,b_i)$ represents $a_i$ copies of $b_i$, i.e. $\\underbrace{b_i,b_i,\\cdots,b_i}_{a_i\\textrm{ times}}$.\n\nFor each $i=1,2,\\dots,n$, please find the strength of the sequence described by the first $i$ pairs.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1\\le t\\le10^4$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1\\le n\\le3\\cdot10^5$) -- the length of sequence $a$.\n\nThe next $n$ lines contain two integers each $a_i$, $b_i$ ($1\\le a_i\\le10^9,0\\le b_i\\le n$) -- the pairs which describe the sequence.\n\nIt is guaranteed that the sum of all $n$ does not exceed $3\\cdot10^5$.\n\nIt is guaranteed that for all $1\\le i<n$, $b_i\\neq b_{i+1}$ holds.\n\n### Output\n\nFor each test case, print one line containing $n$ integers -- the answer for each prefix of pairs.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n4\n\n2 0\n\n1 1\n\n3 0\n\n5 1\n\n6\n\n4 6\n\n1 3\n\n4 6\n\n4 0\n\n7 6\n\n6 3\n\n7\n\n9 0\n\n7 1\n\n5 0\n\n7 1\n\n9 0\n\n1 1\n\n2 0\n\n10\n\n10 7\n\n4 9\n\n2 2\n\n7 9\n\n2 8\n\n8 5\n\n11 7\n\n15 5\n\n12 7\n\n4 0\n\n```\n\n#### Output #1\n\n```\n2 2 4 5\n4 4 7 7 10 10\n9 9 9 9 9 9 10\n10 10 10 10 10 10 12 15 15 15\n```\n\n### Note\n\nIn the first test case, for the prefix of length $4$, the changes will be $[0,0,1,0,0,0,1,1,1,1,1]\\rightarrow[0,0,0,1,1,1,1]\\rightarrow[0,0,1,1,1]\\rightarrow[0,1,1]\\rightarrow[1]\\rightarrow[]$, so the array becomes empty after $5$ seconds.\n\nIn the second test case, for the prefix of length $4$, the changes will be $[6,6,6,6,3,6,6,6,6,0,0,0,0]\\rightarrow[6,6,6,6,6,6,0,0,0]\\rightarrow[6,6,6,6,6,0,0]\\rightarrow[6,6,6,6,0]\\rightarrow[6,6,6]\\rightarrow[6,6]\\rightarrow[6]\\rightarrow[]$, so the array becomes empty after $7$ seconds.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2002e/lcbpro-2002e.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1242,
    "total_output_tokens": 642,
    "trial_started_at": "2025-09-06T00:56:54.388572+00:00",
    "trial_ended_at": "2025-09-06T00:57:43.607812+00:00",
    "agent_started_at": "2025-09-06T00:57:15.807150+00:00",
    "agent_ended_at": "2025-09-06T00:57:24.467021+00:00",
    "test_started_at": "2025-09-06T00:57:26.468419+00:00",
    "test_ended_at": "2025-09-06T00:57:29.434070+00:00"
}