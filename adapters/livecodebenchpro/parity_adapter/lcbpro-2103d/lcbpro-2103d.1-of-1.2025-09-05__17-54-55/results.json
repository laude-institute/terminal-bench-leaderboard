{
    "id": "a0123098-43a3-4c00-839d-1fcd331e163d",
    "trial_name": "lcbpro-2103d.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2103d",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2103D)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nAn element $b_i$ ($1\\le i\\le m$) in an array $b_1, b_2, \\ldots, b_m$ is a local minimum if at least one of the following holds:\n\n- $2\\le i\\le m - 1$ and $b_i < b_{i - 1}$ and $b_i < b_{i + 1}$, or\n- $i = 1$ and $b_1 < b_2$, or\n- $i = m$ and $b_m < b_{m - 1}$.\n\nSimilarly, an element $b_i$ ($1\\le i\\le m$) in an array $b_1, b_2, \\ldots, b_m$ is a local maximum if at least one of the following holds:\n\n- $2\\le i\\le m - 1$ and $b_i > b_{i - 1}$ and $b_i > b_{i + 1}$, or\n- $i = 1$ and $b_1 > b_2$, or\n- $i = m$ and $b_m > b_{m - 1}$.\n\nNote that local minima and maxima are not defined for arrays with only one element.\n\nThere is a hidden permutation$^{\\text{∗}}$ $p$ of length $n$. The following two operations are applied to permutation $p$ alternately, starting from operation 1, until there is only one element left in $p$:\n\n- Operation 1 -- remove all elements of $p$ which are not local minima.\n- Operation 2 -- remove all elements of $p$ which are not local maxima.\n\nMore specifically, operation 1 is applied during every odd iteration, and operation 2 is applied during every even iteration, until there is only one element left in $p$.\n\nFor each index $i$ ($1\\le i\\le n$), let $a_i$ be the iteration number that element $p_i$ is removed, or $-1$ if it was never removed.\n\nIt can be proven that there will be only one element left in $p$ after at most $\\lceil \\log_2 n\\rceil$ iterations (in other words, $a_i \\le \\lceil \\log_2 n\\rceil$).\n\nYou are given the array $a_1, a_2, \\ldots, a_n$. Your task is to construct any permutation $p$ of $n$ elements that satisfies array $a$.\n\n$^{\\text{∗}}$A permutation of length $n$ is an array consisting of $n$ distinct integers from $1$ to $n$ in arbitrary order. For example, $[2,3,1,5,4]$ is a permutation, but $[1,2,2]$ is not a permutation ($2$ appears twice in the array), and $[1,3,4]$ is also not a permutation ($n=3$ but there is $4$ in the array).\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($2 \\le n \\le 2 \\cdot 10^5$) -- the number of elements in permutation $p$.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\le a_i \\le \\lceil\\log_2 n\\rceil$ or $a_i = -1$) -- the iteration number that element $p_i$ is removed.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\nIt is guaranteed that there exists at least one permutation $p$ that satisfies array $a$.\n\n### Output\n\nFor each test case, output $n$ integers representing the elements of the permutation satisfying array $a$.\n\nIf there are multiple solutions, you may output any of them.\n\n### Example\n\n#### Input #1\n\n```\n\n7\n\n3\n\n1 1 -1\n\n5\n\n1 -1 1 2 1\n\n8\n\n3 1 2 1 -1 1 1 2\n\n7\n\n1 1 1 -1 1 1 1\n\n5\n\n1 1 1 1 -1\n\n5\n\n-1 1 1 1 1\n\n5\n\n-1 1 2 1 2\n\n```\n\n#### Output #1\n\n```\n3 2 1\n4 3 5 1 2\n6 7 2 4 3 8 5 1\n6 5 2 1 3 4 7\n5 4 3 2 1\n1 2 3 4 5\n4 5 2 3 1```\n\n### Note\n\nIn the first test case, operations will be applied to permutation $[3, 2, 1]$ as follows:\n\n1. The only local minimum in $[3, 2, 1]$ is $1$. Hence, elements $3$ and $2$ are removed. There is only one remaining element; hence the process terminates.\n\nThis satisfies array $a = [1, 1, -1]$ as both $p_1$ and $p_2$ were removed on iteration number $1$, while $p_3$ was not removed.\n\nIn the second test case, operations will be applied to permutation $p = [4, 3, 5, 1, 2]$ as follows:\n\n1. The local minima in $[4, 3, 5, 1, 2]$ are $3$ and $1$. Hence, elements $4$, $5$, and $2$ are removed.\n2. The only local maximum in $[3, 1]$ is $3$. Hence, element $1$ is removed. There is only one remaining element; hence the process terminates.\n\nThis satisfies array $a = [1, -1, 1, 2, 1]$ as elements $p_1 = 4$, $p_3 = 5$, and $p_5 = 2$ were removed on iteration $1$, element $p_4 = 1$ was removed on iteration $2$, and element $p_2 = 3$ was not removed.\n\nIn the third test case, operations will be applied on permutation $[6, 7, 2, 4, 3, 8, 5, 1]$ as follows:\n\n1. The local minima in $[6, 7, 2, 4, 3, 8, 5, 1]$ are $6$, $2$, $3$, and $1$. Hence, elements $7$, $4$, $8$, and $5$ are removed.\n2. The local maxima in $[6, 2, 3, 1]$ are $6$ and $3$. Hence, elements $2$ and $1$ are removed.\n3. The only local minimum in $[6, 3]$ is $3$. Hence, element $6$ is removed. There is only one remaining element; hence the process terminates.\n\nIn the fourth test case, one permutation satisfying the constraints is \\[$6$, $5$, $2$, $1$, $3$, $4$, $7$\\]. $1$ is the only local minimum, so only it will stay after the first iteration. Note that there are other valid permutations; for example, \\[$6$, $4$, $3$, $1$, $2$, $5$, $7$\\] would also be considered correct.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2103d/lcbpro-2103d.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 2106,
    "total_output_tokens": 605,
    "trial_started_at": "2025-09-06T01:44:14.269785+00:00",
    "trial_ended_at": "2025-09-06T01:45:14.950099+00:00",
    "agent_started_at": "2025-09-06T01:44:36.148556+00:00",
    "agent_ended_at": "2025-09-06T01:44:45.273336+00:00",
    "test_started_at": "2025-09-06T01:44:49.167370+00:00",
    "test_ended_at": "2025-09-06T01:44:54.132382+00:00"
}