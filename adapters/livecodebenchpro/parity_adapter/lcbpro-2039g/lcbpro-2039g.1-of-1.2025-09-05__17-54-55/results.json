{
    "id": "b7a0232e-306e-4ef0-83cb-5e44fdf0ffd7",
    "trial_name": "lcbpro-2039g.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2039g",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2039G)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nShohag has a tree with $n$ nodes.\n\nPebae has an integer $m$. She wants to assign each node a value -- an integer from $1$ to $m$. So she asks Shohag to count the number, modulo $998\\,244\\,353$, of assignments such that following conditions are satisfied:\n\n- For each pair $1 \\le u \\lt v \\le n$, the [least common multiple (LCM)](https://en.wikipedia.org/wiki/Least_common_multiple) of the values of the nodes in the unique simple path from $u$ to $v$ is not divisible by the number of nodes in the path.\n- The [greatest common divisor (GCD)](https://en.wikipedia.org/wiki/Greatest_common_divisor) of the values of all nodes from $1$ to $n$ is $1$.\n\nBut this problem is too hard for Shohag to solve. As Shohag loves Pebae, he has to solve the problem. Please save Shohag!\n\n### Input\n\nThe first line contains two space-separated integers $n$ and $m$ ($2 \\le n \\le 10^6$, $1 \\le m \\le 10^{9}$).\n\nEach of the next $n - 1$ lines contains two integers $u$ and $v$ ($1 \\le u, v \\le n$) indicating there is an edge between vertices $u$ and $v$. It is guaranteed that the given edges form a tree.\n\n### Output\n\nPrint a single integer -- the number of valid ways to assign each vertex a value, modulo $998\\,244\\,353$.\n\n### Examples\n\n#### Input #1\n\n```\n\n6 6\n\n1 2\n\n2 3\n\n3 4\n\n4 5\n\n3 6\n\n```\n\n#### Output #1\n\n```\n2\n```\n\n#### Input #2\n\n```\n\n2 5\n\n1 2\n\n```\n\n#### Output #2\n\n```\n7\n```\n\n#### Input #3\n\n```\n\n12 69\n\n3 5\n\n1 4\n\n2 3\n\n4 5\n\n5 6\n\n8 9\n\n7 3\n\n4 8\n\n9 10\n\n1 11\n\n12 1\n\n```\n\n#### Output #3\n\n```\n444144548\n```\n\n### Note\n\nIn the first test case, the valid assignments are $[1, 1, 1, 1, 1, 1]$ and $[1, 1, 1, 1, 1, 5]$.\n\nIn the second test case, the valid assignments are $[1, 1]$, $[1, 3]$, $[1, 5]$, $[3, 1]$, $[3, 5]$, $[5, 1]$ and $[5, 3]$.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2039g/lcbpro-2039g.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1017,
    "total_output_tokens": 419,
    "trial_started_at": "2025-09-06T01:15:34.141548+00:00",
    "trial_ended_at": "2025-09-06T01:16:26.409455+00:00",
    "agent_started_at": "2025-09-06T01:16:00.199597+00:00",
    "agent_ended_at": "2025-09-06T01:16:06.998716+00:00",
    "test_started_at": "2025-09-06T01:16:09.791917+00:00",
    "test_ended_at": "2025-09-06T01:16:12.637546+00:00"
}