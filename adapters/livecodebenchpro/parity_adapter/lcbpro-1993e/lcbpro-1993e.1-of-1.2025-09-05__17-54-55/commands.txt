['asciinema rec --stdin /logs/agent.cast', 'Enter']
['clear', 'Enter']
["echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7CgovLyBQcm9ibGVtOiBtaW5pbWl6ZSBiZWF1dHkgYWZ0ZXIgYXBwbHlpbmcgb3BlcmF0aW9ucwoKLy8gRXhwbGFuYXRpb246Ci8vIFdlIGNhbiBwZXJmb3JtIHJvdyBvciBjb2x1bW4gb3BlcmF0aW9uczoKLy8gLSBSb3cgb3BlcmF0aW9uOiBzZXQgcm93IGkgdG8gWE9SIG9mIGVhY2ggY29sdW1uLgovLyAtIENvbHVtbiBvcGVyYXRpb246IHNldCBjb2x1bW4gaiB0byBYT1Igb2YgZWFjaCByb3cuCi8vCi8vIFRoZSBvcGVyYXRpb25zIGNhbiBiZSBhcHBsaWVkIGluIGFueSBvcmRlciwgYW55IG51bWJlciBvZiB0aW1lcy4KLy8gR29hbDogbWluaW1pemUgc3VtIG9mIGFic29sdXRlIGRpZmZlcmVuY2VzIGJldHdlZW4gYWRqYWNlbnQgY2VsbHMuCgovLyBLZXkgb2JzZXJ2YXRpb25zOgovLyAtIFRoZSBvcGVyYXRpb25zIGRlZmluZSBhIHN5c3RlbSB3aGVyZSB0aGUgbWF0cml4IHZhbHVlcyBhcmUgY29uc3RyYWluZWQuCi8vIC0gT3BlcmF0aW9ucyBhcmUgaWRlbXBvdGVudCBhbmQgY2FuIGJlIGNvbWJpbmVkLgovLyAtIEFmdGVyIHRoZSBvcGVyYXRpb25zLCBlYWNoIGNlbGwgYVtpXVtqXSA9IHJbaV0gWE9SIGNbal0gZm9yIHNvbWUgYXJyYXlzIHIgYW5kIGMuCi8vICAgKEJlY2F1c2UgYXBwbHlpbmcgcm93IG9wZXJhdGlvbiBzZXRzIHJvdyBpIHRvIGNbal0sIGFuZCBjb2x1bW4gb3BlcmF0aW9uIHNldHMgY29sdW1uIGogdG8gcltpXS4pCi8vCi8vIFNvIGZpbmFsIG1hdHJpeCBNW2ldW2pdID0gcltpXSBYT1IgY1tqXS4KLy8gV2Ugd2FudCB0byBmaW5kIGFycmF5cyByIGFuZCBjIG1pbmltaXppbmcgdGhlIGJlYXV0eToKLy8gc3VtIG9mIHxNW3gseV0gLSBNW3IsY118IG92ZXIgYWRqYWNlbnQgY2VsbHMuCgovLyBTaW5jZSBYT1IgaXMgdXNlZCwgYW5kIHZhbHVlcyBjYW4gYmUgdXAgdG8gMl4yMCwgd2UgY2FuIHRyeSB0byBmaXggclswXT0wIChvciBhbnkgdmFsdWUpIGFuZCBkZXRlcm1pbmUgY1tqXSA9IE1bMF1bal0sIHRoZW4gcltpXSA9IE1baV1bMF0gWE9SIGNbMF0uCi8vIEJ1dCB3ZSBtdXN0IGVuc3VyZSBjb25zaXN0ZW5jeSB3aXRoIGluaXRpYWwgbWF0cml4IGFuZCBvcGVyYXRpb25zLgoKLy8gV2Ugd2lsbCBicnV0ZSBmb3JjZSBvdmVyIHJbMF0gaW4gezAsMX0gKG9yIGp1c3QgZml4IHJbMF09MCksIHRoZW4gY29tcHV0ZSBjW2pdPWFbMF1bal0gWE9SIHJbMF0sIGFuZCByW2ldPWFbaV1bMF0gWE9SIGNbMF0uCi8vIFRoZW4gcmVjb25zdHJ1Y3QgbWF0cml4IGFuZCBjb21wdXRlIGJlYXV0eS4KLy8gQ2hvb3NlIHRoZSBtaW5pbWFsIGJlYXV0eSBiZXR3ZWVuIHBvc3NpYmxlIGFzc2lnbm1lbnRzLgoKLy8gU2luY2UgdGhlIHByb2JsZW0gaXMgZnJvbSBDb2RlZm9yY2VzIEVkdSwgYXBwcm9hY2ggaXMgd2VsbC1rbm93bi4KCmludCB0OwoKaW50IG1haW4oKSB7CiAgICBpb3M6OnN5bmNfd2l0aF9zdGRpbyhmYWxzZSk7CiAgICBjaW4udGllKG51bGxwdHIpOwoKICAgIGNpbiA+PiB0OwogICAgd2hpbGUgKHQtLSkgewogICAgICAgIGludCBuLCBtOwogICAgICAgIGNpbiA+PiBuID4+IG07CiAgICAgICAgdmVjdG9yPHZlY3RvcjxpbnQ+PiBhKG4sIHZlY3RvcjxpbnQ+KG0pKTsKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG47IGkrKykgewogICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IG07IGorKykgewogICAgICAgICAgICAgICAgY2luID4+IGFbaV1bal07CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIC8vIFdlIHRyeSByWzBdID0gMCBhbmQgclswXSA9IDEgKG9yIGJldHRlciwgdHJ5IHJbMF0gPSAwIG9ubHkgc2luY2UgWE9SIHNwYWNlIGlzIGxhcmdlKQogICAgICAgIC8vIEFjdHVhbGx5LCByWzBdIGNhbiBiZSBhbnkgaW50ZWdlciwgYnV0IGxldCdzIGZpeCByWzBdID0gMCBmb3Igc2ltcGxpY2l0eQogICAgICAgIC8vIFRoZW4gY1tqXSA9IGFbMF1bal0gWE9SIHJbMF0gPSBhWzBdW2pdCiAgICAgICAgLy8gcltpXSA9IGFbaV1bMF0gWE9SIGNbMF0gPSBhW2ldWzBdIFhPUiBhWzBdWzBdCgogICAgICAgIC8vIENvbnN0cnVjdCBtYXRyaXggTVtpXVtqXSA9IHJbaV0gWE9SIGNbal0KICAgICAgICB2ZWN0b3I8aW50PiBjKG0pLCByKG4pOwogICAgICAgIHJbMF0gPSAwOwogICAgICAgIGZvciAoaW50IGogPSAwOyBqIDwgbTsgaisrKSB7CiAgICAgICAgICAgIGNbal0gPSBhWzBdW2pdIF4gclswXTsKICAgICAgICB9CiAgICAgICAgZm9yIChpbnQgaSA9IDA7IGkgPCBuOyBpKyspIHsKICAgICAgICAgICAgcltpXSA9IGFbaV1bMF0gXiBjWzBdOwogICAgICAgIH0KCiAgICAgICAgLy8gUmVjb21wdXRlIG1hdHJpeCBNCiAgICAgICAgdmVjdG9yPHZlY3RvcjxpbnQ+PiBNKG4sIHZlY3RvcjxpbnQ+KG0pKTsKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG47IGkrKykgewogICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IG07IGorKykgewogICAgICAgICAgICAgICAgTVtpXVtqXSA9IHJbaV0gXiBjW2pdOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyBDb21wdXRlIGJlYXV0eSA9IHN1bSBvZiBhYnMgZGlmZmVyZW5jZXMgb2YgYWRqYWNlbnQgY2VsbHMKICAgICAgICBsb25nIGxvbmcgYmVhdXR5ID0gMDsKICAgICAgICBmb3IgKGludCBpID0gMDsgaSA8IG47IGkrKykgewogICAgICAgICAgICBmb3IgKGludCBqID0gMDsgaiA8IG07IGorKykgewogICAgICAgICAgICAgICAgaWYgKGkgKyAxIDwgbikgewogICAgICAgICAgICAgICAgICAgIGJlYXV0eSArPSBhYnMoTVtpXVtqXSAtIE1baSsxXVtqXSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoaiArIDEgPCBtKSB7CiAgICAgICAgICAgICAgICAgICAgYmVhdXR5ICs9IGFicyhNW2ldW2pdIC0gTVtpXVtqKzFdKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgY291dCA8PCBiZWF1dHkgPDwgIlxuIjsKICAgIH0KCiAgICByZXR1cm4gMDsKfQo=' | base64 -d > /app/main.cpp", 'Enter']
['asciinema rec --stdin /logs/tests.cast', 'Enter']
['clear', 'Enter']
['bash ', '/tests/run-tests.sh', 'Enter']
['C-d']
['C-d']
