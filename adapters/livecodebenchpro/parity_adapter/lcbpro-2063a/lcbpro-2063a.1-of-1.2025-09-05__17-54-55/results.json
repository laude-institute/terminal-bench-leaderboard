{
    "id": "ec48b371-ad15-4009-b4a6-9b13968c5acb",
    "trial_name": "lcbpro-2063a.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2063a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2063A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nToday, Little John used all his savings to buy a segment. He wants to build a house on this segment.\n\nA segment of positive integers $[l,r]$ is called coprime if $l$ and $r$ are coprime$^{\\text{∗}}$.\n\nA coprime segment $[l,r]$ is called minimal coprime if it does not contain$^{\\text{†}}$ any coprime segment not equal to itself. To better understand this statement, you can refer to the notes.\n\nGiven $[l,r]$, a segment of positive integers, find the number of minimal coprime segments contained in $[l,r]$.\n\n$^{\\text{∗}}$Two integers $a$ and $b$ are coprime if they share only one positive common divisor. For example, the numbers $2$ and $4$ are not coprime because they are both divided by $2$ and $1$, but the numbers $7$ and $9$ are coprime because their only positive common divisor is $1$.\n\n$^{\\text{†}}$A segment $[l',r']$ is contained in the segment $[l,r]$ if and only if $l \\le l' \\le r' \\le r$.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 100$). The description of the test cases follows.\n\nThe only line of each test case consists of two integers $l$ and $r$ ($1 \\le l \\le r \\le 10^9$).\n\n### Output\n\nFor each test case, output the number of minimal coprime segments contained in $[l,r]$, on a separate line.\n\n### Example\n\n#### Input #1\n\n```\n\n6\n\n1 2\n\n1 10\n\n49 49\n\n69 420\n\n1 1\n\n9982 44353\n\n```\n\n#### Output #1\n\n```\n1\n9\n0\n351\n1\n34371\n```\n\n### Note\n\nOn the first test case, the given segment is $[1,2]$. The segments contained in $[1,2]$ are as follows.\n\n- $[1,1]$: This segment is coprime, since the numbers $1$ and $1$ are coprime, and this segment does not contain any other segment inside. Thus, $[1,1]$ is minimal coprime.\n- $[1,2]$: This segment is coprime. However, as it contains $[1,1]$, which is also coprime, $[1,2]$ is not minimal coprime.\n- $[2,2]$: This segment is not coprime because $2$ and $2$ share $2$ positive common divisors: $1$ and $2$.\n\nTherefore, the segment $[1,2]$ contains $1$ minimal coprime segment.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2063a/lcbpro-2063a.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1054,
    "total_output_tokens": 474,
    "trial_started_at": "2025-09-06T01:26:45.700286+00:00",
    "trial_ended_at": "2025-09-06T01:27:34.522435+00:00",
    "agent_started_at": "2025-09-06T01:26:59.534075+00:00",
    "agent_ended_at": "2025-09-06T01:27:07.088013+00:00",
    "test_started_at": "2025-09-06T01:27:10.830993+00:00",
    "test_ended_at": "2025-09-06T01:27:15.950266+00:00"
}