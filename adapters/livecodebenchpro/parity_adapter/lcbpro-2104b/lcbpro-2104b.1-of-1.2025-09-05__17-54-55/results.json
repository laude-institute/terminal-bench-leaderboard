{
    "id": "c868cc46-f259-4ee8-982b-45efdd7b5fbe",
    "trial_name": "lcbpro-2104b.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2104b",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2104B)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given an array $a$ consisting of $n$ integers.\n\nFor every integer $k$ from $1$ to $n$, you have to do the following:\n\n1. choose an arbitrary element of $a$ and move it to the right end of the array (you can choose the last element, then the array won't change);\n2. print the sum of $k$ last elements of $a$;\n3. move the element you've chosen on the first step to its original position (restore the original array $a$).\n\nFor every $k$, you choose the element which you move so that the value you print is the maximum possible.\n\nCalculate the value you print for every $k$.\n\n### Input\n\nThe first line contains one integer $t$ ($1 \\le t \\le 10^4$) -- the number of test cases.\n\nEach test case consists of two lines:\n\n- the first line contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$);\n- the second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$).\n\nAdditional constraint on the input: the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$.\n\n### Output\n\nFor each test case, print $n$ integers. The $i$-th of these integers should be equal to the maximum value you can print if $k=i$.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n7\n\n13 5 10 14 8 15 13\n\n6\n\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n\n1\n\n42\n\n2\n\n7 5\n\n```\n\n#### Output #1\n\n```\n15 28 42 50 63 73 78\n1000000000 2000000000 3000000000 4000000000 5000000000 6000000000\n42\n7 12\n```\n\n### Note\n\nLet's consider the first test case from the statement:\n\n- when $k = 1$, you can move the $6$-th element to the end, the array becomes $[13, 5, 10, 14, 8, 13, 15]$, and the value you print is $15$;\n- when $k = 2$, you can move the $6$-th element to the end, the array becomes $[13, 5, 10, 14, 8, 13, 15]$, and the value you print is $13 + 15 = 28$;\n- when $k = 3$, you can move the $4$-th element to the end, the array becomes $[13, 5, 10, 8, 15, 13, 14]$, and the value you print is $15 + 13 + 14 = 42$;\n- when $k = 4$, you can move the $5$-th element to the end, the array becomes $[13, 5, 10, 14, 15, 13, 8]$, and the value you print is $14 + 15 + 13 + 8 = 50$;\n- when $k = 5$, you can move the $1$-st element to the end, the array becomes $[5, 10, 14, 8, 15, 13, 13]$, and the value you print is $14 + 8 + 15 + 13 + 13 = 63$;\n- when $k = 6$, you can move the $1$-st element to the end, the array becomes $[5, 10, 14, 8, 15, 13, 13]$, and the value you print is $10 + 14 + 8 + 15 + 13 + 13 = 73$;\n- when $k = 7$, you can move the $6$-th element to the end, the array becomes $[13, 5, 10, 14, 8, 13, 15]$, and the value you print is $13 + 5 + 10 + 14 + 8 + 13 + 15 = 78$.",
    "is_resolved": true,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "passed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2104b/lcbpro-2104b.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1359,
    "total_output_tokens": 812,
    "trial_started_at": "2025-09-06T01:44:10.118464+00:00",
    "trial_ended_at": "2025-09-06T01:45:12.071461+00:00",
    "agent_started_at": "2025-09-06T01:44:30.563549+00:00",
    "agent_ended_at": "2025-09-06T01:44:42.134352+00:00",
    "test_started_at": "2025-09-06T01:44:46.430942+00:00",
    "test_ended_at": "2025-09-06T01:44:51.815227+00:00"
}