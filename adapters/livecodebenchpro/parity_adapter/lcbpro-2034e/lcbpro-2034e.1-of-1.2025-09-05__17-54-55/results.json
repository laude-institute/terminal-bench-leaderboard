{
    "id": "d7f738f1-95bd-466f-a8f9-de6bdc1b2704",
    "trial_name": "lcbpro-2034e.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2034e",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2034E)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nRayan wants to present a gift to Reyhaneh to win her heart. However, Reyhaneh is particular and will only accept a k-harmonic set of permutations.\n\nWe define a k-harmonic set of permutations as a set of $k$ pairwise distinct permutations $p_1, p_2, \\ldots, p_k$ of size $n$ such that for every pair of indices $i$ and $j$ (where $1 \\leq i, j \\leq n$), the following condition holds:\n\n\n\n$$ p_1[i] + p_2[i] + \\ldots + p_k[i] = p_1[j] + p_2[j] + \\ldots + p_k[j] $$\n\nYour task is to help Rayan by either providing a valid k-harmonic set of permutations for given values of $n$ and $k$ or by determining that such a set does not exist.\n\nWe call a sequence of length $n$ a permutation if it contains every integer from $1$ to $n$ exactly once.\n\n### Input\n\nThe first line contains a single integer $t$ ($1 \\leq t \\leq 1000$), the number of test cases.\n\nEach test case consists of two integers $n$ and $k$ ($1 \\leq n, k \\leq 10^5$). The sum of $n \\cdot k$ over all test cases does not exceed $5 \\cdot 10^5$.\n\n### Output\n\nFor each test case, if a k-harmonic set of permutations exists, print YES on the first line. Then, print $k$ lines, each containing a distinct permutation of the integers from $1$ to $n$.\n\nIf no such set exists, print NO on the first line.\n\nYou can output \"YES\" and \"NO\" in any case (for example, strings \"yEs\", \"yes\", and \"Yes\" will be recognized as a positive response).\n\nIf multiple answers are possible, you can output any of them.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n3 3\n\n4 2\n\n5 1\n\n3 2\n\n```\n\n#### Output #1\n\n```\nYES\n1 2 3\n2 3 1\n3 1 2\nYES\n1 2 3 4\n4 3 2 1\nNO\nYES\n1 2 3\n3 2 1\n```\n\n### Note\n\nIn example 1, we have $p_1 = [1, 2, 3]$, $p_2 = [2, 3, 1]$, and $p_3 = [3, 1, 2]$. It's easy to see that $p_1[1] + p_2[1] + p_3[1] = p_1[2] + p_2[2] + p_3[2] = p_1[3] + p_2[3] + p_3[3] = 6$.\n\nIn example 2, we have $p_1 = [1, 2, 3, 4]$ and $p_2 = [4, 3, 2, 1]$. It's easy to see that $p_1[1] + p_2[1] = p_1[2] + p_2[2] = p_1[3] + p_2[3] = p_1[4] + p_2[4] = 5$.\n\nIn example 3, as there are five distinct elements in $p_1$, it's obvious that the answer is \"No\".",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2034e/lcbpro-2034e.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1200,
    "total_output_tokens": 674,
    "trial_started_at": "2025-09-06T01:40:52.508295+00:00",
    "trial_ended_at": "2025-09-06T01:41:40.699614+00:00",
    "agent_started_at": "2025-09-06T01:41:06.478709+00:00",
    "agent_ended_at": "2025-09-06T01:41:21.387689+00:00",
    "test_started_at": "2025-09-06T01:41:22.965399+00:00",
    "test_ended_at": "2025-09-06T01:41:25.388414+00:00"
}