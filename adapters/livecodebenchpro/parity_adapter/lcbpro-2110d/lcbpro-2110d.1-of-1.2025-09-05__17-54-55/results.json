{
    "id": "dfeb649b-3314-4e21-80ed-54530b5e1aa1",
    "trial_name": "lcbpro-2110d.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2110d",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2110D)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nIn 2077, when robots took over the world, they decided to compete in the following game.\n\nThere are $n$ checkpoints, and the $i$-th checkpoint contains $b_i$ batteries. Initially, the Robot starts at the $1$-st checkpoint with no batteries and must reach the $n$-th checkpoint.\n\nThere are a total of $m$ one-way passages between the checkpoints. The $i$-th passage allows movement from point $s_i$ to point $t_i$ ($s_i < t_i$), but not the other way. Additionally, the $i$-th passage can only be used if the robot has at least $w_i$ charged batteries; otherwise, it will run out of power on the way.\n\nWhen the robot arrives at point $v$, it can additionally take any number of batteries from $0$ to $b_v$, inclusive. Moreover, it always carries all previously collected batteries, and at each checkpoint, it recharges all previously collected batteries.\n\nFind the minimum number of batteries that the robot can have at the end of the journey, or report that it is impossible to reach from the first checkpoint to the last.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains two integers $n, m$ ($2 \\leq n \\leq 2 \\cdot 10^5, 0 \\leq m \\leq 3 \\cdot 10^5$) -- the number of checkpoints and the number of passages, respectively.\n\nThe second line contains $n$ numbers $b_i$ ($0 \\leq b_i \\leq 10^9$) -- the number of batteries at the $i$-th checkpoint.\n\nThe next $m$ lines contain three integers $s_i, t_i, w_i$ ($1 \\leq s_i < t_i \\leq n, 1 \\leq w_i \\leq 10^9$) -- the endpoints of the passage and the minimum number of batteries required to pass through it.\n\nIt is guaranteed that the sum of $n$ does not exceed $2 \\cdot 10^5$.\n\nIt is guaranteed that the sum of $m$ does not exceed $3 \\cdot 10^5$.\n\n### Output\n\nFor each test case, output the minimum number of batteries that you can have at the end of the journey, or $-1$ if it is impossible to reach point $n$.\n\n### Example\n\n#### Input #1\n\n```\n\n4\n\n3 3\n\n2 0 0\n\n1 2 1\n\n2 3 1\n\n1 3 2\n\n5 6\n\n2 2 5 0 1\n\n1 2 2\n\n1 3 1\n\n1 4 3\n\n3 5 5\n\n2 4 4\n\n4 5 3\n\n2 0\n\n1 1\n\n4 4\n\n3 10 0 0\n\n1 2 1\n\n1 3 3\n\n2 3 10\n\n3 4 5\n\n```\n\n#### Output #1\n\n```\n1\n4\n-1\n10\n```\n\n### Note\n\nIn the first test case, you need to take $1$ battery at the starting point, then move to point $2$, and then to point $3$.\n\nIn the second test case, you need to take $2$ batteries at the starting point, then move to point $2$, take another $2$ batteries, move to point $4$, and then to point $5$.\n\nIn the third test case, there is no path from point $1$ to point $n$.\n\nIn the fourth test case, you need to take $1$ battery at the starting point, then move to point $2$, take another $9$ batteries, move to point $3$, and then to point $4$.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2110d/lcbpro-2110d.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1270,
    "total_output_tokens": 1023,
    "trial_started_at": "2025-09-06T01:43:21.913410+00:00",
    "trial_ended_at": "2025-09-06T01:44:10.079167+00:00",
    "agent_started_at": "2025-09-06T01:43:34.287305+00:00",
    "agent_ended_at": "2025-09-06T01:43:46.262554+00:00",
    "test_started_at": "2025-09-06T01:43:49.622871+00:00",
    "test_ended_at": "2025-09-06T01:43:54.153927+00:00"
}