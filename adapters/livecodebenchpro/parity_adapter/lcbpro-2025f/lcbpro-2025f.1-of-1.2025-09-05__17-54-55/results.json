{
    "id": "5ef99d31-3d64-4012-9165-81f1344d34ef",
    "trial_name": "lcbpro-2025f.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2025f",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2025F)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nYou are given an array $a$, consisting of $n$ integers (numbered from $1$ to $n$). Initially, they are all zeroes.\n\nYou have to process $q$ queries. The $i$-th query consists of two different integers $x_i$ and $y_i$. During the $i$-th query, you have to choose an integer $p$ (which is either $x_i$ or $y_i$) and an integer $d$ (which is either $1$ or $-1$), and assign $a_p = a_p + d$.\n\nAfter each query, every element of $a$ should be a non-negative integer.\n\nProcess all queries in such a way that the sum of all elements of $a$ after the last query is the minimum possible.\n\n### Input\n\nThe first line contains two integers $n$ and $q$ ($2 \\le n \\le 3 \\cdot 10^5$; $1 \\le q \\le 3 \\cdot 10^5$) -- the number of elements in $a$ and the number of queries, respectively.\n\nThen $q$ lines follow. The $i$-th of these lines contains two integers $x_i$ and $y_i$ ($1 \\le x_i, y_i \\le n$; $x_i \\ne y_i$) -- the description of the $i$-th query.\n\n### Output\n\nFor each query, print a line containing two characters:\n\n- the first character should be x if you choose $p=x_i$, or y if you choose $p=y_i$;\n- the second character should be + if you choose $d=1$, or - if you choose $d=-1$.\n\nIf there are multiple answers, print any of them.\n\n### Examples\n\n#### Input #1\n\n```\n\n3 4\n\n1 2\n\n3 2\n\n3 1\n\n1 2\n\n```\n\n#### Output #1\n\n```\ny+\nx+\nx-\ny-\n```\n\n#### Input #2\n\n```\n\n4 4\n\n1 2\n\n2 3\n\n3 4\n\n3 2\n\n```\n\n#### Output #2\n\n```\ny+\ny+\nx-\ny-\n```\n\n#### Input #3\n\n```\n\n4 2\n\n2 1\n\n4 3\n\n```\n\n#### Output #3\n\n```\ny+\nx+\n```",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2025f/lcbpro-2025f.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 917,
    "total_output_tokens": 387,
    "trial_started_at": "2025-09-06T01:44:21.484494+00:00",
    "trial_ended_at": "2025-09-06T01:45:08.405194+00:00",
    "agent_started_at": "2025-09-06T01:44:35.122300+00:00",
    "agent_ended_at": "2025-09-06T01:44:41.976487+00:00",
    "test_started_at": "2025-09-06T01:44:45.672129+00:00",
    "test_ended_at": "2025-09-06T01:44:51.822583+00:00"
}