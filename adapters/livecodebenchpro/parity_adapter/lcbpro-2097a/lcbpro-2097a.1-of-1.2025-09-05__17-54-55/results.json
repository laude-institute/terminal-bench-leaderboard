{
    "id": "ea416e83-9743-45ad-a8df-0f0e9e059e6c",
    "trial_name": "lcbpro-2097a.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2097a",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2097A)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nThe boarding process for various flights can occur in different ways: either by bus or through a telescopic jet bridge. Every day, exactly one flight is made from St. Petersburg to Minsk, and Vadim decided to demonstrate to the students that he always knows in advance how the boarding will take place.\n\nVadim made a bet with $n$ students, and with the $i$-th student, he made a bet on day $a_i$. Vadim wins the bet if he correctly predicts the boarding process on both day $a_i+1$ and day $a_i+2$.\n\nAlthough Vadim does not know in advance how the boarding will occur, he really wants to win the bet at least with one student and convince him of his predictive abilities. Check if there exists a strategy for Vadim that allows him to guarantee success.\n\n### Input\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 10^5$) -- the number of students Vadim made bets with.\n\nThe second line of each test case contains $n$ integers $a_1, \\ldots, a_n$ ($1 \\le a_i \\le 10^9$) -- the days on which Vadim made bets with the students.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n### Output\n\nFor each test case, output \"Yes\" (without quotes) if Vadim can guarantee convincing at least one student, and \"No\" otherwise.\n\nYou can output the answer in any case (upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive responses.\n\n### Example\n\n#### Input #1\n\n```\n\n5\n\n4\n\n1 1 1 1\n\n3\n\n2 2 2\n\n5\n\n2 4 3 2 4\n\n8\n\n6 3 1 1 5 1 2 6\n\n1\n\n1000000000\n\n```\n\n#### Output #1\n\n```\nYes\nNo\nYes\nNo\nNo\n```\n\n### Note\n\nIn the first test case, Vadim needs to make at least one correct prediction about the boarding process on the second and third days. There are a total of $4$ possible boarding scenarios for these days, so Vadim can give all $4$ students different predictions and guarantee that at least one of them will be correct.\n\nIn the second test case, Vadim only made bets with three students and cannot guarantee that he will provide at least one of them with a correct prediction.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2097a/lcbpro-2097a.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 997,
    "total_output_tokens": 342,
    "trial_started_at": "2025-09-06T01:16:48.290818+00:00",
    "trial_ended_at": "2025-09-06T01:17:26.469665+00:00",
    "agent_started_at": "2025-09-06T01:16:57.827494+00:00",
    "agent_ended_at": "2025-09-06T01:17:03.427869+00:00",
    "test_started_at": "2025-09-06T01:17:06.282274+00:00",
    "test_ended_at": "2025-09-06T01:17:10.982631+00:00"
}