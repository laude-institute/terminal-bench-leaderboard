root@90901b322dde:/app# echo 'I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSBzdGQ7Cgpjb25zdCBpbnQgTUFYTiA9IDQwMDAwNTsKCmludCBuOwppbnQgYVtNQVhOXTsKdmVjdG
9yPGludD4gZ1tNQVhOXTsKCi8vIEVhY2ggdmFsdWUgZnJvbSAxIHRvIG4gYXBwZWFycyBleGFjdGx5IHR3aWNlLiBXZSBzdG9yZSB0aGVpciB2ZXJ0ZXggaW5kaWNlcy4KcGFpcjxpbnQsaW50PiBwb3NbTUFYTl
07CgovLyBFdWxlciBUb3VyIGFycmF5cwppbnQgdGltZXIgPSAwOwppbnQgdGluW01BWE5dLCB0b3V0W01BWE5dOwppbnQgZGVwdGhbTUFYTl07CmludCB1cFtNQVhOXVsyMF07CgppbnQgTE9HID0gMjA7Cgp2b2
lkIGRmcyhpbnQgdiwgaW50IHApIHsKICAgIHRpblt2XSA9ICsrdGltZXI7CiAgICB1cFt2XVswXSA9IHA7CiAgICBmb3IgKGludCBpID0gMTsgaSA8IExPRzsgaSsrKSB7CiAgICAgICAgdXBbdl1baV0gPSB1cF
t1cFt2XVtpLTFdXVtpLTFdOwogICAgfQogICAgZm9yIChhdXRvIHRvIDogZ1t2XSkgewogICAgICAgIGlmICh0byAhPSBwKSB7CiAgICAgICAgICAgIGRlcHRoW3RvXSA9IGRlcHRoW3ZdICsgMTsKICAgICAgIC
AgICAgZGZzKHRvLCB2KTsKICAgICAgICB9CiAgICB9CiAgICB0b3V0W3ZdID0gdGltZXI7Cn0KCmJvb2wgaXNfYW5jZXN0b3IoaW50IHUsIGludCB2KSB7CiAgICByZXR1cm4gdGluW3VdIDw9IHRpblt2XSAmJi
B0b3V0W3ZdIDw9IHRvdXRbdV07Cn0KCmludCBsY2EoaW50IHUsIGludCB2KSB7CiAgICBpZiAoaXNfYW5jZXN0b3IodSx2KSkgcmV0dXJuIHU7CiAgICBpZiAoaXNfYW5jZXN0b3Iodix1KSkgcmV0dXJuIHY7Ci
AgICBmb3IgKGludCBpID0gTE9HLTE7IGkgPj0gMDsgaS0tKSB7CiAgICAgICAgaWYgKCFpc19hbmNlc3Rvcih1cFt1XVtpXSwgdikpIHsKICAgICAgICAgICAgdSA9IHVwW3VdW2ldOwogICAgICAgIH0KICAgIH
0KICAgIHJldHVybiB1cFt1XVswXTsKfQoKLy8gRm9yIHRoZSB2aXJ0dWFsIHRyZWU6Ci8vIFdlIHdpbGwgYnVpbGQgYSB2aXJ0dWFsIHRyZWUgb24gdGhlIHNldCBvZiBub2RlcyB3aGljaCBhcmUgdGhlIHBhaX
JzIG9mIGVhY2ggdmFsdWUgcGx1cyB0aGVpciBMQ0FzLgovLyBUaGVuIHdlIGRvIERQIG9uIHRoZSB2aXJ0dWFsIHRyZWUgdG8gZmluZCBtaW5pbWFsIGNvc3Qgc3Vic2V0IGNvdmVyaW5nIGFsbCB2YWx1ZXMuCg
ovLyBXZSdsbCB1c2UgYSBzdGFjayB0byBidWlsZCB0aGUgdmlydHVhbCB0cmVlCnZlY3RvcjxpbnQ+IHZpcnR1YWxfdHJlZVtNQVhOXTsKCi8vIE1hcmsgaWYgbm9kZSBpcyBvcmlnaW5hbCAob25lIG9mIHRoZS
BjaG9zZW4gcGFpciBub2Rlcykgb3Igbm90CmJvb2wgaXNfb3JpZ2luYWxbTUFYTl07CgovLyBEUCBhcnJheXMKLy8gZHBbdl1bMF0gPSBtaW5pbWFsIGNvc3Qgc3VidHJlZSByb290ZWQgYXQgdiB0aGF0IGNvdm
VycyBhbGwgdmFsdWVzIGluIHN1YnRyZWUgaWYgdiBpcyBOT1QgY2hvc2VuCi8vIGRwW3ZdWzFdID0gbWluaW1hbCBjb3N0IHN1YnRyZWUgcm9vdGVkIGF0IHYgdGhhdCBjb3ZlcnMgYWxsIHZhbHVlcyBpbiBzdW
J0cmVlIGlmIHYgSVMgY2hvc2VuCi8vIEZvciBub2RlcyB0aGF0IGNvcnJlc3BvbmQgdG8gb3JpZ2luYWwgdmVydGljZXMsIHRoZXkgaGF2ZSBhIHZhbHVlIGFuZCBjb3N0Ci8vIEZvciBMQ0FzIG5vdCBpbiBvcm
lnaW5hbCwgdGhleSBoYXZlIG5vIHZhbHVlLCBjb3N0IGlzIDAKCi8vIEFsc28gbmVlZCB0byBrbm93IHdoaWNoIHZhbHVlcyBhcmUgY292ZXJlZCBpbiBzdWJ0cmVlIGZvciBjb3JyZWN0bmVzcywgYnV0IHdlIG
NhbiByZWx5IG9uIHByb2JsZW0gc3RydWN0dXJlOgovLyBTaW5jZSBlYWNoIHZhbHVlIGFwcGVhcnMgdHdpY2UsIGFuZCB3ZSBpbnNlcnQgYm90aCB2ZXJ0aWNlcyBmb3IgYSB2YWx1ZSwgdGhlIHN1YnRyZWUgb2
YgdmlydHVhbCB0cmVlIGNvdmVycyBhbGwgdmFsdWVzCgovLyBXZSdsbCBzdG9yZSB3aGljaCB2YWx1ZXMgYXJlIGNvdmVyZWQgYnkgYSBzdWJ0cmVlIHVzaW5nIGJpdHNldCBvciBzZXRzPyBCdXQgbiB1cCB0by
AyZTUsIHdlIGNhbm5vdCBzdG9yZSBiaXRzZXQuCi8vIEluc3RlYWQsIHdlIHJlbHkgb24gdGhlIHN0cnVjdHVyZToKLy8gRWFjaCBvcmlnaW5hbCBub2RlIGNvdmVycyBleGFjdGx5IG9uZSB2YWx1ZS4KLy8gVG
hlIG1pbmltYWwgc3VidHJlZSB0aGF0IGNvdmVycyBhbGwgdmFsdWVzIHJvb3RlZCBhdCB2IGlzOgovLyBJZiB2IGlzIG9yaWdpbmFsLCBkcFt2XVsxXSA9IGNvc3QodiksIGRwW3ZdWzBdID0gSU5GIChjYW4ndC
Bub3QgY2hvb3NlIGl0IGlmIGl0IGNvdmVycyBhIHZhbHVlKQovLyBJZiB2IGlzIG5vdCBvcmlnaW5hbCwgZHBbdl1bMF0sIGRwW3ZdWzFdIGNvbXB1dGVkIGZyb20gY2hpbGRyZW4uCgovLyBUaGUgcHJvYmxlbS
ByZWR1Y2VzIHRvIG1pbmltdW0gdmVydGV4IHN1YnNldCBjb25uZWN0ZWQgY292ZXJpbmcgYWxsIHZhbHVlcy4gVGhlIHZpcnR1YWwgdHJlZSBidWlsdCBmcm9tIGFsbCAybiBub2RlcyB3aXRoIGFsbCBwYWlycy
BhbmQgTENBIG5vZGVzIHdpbGwgYmUgbGFyZ2UsIGJ1dCBjYW4gYmUgY29uc3RydWN0ZWQgZWZmaWNpZW50bHkuCgovLyBJbXBsZW1lbnRhdGlvbiBkZXRhaWxzOgoKLy8gU2luY2UgZWFjaCB2YWx1ZSBhcHBlYX
JzIGV4YWN0bHkgdHdpY2UsIHdlIGhhdmUgMm4gbm9kZXMuCi8vIFdlJ2xsIGNvbGxlY3QgYWxsIDJuIG5vZGVzIChhbGwgdmVydGljZXMpLCBzb3J0IGJ5IHRpbltdLCBhbmQgYnVpbGQgdmlydHVhbCB0cmVlIG
92ZXIgdGhlbS4KLy8gV2FpdCwgcHJvYmxlbSBzYXlzOiBjaG9vc2UgYSBjb25uZWN0ZWQgc3Vic2V0IGNvdmVyaW5nIGFsbCB2YWx1ZXMsIGVhY2ggdmFsdWUgYXQgbGVhc3Qgb25jZS4KLy8gVGhlIG1pbmltYW
wgY29zdCBpcyBhY2hpZXZlZCBieSBwaWNraW5nIGV4YWN0bHkgb25lIHZlcnRleCBwZXIgdmFsdWUgb3IgbW9yZSwgYnV0IG11c3QgYmUgY29ubmVjdGVkLgoKLy8gSWRlYToKLy8gV2UgaGF2ZSAybiBub2Rlcy
wgZWFjaCB2YWx1ZSBhcHBlYXJzIHR3aWNlLgovLyBDb3N0IG9mIHZlcnRleCBpIGlzIDJeaSAodmVydGV4IGluZGV4IGkgZnJvbSAxIHRvIDJuKS4KLy8gV2Ugd2FudCB0byBwaWNrIGEgY29ubmVjdGVkIHN1Yn
NldCBjb3ZlcmluZyBhbGwgdmFsdWVzLgoKLy8gT2JzZXJ2YXRpb246Ci8vIEZvciBlYWNoIHZhbHVlLCBwaWNrIG9uZSBvZiB0aGUgdHdvIHZlcnRpY2VzICh0aGUgY2hlYXBlciB2ZXJ0ZXggYW1vbmcgdGhlIH
R3bykgb3IgYm90aCBpZiBuZWVkZWQuCi8vIEJ1dCBzdWJzZXQgbXVzdCBiZSBjb25uZWN0ZWQuCgovLyBUaGUgcHJvYmxlbSBpcyBrbm93biBhcyBTdGVpbmVyIHRyZWUgb24gdHJlZSBmb3IgdGVybWluYWxzIC
h0aGUgY2hvc2VuIHZlcnRpY2VzIGZvciBlYWNoIHZhbHVlKS4KLy8gV2Ugd2FudCB0byBzZWxlY3Qgb25lIHZlcnRleCBwZXIgdmFsdWUgdG8gbWluaW1pemUgdG90YWwgY29zdCBwbHVzIGNvbm5lY3RpbmcgcG
F0aCBjb3N0LgoKLy8gQXBwcm9hY2g6Ci8vIEZvciBlYWNoIHZhbHVlLCBwaWNrIHRoZSBjaGVhcGVyIHZlcnRleCBvZiB0aGUgdHdvIHZlcnRpY2VzLiBUaGVzZSBhcmUgdGhlIHRlcm1pbmFscy4KLy8gQ29uc3
RydWN0IHZpcnR1YWwgdHJlZSBmcm9tIHRoZXNlIHRlcm1pbmFscy4KLy8gT24gdmlydHVhbCB0cmVlLCBEUCB0byBmaW5kIG1pbmltYWwgY29zdCBjb25uZWN0ZWQgc3VidHJlZSBjb3ZlcmluZyBhbGwgdGVybW
luYWxzLgoKLy8gQnV0IHRoZSBwcm9ibGVtIHJlcXVpcmVzIGF0IGxlYXN0IG9uZSB2ZXJ0ZXggcGVyIHZhbHVlLCBzbyB3ZSBwaWNrIHRoZSBjaGVhcGVyIHZlcnRleCBwZXIgdmFsdWUgYXMgdGVybWluYWwuCi
8vIFRoZW4gY29ubmVjdCB0aGVzZSB0ZXJtaW5hbHMgd2l0aCBtaW5pbWFsIHN1YnRyZWUuCgovLyBWaXJ0dWFsIHRyZWUgYnVpbGRpbmc6Ci8vIDEpIFNvcnQgdGVybWluYWxzIGJ5IHRpbgovLyAyKSBJbnNlcn
QgTENBcyBvZiBjb25zZWN1dGl2ZSB0ZXJtaW5hbHMKLy8gMykgU29ydCBhbGwgYW5kIGJ1aWxkIHRyZWUgd2l0aCBzdGFjawoKLy8gRFAgb24gdmlydHVhbCB0cmVlOgovLyBGb3IgZWFjaCBub2RlOgovLyBpZi
Bub2RlIGlzIHRlcm1pbmFsIChvcmlnaW5hbCBjaG9zZW4gdmVydGV4KSwgZHBbbm9kZV0gPSBjb3N0W25vZGVdCi8vIGVsc2UgZHBbbm9kZV0gPSBzdW0gb2YgZHBbY2hpbGRdCgovLyBSZXR1cm4gZHBbcm9vdF
0gYW5kIG5vZGVzIGluY2x1ZGVkCgovLyBXZSdsbCByZWNvbnN0cnVjdCB0aGUgc29sdXRpb24gYnkgaW5jbHVkaW5nIGFsbCBub2RlIGluIHRoZSBkcCBzdWJ0cmVlLgoKLy8gTGV0J3MgaW1wbGVtZW50IHRoaX
MuCgpsb25nIGxvbmcgY29zdChpbnQgaSkgewogICAgLy8gY29zdCBpcyAyXmkKICAgIC8vIGkgdXAgdG8gNGU1LCAyXmkgaXMgdG9vIGJpZyBmb3IgbG9uZyBsb25nCiAgICAvLyBTbyB3ZSBzdG9yZSB2ZXJ0aW
NlcyBhbmQgb3V0cHV0IHRoZW0uIFRoZSBwcm9ibGVtIG9ubHkgYXNrcyB0byBwcmludCB2ZXJ0aWNlcy4KICAgIC8vIFNvIHdlIG9ubHkgbmVlZCB0byBmaW5kIHN1YnNldCBvZiB2ZXJ0aWNlcy4KICAgIC8vIE
J1dCBwcm9ibGVtIHNheXMgY29zdCBpcyAyXmkgZm9yIHZlcnRleCBpLgogICAgLy8gMl5pIGNhbiBiZSBodWdlIChpIHVwIHRvIDRlNSksIGNhbid0IHN0b3JlIGV4cGxpY2l0bHkuCiAgICAvLyBXZSBvbmx5IG
5lZWQgbWluaW1hbCBzdWJzZXQsIG5vIG5lZWQgdG8gb3V0cHV0IGNvc3QuCiAgICAvLyBTbyB3ZSBjb21wYXJlIGNvc3QgYnkgaSAoc21hbGxlciBpIG1lYW5zIHNtYWxsZXIgY29zdCBiZWNhdXNlIDJeaSBncm
93cyB3aXRoIGkpCiAgICAvLyBBY3R1YWxseSAyXmkgZ3Jvd3MgZXhwb25lbnRpYWxseSB3aXRoIGksIHNvIHBpY2tpbmcgdmVydGV4IHdpdGggc21hbGxlciBpIGlzIGNoZWFwZXIuCiAgICAvLyBTbyBjb3N0IG
9yZGVyIGJ5IGkgYXNjZW5kaW5nLgogICAgLy8gV2UnbGwgcGljayB0aGUgdmVydGV4IHdpdGggc21hbGxlciBpIGZvciBlYWNoIHZhbHVlLgogICAgcmV0dXJuIGk7Cn0KCmludCBtYWluKCkgewogICAgaW9zOj
pzeW5jX3dpdGhfc3RkaW8oZmFsc2UpOwogICAgY2luLnRpZShudWxscHRyKTsKICAgIGNpbiA+PiBuOwogICAgaW50IHRvdGFsID0gMipuOwogICAgZm9yIChpbnQgaSA9IDE7IGkgPD0gdG90YWw7IGkrKykgew
ogICAgICAgIGNpbiA+PiBhW2ldOwogICAgfQogICAgZm9yIChpbnQgaSA9IDE7IGkgPD0gdG90YWw7IGkrKykgewogICAgICAgIGlmIChwb3NbYVtpXV0uZmlyc3QgPT0gMCkgcG9zW2FbaV1dLmZpcnN0ID0gaT
sKICAgICAgICBlbHNlIHBvc1thW2ldXS5zZWNvbmQgPSBpOwogICAgfQogICAgZm9yIChpbnQgaSA9IDE7IGkgPCB0b3RhbDsgaSsrKSB7CiAgICAgICAgaW50IHYsdTsKICAgICAgICBjaW4gPj4gdiA+PiB1Ow
ogICAgICAgIGdbdl0ucHVzaF9iYWNrKHUpOwogICAgICAgIGdbdV0ucHVzaF9iYWNrKHYpOwogICAgfQoKICAgIC8vIFJvb3QgYXQgMQogICAgZGVwdGhbMV0gPSAwOwogICAgZGZzKDEsMSk7CgogICAgLy8gRm
9yIGVhY2ggdmFsdWUsIHBpY2sgY2hlYXBlciB2ZXJ0ZXggKHNtYWxsZXIgaSkgYXMgdGVybWluYWwKICAgIHZlY3RvcjxpbnQ+IHRlcm1pbmFsczsKICAgIGZvciAoaW50IGkgPSAxOyBpIDw9IG47IGkrKykgew
ogICAgICAgIGlmIChwb3NbaV0uZmlyc3QgPCBwb3NbaV0uc2Vjb25kKSB0ZXJtaW5hbHMucHVzaF9iYWNrKHBvc1tpXS5maXJzdCk7CiAgICAgICAgZWxzZSB0ZXJtaW5hbHMucHVzaF9iYWNrKHBvc1tpXS5zZW
NvbmQpOwogICAgfQoKICAgIC8vIEFkZCBMQ0FzIG9mIHRlcm1pbmFscwogICAgLy8gU29ydCB0ZXJtaW5hbHMgYnkgdGluCiAgICBzb3J0KHRlcm1pbmFscy5iZWdpbigpLCB0ZXJtaW5hbHMuZW5kKCksIFtdKG
ludCB4LGludCB5KXtyZXR1cm4gdGluW3hdPHRpblt5XTt9KTsKCiAgICB2ZWN0b3I8aW50PiBub2RlcyA9IHRlcm1pbmFsczsKCiAgICAvLyBBZGQgTENBcyBvZiBjb25zZWN1dGl2ZSB0ZXJtaW5hbHMKICAgIG
ZvciAoc2l6ZV90IGkgPSAxOyBpIDwgdGVybWluYWxzLnNpemUoKTsgaSsrKSB7CiAgICAgICAgaW50IHcgPSBsY2EodGVybWluYWxzW2ktMV0sIHRlcm1pbmFsc1tpXSk7CiAgICAgICAgbm9kZXMucHVzaF9iYW
NrKHcpOwogICAgfQoKICAgIC8vIFJlbW92ZSBkdXBsaWNhdGVzCiAgICBzb3J0KG5vZGVzLmJlZ2luKCksIG5vZGVzLmVuZCgpLCBbXShpbnQgeCxpbnQgeSl7cmV0dXJuIHRpblt4XTx0aW5beV07fSk7CiAgIC
Bub2Rlcy5lcmFzZSh1bmlxdWUobm9kZXMuYmVnaW4oKSwgbm9kZXMuZW5kKCkpLCBub2Rlcy5lbmQoKSk7CgogICAgLy8gQnVpbGQgdmlydHVhbCB0cmVlCiAgICAvLyBTb3J0IGJ5IHRpbgogICAgdmVjdG9yPG
ludD4gc3RhY2s7CiAgICBmb3IgKGludCB2IDogbm9kZXMpIHsKICAgICAgICB2aXJ0dWFsX3RyZWVbdl0uY2xlYXIoKTsKICAgICAgICBpc19vcmlnaW5hbFt2XSA9IGZhbHNlOwogICAgfQoKICAgIGZvciAoaW
50IHYgOiB0ZXJtaW5hbHMpIHsKICAgICAgICBpc19vcmlnaW5hbFt2XSA9IHRydWU7CiAgICB9CgogICAgc3RhY2suY2xlYXIoKTsKICAgIGZvciAoaW50IHYgOiBub2RlcykgewogICAgICAgIHdoaWxlICghc3
RhY2suZW1wdHkoKSAmJiAhaXNfYW5jZXN0b3Ioc3RhY2suYmFjaygpLCB2KSkgewogICAgICAgICAgICBzdGFjay5wb3BfYmFjaygpOwogICAgICAgIH0KICAgICAgICBpZiAoIXN0YWNrLmVtcHR5KCkpIHsKIC
AgICAgICAgICAgdmlydHVhbF90cmVlW3N0YWNrLmJhY2soKV0ucHVzaF9iYWNrKHYpOwogICAgICAgIH0KICAgICAgICBzdGFjay5wdXNoX2JhY2sodik7CiAgICB9CgogICAgLy8gRFAgb24gdmlydHVhbCB0cm
VlCiAgICAvLyBkcFt2XVswXSA9IG1pbmltYWwgY29zdCBpZiB2IG5vdCBjaG9zZW4KICAgIC8vIGRwW3ZdWzFdID0gbWluaW1hbCBjb3N0IGlmIHYgY2hvc2VuCiAgICAvLyBJZiB2IGlzIHRlcm1pbmFsLCBkcF
t2XVswXSA9IElORiAoY2FuJ3Qgbm90IGNob29zZSB0ZXJtaW5hbCkKCiAgICBjb25zdCBsb25nIGxvbmcgSU5GID0gMWUxODsKICAgIHVub3JkZXJlZF9tYXA8aW50LCBwYWlyPGxvbmcgbG9uZyxsb25nIGxvbm
c+PiBkcDsKCiAgICBmdW5jdGlvbjx2b2lkKGludCk+IGRmc19kcCA9IFsmXShpbnQgdikgewogICAgICAgIGxvbmcgbG9uZyBzdW0wID0gMCwgc3VtMSA9IDA7CiAgICAgICAgZm9yIChpbnQgdSA6IHZpcnR1YW
xfdHJlZVt2XSkgewogICAgICAgICAgICBkZnNfZHAodSk7CiAgICAgICAgICAgIHN1bTAgKz0gZHBbdV0uc2Vjb25kOyAvLyBjaGlsZCBtdXN0IGJlIGNob3NlbiBpZiBwYXJlbnQgbm90IGNob3NlbgogICAgIC
AgICAgICBzdW0xICs9IG1pbihkcFt1XS5maXJzdCwgZHBbdV0uc2Vjb25kKTsKICAgICAgICB9CiAgICAgICAgaWYgKGlzX29yaWdpbmFsW3ZdKSB7CiAgICAgICAgICAgIC8vIHRlcm1pbmFsIG11c3QgYmUgY2
hvc2VuCiAgICAgICAgICAgIGRwW3ZdLmZpcnN0ID0gSU5GOwogICAgICAgICAgICBkcFt2XS5zZWNvbmQgPSAoMUxMIDw8IHYpICsgc3VtMTsgLy8gY29zdCA9IDJediArIGNoaWxkcmVuCiAgICAgICAgICAgIC
8vIEJ1dCAyXnYgaXMgaHVnZSwgY2FuJ3Qgc3RvcmUKICAgICAgICAgICAgLy8gV2UgdXNlIHYgYXMgY29zdCBwcm94eTogc21hbGxlciB2IG1lYW5zIHNtYWxsZXIgY29zdAogICAgICAgICAgICAvLyBTbyB3ZS
B1c2UgdiBhcyBjb3N0IGRpcmVjdGx5IGZvciBjb21wYXJpc29uCiAgICAgICAgICAgIC8vIFdlIHdpbGwgY29tcGFyZSBzdW1zIG9mIHYgb25seSwgd2hpY2ggaXMgc3VtIG9mIGluZGljZXMKICAgICAgICAgIC
AgLy8gSXQncyBub3QgZXhhY3QgYnV0IHdpbGwgYmUgY29uc2lzdGVudCBiZWNhdXNlIDJediBncm93cyBleHBvbmVudGlhbGx5CiAgICAgICAgICAgIC8vIFNvIHdlIHJlY29uc2lkZXI6IHdlIGNhbid0IHN1bS
AyXnYsIGJ1dCB3ZSBvbmx5IG5lZWQgc3Vic2V0LCBub3QgY29zdAogICAgICAgICAgICAvLyBTbyBsZXQncyB0cmVhdCBjb3N0IGFzIHYgKGluZGV4KSwgcGlja2luZyBtaW5pbWFsIHN1bSBvZiBpbmRpY2VzCi
AgICAgICAgICAgIC8vIEZvciBkcCwgc3VtIG9mIGluZGljZXMgaXMgdG8gYmUgbWluaW1pemVkCiAgICAgICAgICAgIC8vIFNvIGRwW3ZdLnNlY29uZCA9IHYgKyBzdW0xCiAgICAgICAgICAgIGRwW3ZdLnNlY2
9uZCA9IHYgKyBzdW0xOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIHYgbm90IHRlcm1pbmFsLCBjYW4gY2hvb3NlIG9yIG5vdAogICAgICAgICAgICBkcFt2XS5maXJzdCA9IHN1bTA7CiAgICAgIC
AgICAgIGRwW3ZdLnNlY29uZCA9ICB2ICsgc3VtMTsKICAgICAgICB9CiAgICB9OwoKICAgIGRmc19kcChub2Rlc1swXSk7CgogICAgLy8gUmVjb3ZlciBzb2x1dGlvbgogICAgdmVjdG9yPGludD4gYW5zd2VyOw
oKICAgIGZ1bmN0aW9uPHZvaWQoaW50LGJvb2wpPiBkZnNfcmVjb3ZlciA9IFsmXShpbnQgdiwgYm9vbCBtdXN0X2Nob29zZSkgewogICAgICAgIGlmIChtdXN0X2Nob29zZSkgewogICAgICAgICAgICBhbnN3ZX
IucHVzaF9iYWNrKHYpOwogICAgICAgICAgICBmb3IgKGludCB1IDogdmlydHVhbF90cmVlW3ZdKSB7CiAgICAgICAgICAgICAgICBpZiAoZHBbdV0uZmlyc3QgPCBkcFt1XS5zZWNvbmQpIGRmc19yZWNvdmVyKH
UsIGZhbHNlKTsKICAgICAgICAgICAgICAgIGVsc2UgZGZzX3JlY292ZXIodSwgdHJ1ZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBmb3IgKGludCB1IDogdmlydHVhbF90cm
VlW3ZdKSB7CiAgICAgICAgICAgICAgICBkZnNfcmVjb3Zlcih1LCB0cnVlKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH07CgogICAgaWYgKGRwW25vZGVzWzBdXS5maXJzdCA8IGRwW25vZGVzWzBdXS
5zZWNvbmQpIGRmc19yZWNvdmVyKG5vZGVzWzBdLCBmYWxzZSk7CiAgICBlbHNlIGRmc19yZWNvdmVyKG5vZGVzWzBdLCB0cnVlKTsKCiAgICAvLyBPdXRwdXQKICAgIGNvdXQgPDwgKGludClhbnN3ZXIuc2l6ZS
gpIDw8ICJcbiI7CiAgICBmb3IgKGludCB4IDogYW5zd2VyKSBjb3V0IDw8IHggPDwgIiAiOwogICAgY291dCA8PCAiXG4iOwoKICAgIHJldHVybiAwOwp9Cg==' | base64 -d > /app/main.cpp; tmux wa
it -S done
root@90901b322dde:/app#
