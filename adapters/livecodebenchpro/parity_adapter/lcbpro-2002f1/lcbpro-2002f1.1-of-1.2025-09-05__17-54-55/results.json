{
    "id": "fc7bfab4-119e-42db-ae31-c12c570a12e0",
    "trial_name": "lcbpro-2002f1.1-of-1.2025-09-05__17-54-55",
    "task_id": "lcbpro-2002f1",
    "instruction": "LiveCodeBench Pro (Mini) - external judge.\n\nThe agent must create a C++17 solution file at /app/main.cpp.\nThis task does not include local test cases. Instead, the test harness:\n  1) POSTs the code to the external judge (/submit) to get a sid,\n  2) polls GET /result/{sid}?short=1 until status == \"done\",\n  3) passes only if the judge returns passed == true.\n\nEnvironment variables (overridable at runtime):\n  - BASE_URL: judge base URL (default http://38.80.122.117:8081)\n  - PID: problem id (default 2002F1)\n  - LANG: language (default cpp)\n  - CODE_PATH: path to code (default /app/main.cpp)\n  - JUDGE_TIMEOUT_SECS: poll timeout seconds (default 120)\n\nThis is the easy version of the problem. In this version, $n=m$ and the time limit is lower. You can make hacks only if both versions of the problem are solved.\n\nIn the court of the Blue King, Lelle and Flamm are having a performance match. The match consists of several rounds. In each round, either Lelle or Flamm wins.\n\nLet $W_L$ and $W_F$ denote the number of wins of Lelle and Flamm, respectively. The Blue King considers a match to be successful if and only if:\n\n- after every round, $\\gcd(W_L,W_F)\\le 1$;\n- at the end of the match, $W_L\\le n, W_F\\le m$.\n\nNote that $\\gcd(0,x)=\\gcd(x,0)=x$ for every non-negative integer $x$.\n\nLelle and Flamm can decide to stop the match whenever they want, and the final score of the performance is $l \\cdot W_L + f \\cdot W_F$.\n\nPlease help Lelle and Flamm coordinate their wins and losses such that the performance is successful, and the total score of the performance is maximized.\n\n### Input\n\nThe first line contains an integer $t$ ($1\\leq t \\leq 10^3$) -- the number of test cases.\n\nThe only line of each test case contains four integers $n$, $m$, $l$, $f$ ($2\\leq n\\leq m \\leq 2\\cdot 10^7$, $1\\leq l,f \\leq 10^9$, $\\bf{n=m}$): $n$, $m$ gives the upper bound on the number of Lelle and Flamm's wins, $l$ and $f$ determine the final score of the performance.\n\nUnusual additional constraint: it is guaranteed that, for each test, there are no pairs of test cases with the same pair of $n$, $m$.\n\n### Output\n\nFor each test case, output a single integer -- the maximum total score of a successful performance.\n\n### Examples\n\n#### Input #1\n\n```\n\n8\n\n3 3 2 5\n\n4 4 1 4\n\n6 6 2 2\n\n7 7 2 3\n\n9 9 9 1\n\n2 2 1 4\n\n5 5 1 4\n\n8 8 6 7\n\n```\n\n#### Output #1\n\n```\n19\n17\n18\n33\n86\n9\n24\n86\n```\n\n#### Input #2\n\n```\n\n1\n\n20000000 20000000 1341 331\n\n```\n\n#### Output #2\n\n```\n33439999007\n```\n\n#### Input #3\n\n```\n\n2\n\n1984 1984 19 84\n\n9982 9982 44 35\n\n```\n\n#### Output #3\n\n```\n204143\n788403\n```\n\n### Note\n\nIn the first test case, a possible performance is as follows:\n\n- Flamm wins, $\\gcd(0,1)=1$.\n- Lelle wins, $\\gcd(1,1)=1$.\n- Flamm wins, $\\gcd(1,2)=1$.\n- Flamm wins, $\\gcd(1,3)=1$.\n- Lelle wins, $\\gcd(2,3)=1$.\n- Lelle and Flamm agree to stop the match.\n\nThe final score is $2\\cdot2+3\\cdot5=19$.\n\nIn the third test case, a possible performance is as follows:\n\n- Flamm wins, $\\gcd(0,1)=1$.\n- Lelle wins, $\\gcd(1,1)=1$.\n- Lelle wins, $\\gcd(2,1)=1$.\n- Lelle wins, $\\gcd(3,1)=1$.\n- Lelle wins, $\\gcd(4,1)=1$.\n- Lelle wins, $\\gcd(5,1)=1$.\n- Flamm wins, $\\gcd(5,2)=1$.\n- Flamm wins, $\\gcd(5,3)=1$.\n- Flamm wins, $\\gcd(5,4)=1$.\n- Lelle and Flamm agree to stop the match.\n\nThe final score is $5\\cdot2+4\\cdot2=18$. Note that Lelle and Flamm can stop the match even if neither of them has $n$ wins.",
    "is_resolved": false,
    "failure_mode": "unset",
    "parser_results": {
        "test_external_judge": "failed"
    },
    "recording_path": "2025-09-05__17-54-55/lcbpro-2002f1/lcbpro-2002f1.1-of-1.2025-09-05__17-54-55/sessions/agent.cast",
    "total_input_tokens": 1380,
    "total_output_tokens": 868,
    "trial_started_at": "2025-09-06T01:13:26.370289+00:00",
    "trial_ended_at": "2025-09-06T01:14:08.953239+00:00",
    "agent_started_at": "2025-09-06T01:13:34.107490+00:00",
    "agent_ended_at": "2025-09-06T01:13:46.657759+00:00",
    "test_started_at": "2025-09-06T01:13:50.462977+00:00",
    "test_ended_at": "2025-09-06T01:13:53.914496+00:00"
}